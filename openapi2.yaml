---
swagger: "2.0"
info:
  version: "2018-06-30T00:05:47Z"
  title: "API da Quanta V1"
  description: |
    O Atenaprev.Net possuirá uma API REST para interagir com seus recursos, através JSON sobre HTTP, usando os verbos HTTP GET, PUT e POST. Cada recurso possui sua própria URL e pode ser manipulado de maneira isolada.
  x-logo:
    url: "http://unicredafinidade.com.br/admin/arquivos/images/logo-quanta.png"
    backgroundColor: "#FFFFFF"
    altText: "Quanta previdência"
tags:
- name: "Acesso – Ambientes e URL"
  description: |
    Estão disponibilizados 2 ambientes para acesso à API. Um ambiente de homologação e um ambiente de produção. Os Acessos dever ser feitos exclusivamente via protocolo seguro HTTPS.

        • O ambiente de Homologação deve ser acessado pelo endereço: HTTPS://api-hom.quanta-previdencia.com.br.
        • O ambiente de Produção deve ser acessado pelo endereço: HTTPS://api.quanta-previdencia.com.br.
- name: "Autenticação"
  description: |
    Todo acesso à API é feito do ponto de vista de um usuário existente no Atenaprev.Net. assim sendo, toda requisição à API deverá ser autenticada. A autenticação é feita via Owin Bearer Authentication. Em toda requisição, deve-se fornecer o acess_token da sessão HTTP no header da requisição conforme exemplo abaixo:

    Authorization: Bearer mHNrKEXC_jiwX8CCUyEQQM55fvdJZMh4_4SoopdgMQwPKMIWN07gCt45zE4L4FmabQZ0qZtpfsgImdeTxP1BokSANPqvr1TZZYw99rrCI1vpjs_tT4YwUfGNSRzMeQnT9X_aT0ROvLGM9V_ JotCytNRXg-fcQqQrs9XfnGpuCjokDxu1HUuzdVHpoKKoIvBs2SFbnzO_H4NqTtoMJsaIGIbcm0
- name: "CORS – Compartilhamento de Recursos de Origem Cruzada"
  description: |
    CORS é um mecanismo que permite que muitos recursos em uma página web sejam solicitados a partir de outro domínio fora do domínio a partir do qual se originou o recurso.
    Para iniciar uma solicitação de origem cruzada, um navegador envia o pedido com a chave Origin no cabeçalho HTTP. O valor desta chave é o domínio que serviu a página. Se o servidor permite a solicitação, ele envia a chave Access-Control-Allow-Origin (ACAO) no cabeçalho da resposta. O valor da chave ACAO indica que locais de origem são permitidas requisições de recursos. As chaves estão demonstradas no trecho abaixo:

    Origin: http://www.fabrikan.com

    Access-Control-Allow-Origin: http://www.fabrikan.com
host: apistudio.io
basePath: /try/c7528a9b-5992-4ce0-8c76-8a9083e34b49
schemes:
- "https"
paths:
  /api/v1/acesso/login:
    post:
      summary: "login"
      description: "Serviço que deverá ser consumido para realizar o Login na aplicação."
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/LoginBody"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/LoginRetorno"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/acesso/login")
                  .post(
                    RequestBody.create(
                     MediaType.parse("application/json"),
           "{\n" +
           "  \"Login\": \"Teste\",\n" +
           "  \"Password\": \"senhaTeste\"\n" +
           "}")
                  )
                  .addHeader("Authorization", "123accb67jkacxmnfgjh81")
                  .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/acesso/login"

          response = requests.post(url, json={
            "Login": "Teste",
            "Password": "senhaTeste"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/acesso/login');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
            "Login": "Teste",
            "Password": "senhaTeste"
          }');

          $response = $request->send();

          echo $response->getBody();
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:646805913755:function:api-quanta-authenticate-dev/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"

  /api/v1/beneficio/participante/Ativos:
    get:
      summary: "GetParticipantesAtivos"
      description: "Retorna os participantes ativos."
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "codigoplano"
        default: "4"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/Ativos")
                  .get()
                  .addHeader("Authorization", "123accb67jkacxmnfgjh81")
                  .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/Ativos"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/Ativos');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ParticipanteAtivoRetorno"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/Ativos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/Instituidor:
    get:
      summary: "GetInstituidor"
      description: "Retorna os Instituidores que contém vínculo com um determinado plano."
      produces:
      - "application/json"
      parameters:
      - name: "codigoPlano"
        description: "Identificador do plano"
        default: "4"
        in: "query"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                      "/api/v1/beneficio/participante/Instituidor"
                  )
                  .get()
                  .addHeader("Authorization",
                     "123accb67jkacxmnfgjh81"
                     )
                  .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/Instituidor"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/Instituidor');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getInstituidorRetorno"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/Instituidor"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/TitulosCobrancaEmpresa:
    get:
      produces:
      - "application/json"
      summary: "GetTitulosCobranca"
      description: "Retorna os Títulos de Cobrança destinados ao Empregador informado."
      parameters:
      - name: "competencia"
        in: "query"
        description: "Data de Competência"
        required: false
        type:
        - "string"
        - "null"
      - name: "diaVencimento"
        in: "header"
        description: "Dia do Vencimento"
        required: false
        type:
        - "string"
        - "null"
      - name: "cnpjEmpregador"
        in: "query"
        description: "CNPJ Empregador"
        required: false
        type: "string"
      - name: "tipoCobranca"
        in: "query"
        description: "Tipo de Cobrança, podendo ser:"
        enum:
        - "Desconto em Folha"
        - "Contribuição Mensal Empresa"
        required: false
        type:
        - "string"
        - "null"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "status"
        in: "query"
        description: "Status, pode ser:"
        enum:
        - "Em Aberto"
        - "Pago"
        - "Cancelado"
        required: false
        type:
        - "string"
        - "null"
      - name: "codigoContrato"
        in: "query"
        description: "Código do Contrato Contribuição"
        required: false
        type:
        - 'string'
        - 'null'
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/TitulosCobrancaEmpresa
                        ?cnpjEmpregador=89055021321")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/TitulosCobrancaEmpresa"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cnpjEmpregador': '89055021321'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/
           TitulosCobrancaEmpresa
           ?cnpjEmpregador=89055021321');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getTitulosCobranca"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/TitulosCobrancaEmpresa"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/adesoesPorPeriodo:
    get:
      produces:
      - "application/json"
      summary: "GetPropostasAdesaoPorPeriodo"
      description: "Retorna as propostas efetivadas no período passado como parâmetro na URL."
      parameters:
      - name: "dataInicio"
        description: "Data de início das propostas"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "cnpjEmpregador"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "dataFim"
        description: "Data fim das propostas"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/adesoesPorPeriodo
          ?dataInicio=2010-01-31T09%3A03%3A32
          &dataFim=2010-01-31T09%3A03%3A32
          &codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
             "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/adesoesPorPeriodo"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'dataInicio': '2010-01-31T09:05:54',
             'dataFim': '2010-02-10T12:05:54',
             'codigoInstituidor': '4512'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/adesoesPorPeriodo
            ?dataInicio=2010-01-31T09%3A03%3A32
            &dataFim=2010-01-31T09%3A03%3A32
            &codigoInstituidor=45');

          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getAdesaoPorPeriodo"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/adesoesPorPeriodo"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/aporteParticipante/contribuicoesMovimentacaoDiaria:
    get:
      produces:
      - "application/json"
      summary: "GetContribuicoesAporteMovimentacaoDiaria"
      description: "Retorna as contribuições de aporte do participante para a exclusão da movimentação diária."
      parameters:
      - name: "nome"
        description: "Nome do participante"
        in: "query"
        required: false
        type: "string"
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do Plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                  /aporteParticipante
                  /contribuicoesMovimentacaoDiaria
                  ?cpf=04905561070")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/aporteParticipante/contribuicoesMovimentacaoDiaria"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '05561084080'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
            /aporteParticipante/
            contribuicoesMovimentacaoDiaria
            ?cpf=04905561070');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getContribuicoesAporteMovimentacaoDiaria"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/aporteParticipante/contribuicoesMovimentacaoDiaria"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/aporteProgramado:
    get:
      produces:
      - "application/json"
      summary: "GetAportesParticipanteByInscricaoCpf"
      description: "Retorna a relação de Aportes Programados filtrados pelo identificador da adesão passada na URL."
      parameters:
      - name: "tipo"
        description: "Tipo do aporte"
        enum:
        - "Programado"
        - "Único"
        in: "query"
        required: false
        type: "string"
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do Plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do Participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/aporteProgramado
                  ?cpf=04905561070&codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/aporteProgramado"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '05561084080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/aporteProgramado
             ?cpf=04905561070&codigoInstituidor=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getAporteParticipanteByInscricaoCpf"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/aporteProgramado"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/aporteProgramado/atualizar:
    post:
      produces:
      - "application/json"
      summary: "UpdateAporteProgramado"
      description: ""
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/aporteProgramado/atualizar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                     "    \"inscricaoQuanta\": \"22690\",\n" +
                     "    \"origemAporte\": \"Participante\",\n" +
                     "    \"codigoPlano\": 2,\n" +
                     "    \"diaVencimento\": 5,\n" +
                     "    \"fimAporte\": \"2014-12-01T00:00:00\",\n" +
                     "    \"codigoAngariador\": 2,\n" +
                     "    \"nomeAngariador\": \"Nome do Angariador\",\n" +
                     "    \"diaVencimento\": 5,\n" +
                     "    \"userName\": \"nomeUsuarioSOP\"\n" +
                 "}"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/aporteProgramado/atualizar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
              "inscricaoQuanta": "22690",
              "origemAporte": "Participante",
              "codigoPlano": 2,
              "fimAporte": "2014-12-01T00:00:00",
              "codigoAngariador": 2,
              "nomeAngariador": "Nome do Angariador",
              "diaVencimento": 5,
              "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/aporteProgramado/atualizar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
              "inscricaoQuanta": "22690",
              "origemAporte": "Participante",
              "codigoPlano": 2,
              "diaVencimento": 5,
              "fimAporte": "2014-12-01T00:00:00",
              "codigoAngariador": 2,
              "nomeAngariador": "Nome do Angariador",
              "diaVencimento": 5,
              "userName": "nomeUsuarioSOP"
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateAporteProgramadoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/aporteProgramado/atualizar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/aporteProgramado/cancelar:
    post:
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateAporteProgramadoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                      "/api/v1/beneficio/participante/
                      aporteProgramado/cancelar"
                  )
                  .post(RequestBody.create(
                          MediaType.parse("application/json"), "{\n" +
                            "  \"inscricaoQuanta\": \"1234\",\n" +
                            "  \"origemAporte\": \"Participante\",\n" +
                            "  \"codigoPlano\": 2,\n" +
                            "  \"userName\": \"nomeUsuarioSOP\"\n" +
                   "}"))
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                  )
                  .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
          /aporteProgramado/cancelar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
             "inscricaoQuanta": "1234",
             "origemAporte": "Participante",
             "codigoPlano": 2,
             "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php
          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/
                            aporteProgramado/cancelar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "1234",
             "origemAporte": "Participante",
             "codigoPlano": 2,
             "userName": "nomeUsuarioSOP"
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateAporteProgramadoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/aporteProgramado/cancelar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/aporteProgramado/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertAporteParticipante"
      description: "Insere um Aporte Programado no sistema."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInserirAporteParticipanteBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
               .url(
                 "/api/v1/beneficio/participante/aporteProgramado
                 /inserir"
               )
               .put(RequestBody.create(
                     MediaType.parse("application/json"), "{\n" +
                       "  \"inscricoesQuanta\": [\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\": 38\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\": 50\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"codigoPlano\": 2,\n" +
                       "  \"inicioAporte\": \"2014-09-01T00:00:00\",\n" +
                       "  \"fimAporte\": \"2014-12-01T00:00:00\",\n" +
                       "  \"origemAporte\": \"Empregador\",\n" +
                       "  \"tipoAporte\": \"unico\",\n" +
                       "  \"diaVencimento\": 15,\n" +
                       "  \"valorAporte\": 90.67,\n" +
                       "  \"numeroDocumentoProducaoDiaria\": 1234,\n" +
                       "  \"codigoAngariador\": 3894,\n" +
                       "  \"nomeAngariador\": \"Quanta Angariador\",\n" +
                       "  \"origemAngariador\": \"RH\",\n" +
                       "  \"formaPagamento\": {\n" +
                       "    \"descricaoFormaPagamento\": \"Débito em Conta\",\n" +
                       "    \"nomeCorrentista\": \"Nome do Correntista para Débito em Conta\",\n" +
                       "    \"cpfCorrentista\": \"12345678900\",\n" +
                       "    \"cnpjCorrentista\": \"12345678901234\",\n" +
                       "    \"codigoBanco\": \"001\",\n" +
                       "    \"codigoAgencia\": \"3025\",\n" +
                       "    \"digitoAgencia\": \"8\",\n" +
                       "    \"numeroConta\": \"123456\",\n" +
                       "    \"digitoConta\": \"2\",\n" +
                       "    \"tipoContaBancaria\": \"Corrente\"\n" +
                       "  },\n" +
                       "  \"userName\": \"nomeUsuarioSOP\"\n" +
                       "}\n"))
               .addHeader("Authorization",
                 "123accb67jkacxmnfgjh81"
               )
               .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/
                aporteProgramado/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
             "inscricoesQuanta": [
                {
                  "inscricaoQuanta": 38
                },
                {
                  "inscricaoQuanta": 50
                }
               ],
            "codigoPlano": 2,
            "inicioAporte": "2014-09-01T00:00:00",
            "fimAporte": "2014-12-01T00:00:00",
            "origemAporte": "Empregador",
              "tipoAporte": "unico",
              "diaVencimento": 15,
              "valorAporte": 90.67,
              "numeroDocumentoProducaoDiaria": 1234,
              "codigoAngariador": 3894,
              "nomeAngariador": "Quanta Angariador",
              "origemAngariador": "RH",
               "formaPagamento": ({
                 "descricaoFormaPagamento": "Débito em Conta",
                 "nomeCorrentista": "Nome do Correntista para Débito em Conta",
                 "cpfCorrentista": "12345678900",
                 "cnpjCorrentista": "12345678901234",
                 "codigoBanco": "001",
                 "codigoAgencia": "3025",
                 "digitoAgencia": "8",
                 "numeroConta": "123456",
                 "digitoConta": "2",
                 "tipoContaBancaria": "Corrente"
               }),
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php
          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/
                           aporteProgramado/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricoesQuanta": [
              {
                "inscricaoQuanta": 38
              },
              {
                "inscricaoQuanta": 50
              }
             ],
            "codigoPlano": 2,
            "inicioAporte": "2014-09-01T00:00:00",
            "fimAporte": "2014-12-01T00:00:00",
            "origemAporte": "Empregador",
            "tipoAporte": "unico",
            "diaVencimento": 15,
            "valorAporte": 90.67,
            "numeroDocumentoProducaoDiaria": 1234,
            "codigoAngariador": 3894,
            "nomeAngariador": "Quanta Angariador",
            "origemAngariador": "RH",
            "formaPagamento": {
              "descricaoFormaPagamento": "Débito em Conta",
              "nomeCorrentista": "Nome do Correntista para Débito em Conta",
              "cpfCorrentista": "12345678900",
              "cnpjCorrentista": "12345678901234",
              "codigoBanco": "001",
              "codigoAgencia": "3025",
              "digitoAgencia": "8",
              "numeroConta": "123456",
              "digitoConta": "2",
              "tipoContaBancaria": "Corrente"
            },
            "userName": "nomeUsuarioSOP"
            }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInserirAporteParticipanteResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/aporteProgramado/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/aporteUnico/cancelar:
    post:
      produces:
      - "application/json"
      summary: "CancelarAporteUnico"
      description: "Cancela um aporte único no sistema"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postCancelarAporteUnicoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                   "/api/v1/beneficio/participante/
                   aporteUnico/cancelar"
                  )
                  .post(RequestBody.create(
                         MediaType.parse("application/json"), "{\n" +
                            "  \"numeroDocumentoProducaoDiaria\": \"1234\",\n" +
                            "  \"codigoPlano\": 2,\n" +
                            "  \"userName\": \"nomeUsuarioSOP\"\n" +
                            "}\n"))
                  .addHeader("Authorization",
                   "123accb67jkacxmnfgjh81"
                  )
                  .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/
                   aporteUnico/cancelar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
             "numeroDocumentoProducaoDiaria": "1234",
             "codigoPlano": 2,
             "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php
          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/
                           aporteUnico/cancelar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "numeroDocumentoProducaoDiaria": "1234",
             "codigoPlano": 2,
             "userName": "nomeUsuarioSOP"
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postCancelarAporteUnicoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/aporteUnico/cancelar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/boletoAporte:
    post:
      produces:
      - "application/json"
      summary: "GetBoletoByAporte"
      description: "Gera e retorna um array de byte do Boleto de Aporte"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postGetBoletoByAporteBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                   "/api/v1/beneficio/participante/boletoAporte"
                  )
                  .post(RequestBody.create(
                          MediaType.parse("application/json"), "{\n" +
                            "  \"inscricaoQuanta\": \"89494\",\n" +
                            "  \"origemAporte\": \"Empregador\",\n" +
                            "  \"tipoAporte\": \"Unico\",\n" +
                            "  \"vencimento\": \"2018-03-25T00:00:00\",\n" +
                            "  \"valorAporte\": 132,\n" +
                            "  \"formaPagamento\": \"Boleto\",\n" +
                            "  \"userName\": \"sop\",\n" +
                            "  \"codigoPlano\": 1\n" +
                            "} \n"))
                  .addHeader("Authorization",
                     "123accb67jkacxmnfgjh81"
                  )
                  .build();

          Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /boletoAporte"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
               "inscricaoQuanta": "89494",
               "origemAporte": "Empregador",
               "tipoAporte": "Unico",
               "vencimento": "2018-03-25T00:00:00",
               "valorAporte": 132,
               "formaPagamento": "Boleto",
               "userName": "sop",
               "codigoPlano": 1
          })
      - lang: 'PHP'
        source: |
          <?php
          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /boletoAporte');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
               "inscricaoQuanta": "89494",
               "origemAporte": "Empregador",
               "tipoAporte": "Unico",
               "vencimento": "2018-03-25T00:00:00",
               "valorAporte": 132,
               "formaPagamento": "Boleto",
               "userName": "sop",
               "codigoPlano": 1
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postGetBoletoByAporteResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/boletoAporte"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/boletoRisco:
    get:
      produces:
      - "application/json"
      summary: "GetBoletoRiscoByIdentificador"
      description: "Retorna o boleto da Cobrança da Apólice de Risco com o número do identificador Seguradora passado no parâmetro."
      parameters:
      - name: "identificadorSeguradora"
        in: "query"
        description: "Número identificador da apólice"
        required: false
        type: "string"
      - name: "dataVencimento"
        description: "Nova de Vencimento"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "novaDataVencimento"
        description: "Nova data de Vencimento"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/boletoRisco
                  ?identificadorSeguradora=04905561070
                  &dataVencimento=2018-12-17T03%3A24%3A00")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/boletoRisco"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'identificadorSeguradora': '05561084080',
             'dataVencimento': '1995-12-17T03%3A24%3A00'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
             /boletoRisco
             ?identificadorSeguradora=04905561070
             &dataVencimento=2018-12-17T03%3A24%3A00');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getBoletoRiscoByIdentificador"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/boletoRisco"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/boletoTituloEmpresa/gerar:
    put:
      produces:
      - "application/json"
      summary: "GetBoletoTitulo"
      description: "Retorna um array de bytes dos boletos dos Identificadores Títulos informados."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/getBoletoTituloBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                    "/api/v1/beneficio/participante
                    /boletoTituloEmpresa
                    /gerar"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                      "  \"identificadoresTitulos\": [\n" +
                      "    {\n" +
                      "      \"identificadorTitulo\": 452\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"identificadorTitulo\": 4524\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"identificadorTitulo\": 7655\n" +
                      "    }\n" +
                      "  ]\n" +
                      "}\n" +
                      "\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /boletoTituloEmpresa
                /gerar"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
             "identificadoresTitulos": [
                 {
                   "identificadorTitulo": 452
                 },
                 {
                   "identificadorTitulo": 4524
                 },
                 {
                   "identificadorTitulo": 7655
                 }
                ]
             })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /boletoTituloEmpresa
                           /gerar');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "identificadoresTitulos": [
                 {
                   "identificadorTitulo": 452
                 },
                 {
                   "identificadorTitulo": 4524
                 },
                 {
                   "identificadorTitulo": 7655
                 }
                ]
             }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getBoletoTituloResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/boletoTituloEmpresa"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/calendarioCobranca:
    get:
      produces:
      - "application/json"
      summary: "GetCalendarioCobranca"
      description: "Retorna os calendários de cobrança para realização da geração da cobrança."
      parameters:
      - name: "formaPagamento"
        description: "Formas de pagamentos podem ser: "
        enum:
        - "Débito em conta"
        - "Boleto Bancário"
        - "Desconto em Folha"
        in: "query"
        required: false
        type: "string"
      - name: "identificadorContrato"
        description: "Identificador do Contrato"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do Plano"
        in: "query"
        required: false
        type: "string"
      - name: "cnpjEmpregador"
        description: "CNPJ do Empregador"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /calendarioCobranca
                  ?identificadorContrato=02877102356
                  &cnpjEmpregador=049055610701
                  &formaPagamento=D%C3%A9bito+em+Conta
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /calendarioCobranca"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'identificadorContrato': '05561084080',
             'codigoPlano': '4',
             'cnpjEmpregador': '049055610701',
             'formaPagamento': 'D%C3%A9bito+em+Conta'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
             /calendarioCobranca
             ?identificadorContrato=02877102356
             &cnpjEmpregador=049055610701
             &formaPagamento=D%C3%A9bito+em+Conta
             &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getCalendarioCobranca"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/calendarioCobranca"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/cobrancasNaoGerada:
    get:
      produces:
      - "application/json"
      summary: "GetCobrancasNaoGerada"
      description: "Retorna as cobranças dos valores das contribuições dos funcionários e contribuições de risco custeadas pela empresa."
      parameters:
      - name: "identificadorContrato"
        in: "query"
        description: "Identificador do Contrato"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        description: "Indicador do Plano"
        required: false
        type: "string"
      - name: "dataReferencia"
        in: "query"
        description: "Data de Referência"
        required: false
        type: "string"
      - name: "cnpjEmpresa"
        in: "query"
        description: "CNPJ da Empresa"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                  /cobrancasNaoGerada
                  ?identificadorContrato=02877102356
                  &cnpjEmpresa=049055610701
                  &dataReferencia=2018-12-17T03%3A24%3A00
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /cobrancasNaoGerada"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'identificadorContrato': '05561084080',
             'codigoPlano': '4',
             'cnpjEmpresa': '049055610701',
             'dataReferencia': '2018-12-17T03%3A24%3A00'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
             /cobrancasNaoGerada
             ?identificadorContrato=02877102356
             &cnpjEmpresa=049055610701
             &dataReferencia=2018-12-17T03%3A24%3A00
             &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getCobrancasNaoGerada"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/cobrancasNaoGerada"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/contratoEmpregador:
    get:
      produces:
      - "application/json"
      summary: "GetContratoEmpregador"
      description: "Retorna os Contratos Empregador"
      parameters:
      - name: "codigoPlano"
        in: "query"
        description: "Identificador do Plano"
        required: false
        type: "string"
      - name: "cnpjEmpregador"
        in: "query"
        description: "CNPJ do Empregador"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                  /contratoEmpregador
                  ?codigoInstituidor=02877102356
                  &cnpjEmpregador=049055610701
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /contratoEmpregador"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'codigoInstituidor': '05561084080',
             'codigoPlano': '4',
             'cnpjEmpregador': '049055610701'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
             /contratoEmpregador
             ?codigoInstituidor=02877102356
             &cnpjEmpregador=049055610701
             &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getContratoEmpregador"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/contratoEmpregador"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/contribuicao/alterar:
    post:
      produces:
      - "application/json"
      summary: "InsertContribuicao"
      description: "Insere nova(s) Contribuição(s) na adesão do participante."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postInsertContribuicaoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                    "/api/v1/beneficio/participante/contribuicao
                    /alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                      "  \"inscricaoQuanta\": \"1234234\",\n" +
                      "  \"contribuicaoPlano\": [\n" +
                      "    {\n" +
                      "      \"valor\": 879.95\n" +
                      "    }\n" +
                      "  ],\n" +
                      "  \"observacao\": \"observações da alteração...\",\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                      "}"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /contribuicao/alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
              "inscricaoQuanta": "1234234",
              "contribuicaoPlano": [
                 {
                  "valor": 879.95
                 }
                ],
              "observacao": "observações da alteração...",
              "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /contribuicao/alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
           "inscricaoQuanta": "1234234",
             "contribuicaoPlano": [
              {
               "valor": 879.95
              }
             ],
           "observacao": "observações da alteração...",
           "userName": "nomeUsuarioSOP"
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postInsertContribuicaoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/contribuicao/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/contribuicao/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertContribuicao"
      description: "Insere nova(s) Contribuição(s) na adesão do participante."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertContribuicaoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                    "/api/v1/beneficio/participante
                    /contribuicao/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                      "  \"inscricaoQuanta\": \"1234234\",\n" +
                      "  \"dataVencimento\": \"2015-05-20T00:00:00\",\n" +
                      "  \"numeroDocumentoProducaoDiaria\": 1234,\n" +
                      "  \"codigoBanco\": \"001\",\n" +
                      "  \"codigoAgencia\": \"3025\",\n" +
                      "  \"digitoAgencia\": \"8\",\n" +
                      "  \"numeroConta\": \"123456\",\n" +
                      "  \"digitoConta\": \"2\",\n" +
                      "  \"tipoContaBancaria\": \"Corrente\",\n" +
                      "  \"codigoPlano\": 2,\n" +
                      "  \"contribuicaoPlano\": [\n" +
                      "    {\n" +
                      "      \"dataCompetencia\": \"2015-05-01T00:00:00\",\n" +
                      "      \"valor\": 879.97\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"dataCompetencia\": \"2015-05-01T00:00:00\",\n" +
                      "      \"valor\": 1000.06\n" +
                      "    }\n" +
                      "  ],\n" +
                      "  \"produtosRisco\": [\n" +
                      "    {\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 938382,\n" +
                      "      \"descricaoProdutoRisco\": \"Invalidez\",\n" +
                      "      \"dataCompetencia\": \"2015-05-01T00:00:00\",\n" +
                      "      \"codigoAngariador\": 1,\n" +
                      "      \"nomeAngariador\": \"Nome do Angariador\",\n" +
                      "      \"valorContribuicao\": 200.99\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 938382,\n" +
                      "      \"descricaoProdutoRisco\": \"Morte\",\n" +
                      "      \"dataCompetencia\": \"2015-05-01T00:00:00\",\n" +
                      "      \"codigoAngariador\": 1,\n" +
                      "      \"nomeAngariador\": \"Nome do Angariador\",\n" +
                      "      \"valorContribuicao\": 150.87\n" +
                      "    }\n" +
                      "  ],\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                      "}\n" +
                      "\n""))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /contribuicao/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
             "inscricaoQuanta": "1234234",
               "dataVencimento": "2015-05-20T00:00:00",
               "numeroDocumentoProducaoDiaria": 1234,
               "codigoBanco": "001",
               "codigoAgencia": "3025",
               "digitoAgencia": "8",
               "numeroConta": "123456",
               "digitoConta": "2",
               "tipoContaBancaria": "Corrente",
               "codigoPlano": 2,
               "contribuicaoPlano": [
                {
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "valor": 879.97
                },
                {
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "valor": 1000.06
                }
               ],
               "produtosRisco": [
                {
                  "identificadorPropostaRiscoSeguradora": 938382,
                  "descricaoProdutoRisco": "Invalidez",
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "codigoAngariador": 1,
                  "nomeAngariador": "Nome do Angariador",
                  "valorContribuicao": 200.99
                },
                {
                  "identificadorPropostaRiscoSeguradora": 938382,
                  "descricaoProdutoRisco": "Morte",
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "codigoAngariador": 1,
                  "nomeAngariador": "Nome do Angariador",
                  "valorContribuicao": 150.87
                }
               ],
               "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /contribuicao/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "1234234",
               "dataVencimento": "2015-05-20T00:00:00",
               "numeroDocumentoProducaoDiaria": 1234,
               "codigoBanco": "001",
               "codigoAgencia": "3025",
               "digitoAgencia": "8",
               "numeroConta": "123456",
               "digitoConta": "2",
               "tipoContaBancaria": "Corrente",
               "codigoPlano": 2,
               "contribuicaoPlano": [
                {
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "valor": 879.97
                },
                {
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "valor": 1000.06
                }
               ],
               "produtosRisco": [
                {
                  "identificadorPropostaRiscoSeguradora": 938382,
                  "descricaoProdutoRisco": "Invalidez",
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "codigoAngariador": 1,
                  "nomeAngariador": "Nome do Angariador",
                  "valorContribuicao": 200.99
                },
                {
                  "identificadorPropostaRiscoSeguradora": 938382,
                  "descricaoProdutoRisco": "Morte",
                  "dataCompetencia": "2015-05-01T00:00:00",
                  "codigoAngariador": 1,
                  "nomeAngariador": "Nome do Angariador",
                  "valorContribuicao": 150.87
                }
               ],
               "userName": "nomeUsuarioSOP"
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertContribuicaoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/contribuicao/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/contribuicoesPassiveisEstorno:
    get:
      produces:
      - "application/json"
      summary: "GetContribuicoesPassiveisEstorno"
      description: "Retorna as contribuições passíveis de estorno"
      parameters:
      - name: "inscricao"
        description: "Inscrição do participante na Quanta"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        description: "Identificador do plano"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /contribuicoesPassiveisEstorno
                  ?cpf=04905561070&codigoInstituidor=45
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /contribuicoesPassiveisEstorno"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '05561084080',
             'codigoInstituidor': 45,
             'codigoPlano': 4,
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/
                           /contribuicoesPassiveisEstorno
             ?cpf=04905561070&codigoInstituidor=45
             &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getContribuicoesPassiveisEstorno"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/contribuicoesPassiveisEstorno"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/dadosBasicos:
    get:
      produces:
      - "application/json"
      summary: "GetParticipanteDadosBasicos"
      description: "Retorna o Nome e CPF dos Participantes cadastrados no sistema filtrado pelo Código do Instituidor informado na URL."
      parameters:
      - name: "inscricao"
        in: "query"
        required: false
        description: "Inscrição do Participante"
        type: "string"
      - name: "codigoPlano"
        in: "query"
        description: "Identificador do plano"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        description: "Código do Instituidor"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                     /dadosBasicos
                     ?codigoPlano=04905561070&codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /dadosBasicos"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'codigoPlano': '05561084080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
             /dadosBasicos
             ?codigoPlano=04905561070&codigoInstituidor=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getParticipanteDadosBasicos"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/dadosBasicos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/dadosCadastrais/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdateDadosCadastrais"
      description: "Atualiza os dados cadastrais do participante"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateDadosCadastraisBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/dadosCadastrais
                   /alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                      "  \"inscricaoQuanta\": \"12341234\",\n" +
                      "  \"numeroPostoAtendimento\": 8878,\n" +
                      "  \"politicamenteExposto\": \"S\",\n" +
                      "  \"codigoProfissao\": 1234,\n" +
                      "  \"nomeOcupacaoProfissional\": \"Médico\",\n" +
                      "  \"filiacaoNomeMae\": \"Nome da Mãe do Participante\",\n" +
                      "  \"filiacaoNomePai\": \"Nome da Pai do Participante\",\n" +
                      "  \"nomeConjuge\": \"Nome do Conjuge\",\n" +
                      "  \"nomeEstadoCivil\": \"Solteiro(a)\",\n" +
                      "  \"nomeCidadeNaturalidade\": \"São Paulo\",\n" +
                      "  \"siglaUFNaturalidade\": \"SP\",\n" +
                      "  \"nomePaisNacionalidade\": \"Brasil\",\n" +
                      "  \"adesao\": {\n" +
                      "    \"rendaDeclarada\": 9485.9,\n" +
                      "    \"codigoPlano\": 2\n" +
                      "  },\n" +
                      "  \"identidade\": {\n" +
                      "    \"numero\": \"878787\",\n" +
                      "    \"orgaoExpedidor\": \"SSP\",\n" +
                      "    \"siglaUFExpedidor\": \"SP\",\n" +
                      "    \"dataExpedicao\": \"1990-12-27T00:00:00\"\n" +
                      "  },\n" +
                      "  \"enderecos\": [\n" +
                      "    {\n" +
                      "      \"logradouro\": \"ABCDEFG\",\n" +
                      "      \"numero\": \"61\",\n" +
                      "      \"complemento\": \"Apto 22C\",\n" +
                      "      \"cep\": \"40000000\",\n" +
                      "      \"origemEndereco\": \"SAU\",\n" +
                      "      \"tipoEndereco\": \"Externo\"\n" +
                      "    }\n" +
                      "  ],\n" +
                      "  \"contatos\": [\n" +
                      "    {\n" +
                      "      \"telefone\": \"(11)3333-9999\",\n" +
                      "      \"fax\": \"(11)3333-9998\",\n" +
                      "      \"celular\": \"(11)9999-9999\",\n" +
                      "      \"falarCom\": \"NomedoContato1\",\n" +
                      "      \"email\": \"\",\n" +
                      "      \"padrao\": true,\n" +
                      "      \"tipoContato\": \"Residencial\",\n" +
                      "      \"origemContato\": \"SAU\"\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"telefone\": \"(11)2222-2222\",\n" +
                      "      \"fax\": \"\",\n" +
                      "      \"celular\": \"(11)9999-8580\",\n" +
                      "      \"email\": \"\",\n" +
                      "      \"padrao\": false,\n" +
                      "      \"tipoContato\": \"Comercial\",\n" +
                      "      \"origemContato\": \"SAU\"\n" +
                      "    }\n" +
                      "  ],\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/dadosCadastrais
                /alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
             "inscricaoQuanta": "12341234",
             "numeroPostoAtendimento": 8878,
             "politicamenteExposto": "S",
             "codigoProfissao": 1234,
             "nomeOcupacaoProfissional": "Médico",
             "filiacaoNomeMae": "Nome da Mãe do Participante",
             "filiacaoNomePai": "Nome da Pai do Participante",
             "nomeConjuge": "Nome do Conjuge",
             "nomeEstadoCivil": "Solteiro(a)",
             "nomeCidadeNaturalidade": "São Paulo",
             "siglaUFNaturalidade": "SP",
             "nomePaisNacionalidade": "Brasil",
             "adesao": {
               "rendaDeclarada": 9485.9,
               "codigoPlano": 2
             },
             "identidade": {
               "numero": "878787",
               "orgaoExpedidor": "SSP",
               "siglaUFExpedidor": "SP",
               "dataExpedicao": "1990-12-27T00:00:00"
             },
             "enderecos": [
             {
               "logradouro": "ABCDEFG",
               "numero": "61",
               "complemento": "Apto 22C",
               "cep": "40000000",
               "origemEndereco": "SAU",
               "tipoEndereco": "Externo"
             }
             ],
             "contatos": [
             {
               "telefone": "(11)3333-9999",
               "fax": "(11)3333-9998",
               "celular": "(11)9999-9999",
               "falarCom": "NomedoContato1",
               "email": "",
               "padrao": true,
               "tipoContato": "Residencial",
               "origemContato": "SAU"
             },
             {
               "telefone": "(11)2222-2222",
               "fax": "",
               "celular": "(11)9999-8580",
               "email": "",
               "padrao": false,
               "tipoContato": "Comercial",
               "origemContato": "SAU"
             }
             ],
              "userName": "nomeUsuarioSOP"
             })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /dadosCadastrais
                           /alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "12341234",
             "numeroPostoAtendimento": 8878,
             "politicamenteExposto": "S",
             "codigoProfissao": 1234,
             "nomeOcupacaoProfissional": "Médico",
             "filiacaoNomeMae": "Nome da Mãe do Participante",
             "filiacaoNomePai": "Nome da Pai do Participante",
             "nomeConjuge": "Nome do Conjuge",
             "nomeEstadoCivil": "Solteiro(a)",
             "nomeCidadeNaturalidade": "São Paulo",
             "siglaUFNaturalidade": "SP",
             "nomePaisNacionalidade": "Brasil",
             "adesao": {
               "rendaDeclarada": 9485.9,
               "codigoPlano": 2
             },
             "identidade": {
               "numero": "878787",
               "orgaoExpedidor": "SSP",
               "siglaUFExpedidor": "SP",
               "dataExpedicao": "1990-12-27T00:00:00"
             },
             "enderecos": [
             {
               "logradouro": "ABCDEFG",
               "numero": "61",
               "complemento": "Apto 22C",
               "cep": "40000000",
               "origemEndereco": "SAU",
               "tipoEndereco": "Externo"
             }
             ],
             "contatos": [
             {
               "telefone": "(11)3333-9999",
               "fax": "(11)3333-9998",
               "celular": "(11)9999-9999",
               "falarCom": "NomedoContato1",
               "email": "",
               "padrao": true,
               "tipoContato": "Residencial",
               "origemContato": "SAU"
             },
             {
               "telefone": "(11)2222-2222",
               "fax": "",
               "celular": "(11)9999-8580",
               "email": "",
               "padrao": false,
               "tipoContato": "Comercial",
               "origemContato": "SAU"
             }
             ],
              "userName": "nomeUsuarioSOP"
             }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateDadosCadastraisResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/dadosCadastrais/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/dadosCadastraisBasicos/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdateDadosCadastrais"
      description: "Atualiza os dados cadastrais do participante"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /dadosCadastraisBasicos
                   /alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                     "  \"inscricaoQuanta\": \"89494\",\n" +
                     "  \"contato\": {\n" +
                     "    \"telefone\": \"(11)3333-9999\",\n" +
                     "    \"fax\": \"(11)3333-9998\",\n" +
                     "    \"celular\": \"(11)9999-9999\",\n" +
                     "    \"falarCom\": \"NomedoContato1\",\n" +
                     "    \"email\": \"contato@dominio.com.br\",\n" +
                     "    \"padrao\": \"True\",\n" +
                     "    \"tipoContato\": \"Residencial\",\n" +
                     "    \"origemContato\": \"Atena\"\n" +
                     "  },\n" +
                     "  \"endereco\": {\n" +
                     "    \"logradouro\": \"ABCDEFG\",\n" +
                     "    \"numero\": \"61\",\n" +
                     "    \"complemento\": \"Apto 22C\",\n" +
                     "    \"bairro\": \"Centro\",\n" +
                     "    \"nomeCidade\": \"São Paulo\",\n" +
                     "    \"siglaUF\": \"SP\",\n" +
                     "    \"cep\": \"41770584\",\n" +
                     "    \"origemEndereco\": \"Atena\",\n" +
                     "    \"tipoEndereco\": \"Residencial\"\n" +
                     "  },\n" +
                     "  \"userName\": \"sop\",\n" +
                     "  \"codigoPlano\": 1\n" +
                  "}"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /dadosCadastraisBasicos
                 /alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
              "inscricaoQuanta": "89494",
              "contato": {
                "telefone": "(11)3333-9999",
                "fax": "(11)3333-9998",
                "celular": "(11)9999-9999",
                "falarCom": "NomedoContato1",
                "email": "contato@dominio.com.br",
                "padrao": "True",
                "tipoContato": "Residencial",
                "origemContato": "Atena"
              },
              "endereco": {
                "logradouro": "ABCDEFG",
                "numero": "61",
                "complemento": "Apto 22C",
                "bairro": "Centro",
                "nomeCidade": "São Paulo",
                "siglaUF": "SP",
                "cep": "41770584",
                "origemEndereco": "Atena",
                "tipoEndereco": "Residencial"
              },
              "userName": "sop",
              "codigoPlano": 1
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /dadosCadastraisBasicos
                            /alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "89494",
             "contato": {
               "telefone": "(11)3333-9999",
               "fax": "(11)3333-9998",
               "celular": "(11)9999-9999",
               "falarCom": "NomedoContato1",
               "email": "contato@dominio.com.br",
               "padrao": "True",
               "tipoContato": "Residencial",
               "origemContato": "Atena"
             },
             "endereco": {
               "logradouro": "ABCDEFG",
               "numero": "61",
               "complemento": "Apto 22C",
               "bairro": "Centro",
               "nomeCidade": "São Paulo",
               "siglaUF": "SP",
               "cep": "41770584",
               "origemEndereco": "Atena",
               "tipoEndereco": "Residencial"
             },
             "userName": "sop",
             "codigoPlano": 1
          }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateDadosCadastraisResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/dadosCadastraisBasicos/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/dadosContribuicao:
    get:
      produces:
      - "application/json"
      summary: "GetDadosContribuicaoByInscricao"
      description: "Retorna os dados da contribuição do participante para o plano bem como os valores das contribuições para os produtos de risco contratados, filtrados pela inscrição informada na URL."
      parameters:
      - name: "inscricao"
        description: "Número da incrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /dadosContribuicao/
                  ?inscricao=04905561070&codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /dadosContribuicao/"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '05561084080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /dadosContribuicao/
             ?inscricao=04905561070&codigoInstituidor=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getDadosContribuicaoByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/dadosContribuicao"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/debitoAporte:
    post:
      produces:
      - "application/json"
      summary: "GerarAporteDebitoAutorizado"
      description: "Gerar um Aporte com forma de pagamento débito em conta para um determinado participante"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postGerarAporteDebitoAutorizadoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/debitoAporte"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                     "  \"inscricaoQuanta\": \"848\",\n" +
                     "  \"origemAporte\": \"Participante\",\n" +
                     "  \"tipoAporte\": \"Unico\",\n" +
                     "  \"vencimento\": \"2018-07-16T00:00:00\",\n" +
                     "  \"valorAporte\": 1000,\n" +
                     "  \"formaPagamento\": \"Debito em conta\",\n" +
                     "  \"codigoBanco\": \"141\",\n" +
                     "  \"numeroAgencia\": \"6946\",\n" +
                     "  \"numeroConta\": \"4813\",\n" +
                     "  \"digitoConta\": \"\",\n" +
                     "  \"userName\": \"username\",\n" +
                     "  \"codigoPlano\": 3\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/debitoAporte"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "848",
            "origemAporte": "Participante",
            "tipoAporte": "Unico",
            "vencimento": "2018-07-16T00:00:00",
            "valorAporte": 1000,
            "formaPagamento": "Debito em conta",
            "codigoBanco": "141",
            "numeroAgencia": "6946",
            "numeroConta": "4813",
            "digitoConta": "",
            "userName": "username",
            "codigoPlano": 3
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /debitoAporte');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "848",
             "origemAporte": "Participante",
             "tipoAporte": "Unico",
             "vencimento": "2018-07-16T00:00:00",
             "valorAporte": 1000,
             "formaPagamento": "Debito em conta",
             "codigoBanco": "141",
             "numeroAgencia": "6946",
             "numeroConta": "4813",
             "digitoConta": "",
             "userName": "username",
             "codigoPlano": 3
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postGerarAporteDebitoAutorizadoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/debitoAporte"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/documento:
    get:
      produces:
      - "application/json"
      summary: "getDocumentoParticipanteById"
      description: "Retorna o Documento Filtrado pelo ID passado como parâmetro"
      parameters:
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "idDocumento"
        description: "Identificador único do documento"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/documento
                  ?idDocumento=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/documento"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'idDocumento': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /documento
             ?idDocumento=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getDocumentoParticipanteById"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/documento"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/documento/inserir:
    put:
      produces:
      - "application/json"
      summary: "putInsertDocumentoParticipante"
      description: "Insere documentos de um participante"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postInsertDocumentoParticipanteBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/documento/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                     "  \"inscricaoQuanta\": \"23424234\",\n" +
                     "  \"codigoPlano\": 1,\n" +
                     "  \"documentos\": [\n" +
                     "    {\n" +
                     "      \"tipoDocumento\": \"Documento Avulso\",\n" +
                     "      \"nomeDocumento\": \"Ficha Matrícula\",\n" +
                     "      \"numeroDocumento\": 1,\n" +
                     "      \"conteudoDocumento\": \"JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ...\"\n" +
                     "    },\n" +
                     "    {\n" +
                     "      \"tipoDocumento\": \"Documento Avulso\",\n" +
                     "      \"nomeDocumento\": \"Ficha Matrícula\",\n" +
                     "      \"numeroDocumento\": 2,\n" +
                     "      \"conteudoDocumento\": \"JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ...\"\n" +
                     "    },\n" +
                     "    {\n" +
                     "      \"tipoDocumento\": \"Documento Avulso\",\n" +
                     "      \"nomeDocumento\": \"Ficha Matrícula\",\n" +
                     "      \"numeroDocumento\": 3,\n" +
                     "      \"conteudoDocumento\": \"JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ...\"\n" +
                     "    }\n" +
                     "  ],\n" +
                     "  \"userName\": \"nomeUsuarioSOP\"\n" +
                     "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/documento/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "23424234",
            "codigoPlano": 1,
            "documentos": [
              {
                "tipoDocumento": "Documento Avulso",
                "nomeDocumento": "Ficha Matrícula",
                "numeroDocumento": 1,
                "conteudoDocumento": "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
              },
              {
                "tipoDocumento": "Documento Avulso",
                "nomeDocumento": "Ficha Matrícula",
                "numeroDocumento": 2,
                "conteudoDocumento": "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
              },
              {
                "tipoDocumento": "Documento Avulso",
                "nomeDocumento": "Ficha Matrícula",
                "numeroDocumento": 3,
                "conteudoDocumento": "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
              }
            ],
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante/documento
                           /inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "23424234",
             "codigoPlano": 1,
             "documentos": [
               {
                 "tipoDocumento": "Documento Avulso",
                 "nomeDocumento": "Ficha Matrícula",
                 "numeroDocumento": 1,
                 "conteudoDocumento": "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
               },
               {
                 "tipoDocumento": "Documento Avulso",
                 "nomeDocumento": "Ficha Matrícula",
                 "numeroDocumento": 2,
                 "conteudoDocumento": "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
               },
               {
                 "tipoDocumento": "Documento Avulso",
                 "nomeDocumento": "Ficha Matrícula",
                 "numeroDocumento": 3,
                 "conteudoDocumento": "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
               }
             ],
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postInsertDocumentoParticipanteResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/documento/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/documentos:
    get:
      produces:
      - "application/json"
      summary: "GetDocumentosParticipanteByInscricao"
      description: "Retorna todos os documentos do participante de Inscrição passada no parâmetro."
      parameters:
      - name: "inscricao"
        in: "query"
        description: "Número de inscrição do participante"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        description: "Código do Instituidor"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/documentos
                  ?inscricao=45&codigoInstituidor=4587141")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/documentos"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '45',
             'codigoInstituidor': '4587141'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /documentos
             ?inscricao=45&codigoInstituidor=4587141');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getDocumentosParticipanteByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/documentos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/empregador:
    get:
      produces:
      - "application/json"
      summary: "GetEmpregador"
      description: "Retorna os dados do Empregador"
      parameters:
      - name: "cnpjEmpregador"
        description: "CNPJ do Empregador"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante/empregador
                  ?cnpjEmpregador=458714189125")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/empregador"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cnpjEmpregador': '458714189125'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /empregador
             ?cnpjEmpregador=458714189125');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getEmpregador"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/empregador"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/entradaPortabilidade:
    get:
      produces:
      - "application/json"
      summary: "GetEntradasPortabilidade"
      description: "Retorna a relação das Entradas de Portabilidades de uma adesão, filtradas pelos parâmetros passados na URL."
      parameters:
      - name: "nome"
        description: "Nome do participante"
        in: "query"
        required: false
        type: "string"
      - name: "dataInicioSolicitacao"
        description: "Data início da solicitação de portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "dataInicioCredito"
        description: "Data início do crédito da portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "dataFimSolicitacao"
        description: "Data fim da solicitação de portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "numeroPostoAtendimento"
        description: "Número do posto de atendimento"
        in: "query"
        required: false
        type: "string"
      - name: "situacao"
        description: "Situações esperadas:"
        enum:
        - "Pendente"
        - "Aguardando Informação"
        - "Aguardando Assinatura"
        - "Quanta"
        - "Aguardando Crédito"
        - "Creditada"
        - "Enviar Ofício"
        - "Concluída"
        - "Cancelada"
        - "Autorizada"
        - "Recusada"
        - "Pendente Conferência"
        in: "query"
        required: false
        type: "string"
      - name: "dataFimCredito"
        description: "Data fim do crédito da portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do instituidor"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /entradaPortabilidade
                  ?cpf=45871418912")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /entradaPortabilidade"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '45871418912'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /entradaPortabilidade
             ?cpf=45871418912');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getEntradasPortabilidade"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/entradaPortabilidade"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/entradaPortabilidade/acompanhamentoMetas:
    get:
      produces:
      - "application/json"
      summary: "GetAcompanhamentoMetasPortabilidade"
      description: "Retorna sinteticamente as entradas de portabilidade para relatório de acompanhamento de metas."
      parameters:
      - name: "dataInicial"
        description: "Data inicial"
        in: "query"
        required: false
        type: "string"
      - name: "numeroPostoAtendimento"
        description: "Array de códigos de posto de atendimento"
        in: "query"
        required: false
        type: "string"
      - name: "dataFinal"
        description: "Data final"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Array de códigos do instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /entradaPortabilidade/acompanhamentoMetas
                  ?dataInicial=2017-12-17T03%3A24%3A00
                  &dataFinal=2018-09-04T03%3A24%3A00")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /entradaPortabilidade
                 /acompanhamentoMetas"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'dataInicial': '2017-12-17T03%3A24%3A00'
             'dataFinal': '2018-09-04T03%3A24%3A00'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /entradaPortabilidade
                            /acompanhamentoMetas
             ?dataInicial=2017-12-17T03%3A24%3A00
             &dataFinal=2018-09-04T03%3A24%3A00');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getAcompanhamentoMetasPortabilidade"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/entradaPortabilidade/acompanhamentoMetas"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/entradaPortabilidade/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertEntradaPortabilidade"
      description: "Insere uma solicitação de Entrada de Portabilidade no sistema."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertEntradaPortabilidadeBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /entradaPortabilidade/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                     "  \"inscricaoQuanta\": \"22577\",\n" +
                     "  \"codigoPlano\": 2,\n" +
                     "  \"codigoInstituidor\": 1,\n" +
                     "  \"numeroPostoAtendimento\": 234,\n" +
                     "  \"nomeAngariador\": \"Nome do Angariador\",\n" +
                     "  \"codigoAngariador\": 234,\n" +
                     "  \"nomeEntidadeCedente\": \"Nome da Entidade Cedente\",\n" +
                     "  \"cnpjEntidadeCedente\": \"23423423423423\",\n" +
                     "  \"nomePlano\": \"Nome do Plano Cedente\",\n" +
                     "  \"tipoPlano\": \"PGBL\",\n" +
                     "  \"codigoSusep\": \"87234234\",\n" +
                     "  \"cnpjFundo\": \"2342342424\",\n" +
                     "  \"regimeImpostoRenda\": \"Progressivo\",\n" +
                     "  \"matriculaEntidadeCedente\": \"23489\",\n" +
                     "  \"dataAdesaoEntidadCedente\": \"2000-01-31T00:00:00\",\n" +
                     "  \"dataOpcaoEntidadeCedente\": \"2000-01-31T00:00:00\",\n" +
                     "  \"observacoes\": \"observações da portabilidade...\",\n" +
                     "  \"pendente\": true,\n" +
                     "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /entradaPortabilidade/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "22577",
            "codigoPlano": 2,
            "codigoInstituidor": 1,
            "numeroPostoAtendimento": 234,
            "nomeAngariador": "Nome do Angariador",
            "codigoAngariador": 234,
            "nomeEntidadeCedente": "Nome da Entidade Cedente",
            "cnpjEntidadeCedente": "23423423423423",
            "nomePlano": "Nome do Plano Cedente",
            "tipoPlano": "PGBL",
            "codigoSusep": "87234234",
            "cnpjFundo": "2342342424",
            "regimeImpostoRenda": "Progressivo",
            "matriculaEntidadeCedente": "23489",
            "dataAdesaoEntidadCedente": "2000-01-31T00:00:00",
            "dataOpcaoEntidadeCedente": "2000-01-31T00:00:00",
            "observacoes": "observações da portabilidade...",
            "pendente": true,
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /entradaPortabilidade/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "22577",
             "codigoPlano": 2,
             "codigoInstituidor": 1,
             "numeroPostoAtendimento": 234,
             "nomeAngariador": "Nome do Angariador",
             "codigoAngariador": 234,
             "nomeEntidadeCedente": "Nome da Entidade Cedente",
             "cnpjEntidadeCedente": "23423423423423",
             "nomePlano": "Nome do Plano Cedente",
             "tipoPlano": "PGBL",
             "codigoSusep": "87234234",
             "cnpjFundo": "2342342424",
             "regimeImpostoRenda": "Progressivo",
             "matriculaEntidadeCedente": "23489",
             "dataAdesaoEntidadCedente": "2000-01-31T00:00:00",
             "dataOpcaoEntidadeCedente": "2000-01-31T00:00:00",
             "observacoes": "observações da portabilidade...",
             "pendente": true,
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertEntradaPortabilidadeResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/entradaPortabilidade/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/entradaPortabilidadeSintetico:
    get:
      produces:
      - "application/json"
      summary: "GetEntradasPortabilidadeSintetico"
      description: "Retorna uma relação sintética das Entradas de Portabilidades, filtradas pelos parâmetros passados na URL"
      parameters:
      - name: "nome"
        in: "query"
        description: "Nome do participante"
        required: false
        type: "string"
      - name: "dataInicioSolicitacao"
        description: "Data início da solicitação de portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "dataInicioCredito"
        description: "Data início do crédito da portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "dataFimSolicitacao"
        description: "Data fim da solicitação de portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "numeroPostoAtendimento"
        description: "Número do posto de atendimento"
        in: "query"
        required: false
        type: "string"
      - name: "dataFimCredito"
        description: "Data fim do crédito da portabilidade"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do instituidor"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /entradaPortabilidadeSintetico
                  ?cpf=04908861080
                  &codigoInstituidor=45
                  &dataInicioSolicitacao=2017-12-17T03%3A24%3A00
                  &dataFimSolicitacao=2018-04-17T03%3A24%3A00")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /entradaPortabilidadeSintetico"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '04908861080',
             'codigoInstituidor': '45',
             'dataFimSolicitacao': '2017-12-17T03%3A24%3A00',
             'dataInicioSolicitacao': '2018-04-17T03%3A24%3A00'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /entradaPortabilidadeSintetico
             ?cpf=04908861080
             &codigoInstituidor=45
             &dataInicioSolicitacao=2017-12-17T03%3A24%3A00
             &dataFimSolicitacao=2018-04-17T03%3A24%3A00');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getEntradasPortabilidadeSintetico"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/entradaPortabilidadeSintetico"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/extratoContribuicoes:
    get:
      produces:
      - "application/json"
      summary: "GetExtratoContribuicoes"
      description: "Retorna as contribuições do participante para geração do extrato de contribuições."
      parameters:
      - name: "dataCompetenciaInicial"
        in: "query"
        description: "Início da data de competência das contribuições"
        required: false
        type: "string"
      - name: "dataPagamentoInicial"
        description: "Início da data de pagamento das contribuições"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "dataCompetenciaFinal"
        description: "Fim da data de competência das contribuições"
        in: "query"
        required: false
        type: "string"
      - name: "tipoParcela"
        description: "Tipo da parcela. Opções:"
        enum:
        - "1 - Contribuição Normal"
        - "2 - Risco Avulso"
        - "3 - Aporte do Participante"
        - "4 - Aporte do Empregador"
        in: "query"
        required: false
        type: "string"
      - name: "inscricao"
        in: "query"
        required: false
        type: "string"
      - name: "dataPagamentoFinal"
        in: "query"
        required: false
        type: "string"
      - name: "tipoPagamento"
        description: "Tipo de pagamento:"
        enum:
        - "1 - Pagas"
        - "2 - Não Pagas"
        - "3 - Canceladas"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /extratoContribuicoes
                  ?codigoInstituidor=04908861080&inscricao=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /extratoContribuicoes"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '04908861080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /extratoContribuicoes
             ?codigoInstituidor=04908861080&inscricao=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getExtratoContribuicoes"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/extratoContribuicoes"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/extratoDetalhado:
    get:
      produces:
      - "application/json"
      summary: "GetExtratoDetalhado"
      description: "Exibe um extrato detalhado do Participante"
      parameters:
      - name: "inscricao"
        in: "query"
        required: false
        type: "string"
      - name: "dataCompetenciaInicial"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "dataCompetenciaFinal"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /extratoDetalhado
                  ?codigoPlano=4&inscricao=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /extratoDetalhado"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '45',
             'codigoPlano': '4'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /extratoDetalhado
             ?codigoPlano=4&inscricao=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getExtratoDetalhado"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/extratoDetalhado"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/extratoResgate:
    get:
      produces:
      - "application/json"
      summary: "GetExtratoResgate"
      description: "Retorna as parcelas regressivas/progressivas do participante para geração do extrato de resgate."
      parameters:
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "dataReferencia"
        description: "Data do Pagamento"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "codigoplano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /extratoResgate
                  ?codigoPlano=4
                  &inscricao=45
                  &codigoInstituidor=04587
                  &dataReferencia=2017-12-17T03%3A24%3A00")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/extratoResgate"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '45',
             'codigoPlano': '4',
             'codigoInstituidor': '04587',
             'dataReferencia': '2017-12-17T03%3A24%3A00'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /extratoResgate
             ?codigoPlano=4
             &inscricao=45
             &codigoInstituidor=04587
             &dataReferencia=2017-12-17T03%3A24%3A00');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getExtratoResgate"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/extratoResgate"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/formaPagamento:
    get:
      produces:
      - "application/json"
      summary: "GetFormaPagamentoByInscricao"
      description: "Retorna a forma de pagamento das contribuições da adesão do participante, filtrada pela inscrição informada na URL."
      parameters:
      - name: "inscricao"
        description: "Inscrição do participante no plano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do Plano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /formaPagamento
                  ?codigoPlano=4
                  &inscricao=45
                  &codigoInstituidor=04587")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/formaPagamento"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '04908861080',
             'codigoPlano': '4',
             'codigoInstituidor': '04587'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /formaPagamento
             ?codigoPlano=4
             &inscricao=45
             &codigoInstituidor=04587');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getFormaPagamentoByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/formaPagamento"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/formaPagamento/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdateFormaPagamento"
      description: "Altera a Forma de Pagamento das contribuições de um participante."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateFormaPagamentoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/formaPagamento
                   /alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricaoQuanta\": \"234324\",\n" +
                      "  \"codigoPlano\": 2,\n" +
                      "  \"diaVencimento\": 15,\n" +
                      "  \"descricaoFormaPagamento\": \"Débito em Conta\",\n" +
                      "  \"nomeCorrentista\": \"Nome do Correntista para Débito em Conta\",\n" +
                      "  \"cpfCorrentista\": \"12345678900\",\n" +
                      "  \"cnpjCorrentista\": \"12345678901234\",\n" +
                      "  \"codigoBanco\": \"001\",\n" +
                      "  \"codigoAgencia\": \"3025\",\n" +
                      "  \"digitoAgencia\": \"8\",\n" +
                      "  \"numeroConta\": \"123456\",\n" +
                      "  \"digitoConta\": \"2\",\n" +
                      "  \"tipoContaBancaria\": \"Corrente\",\n" +
                      "  \"nomeInstituicaoDescontoFolha\": \"\",\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/formaPagamento
                 /alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "234324",
            "codigoPlano": 2,
            "diaVencimento": 15,
            "descricaoFormaPagamento": "Débito em Conta",
            "nomeCorrentista": "Nome do Correntista para Débito em Conta",
            "cpfCorrentista": "12345678900",
            "cnpjCorrentista": "12345678901234",
            "codigoBanco": "001",
            "codigoAgencia": "3025",
            "digitoAgencia": "8",
            "numeroConta": "123456",
            "digitoConta": "2",
            "tipoContaBancaria": "Corrente",
            "nomeInstituicaoDescontoFolha": "",
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /formaPagamento/alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "234324",
             "codigoPlano": 2,
             "diaVencimento": 15,
             "descricaoFormaPagamento": "Débito em Conta",
             "nomeCorrentista": "Nome do Correntista para Débito em Conta",
             "cpfCorrentista": "12345678900",
             "cnpjCorrentista": "12345678901234",
             "codigoBanco": "001",
             "codigoAgencia": "3025",
             "digitoAgencia": "8",
             "numeroConta": "123456",
             "digitoConta": "2",
             "tipoContaBancaria": "Corrente",
             "nomeInstituicaoDescontoFolha": "",
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateFormaPagamentoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/formaPagamento/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/formaPagamentoParticipantesByEmpresa/alterar:
    put:
      produces:
      - "application/json"
      summary: "UpdateFormaPagamentoParticipantesByEmpresa"
      description: "Insere um novo aporte empregador com o novo valor, encerrando o anterior."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putUpdateFormaPagamentoParticipantesByEmpresaBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /formaPagamentoParticipantesByEmpresa/alterar"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                     "  \"cnpjEmpregador\":\"01605875000140\",\n" +
                     "  \"contratoEmpregador\":900,\n" +
                     "  \"username\": \"usuario\",\n" +
                     "  \"contribuicoesEmpresa\":[\n" +
                     "    {\n" +
                     "      \"inscricaoQuanta\":25229,\n" +
                     "      \"valorContribuicaoMensalEmpresa\":220.00,\n" +
                     "      \"descricaoSituacao\":\"Ativo\",\n" +
                     "      \"dataDesligamento\": null,\n" +
                     "      \"formaPagamento\":\"Boleto Bancário\"\n" +
                     "\n" +
                     "    },\n" +
                     "    {\n" +
                     "      \"inscricaoQuanta\":41,\n" +
                     "      \"valorContribuicaoMensalEmpresa\":150,\n" +
                     "      \"descricaoSituacao\":\"Desligado\",\n" +
                     "      \"dataDesligamento\":\"2018-04-20T00:00:00\",\n" +
                     "      \"formaPagamento\": null\n" +
                     "    }\n" +
                     "  ]\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /formaPagamentoParticipantesByEmpresa/alterar"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "cnpjEmpregador":"01605875000140",
            "contratoEmpregador":900,
            "username": "usuario",
            "contribuicoesEmpresa":[
              {
                "inscricaoQuanta":25229,
                "valorContribuicaoMensalEmpresa":220.00,
                "descricaoSituacao":"Ativo",
                "dataDesligamento": null,
                "formaPagamento":"Boleto Bancário"

              },
              {
                "inscricaoQuanta":41,
                "valorContribuicaoMensalEmpresa":150,
                "descricaoSituacao":"Desligado",
                "dataDesligamento":"2018-04-20T00:00:00",
                "formaPagamento": null
              }
            ]
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                /formaPagamentoParticipantesByEmpresa/alterar');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "cnpjEmpregador":"01605875000140",
             "contratoEmpregador":900,
             "username": "usuario",
             "contribuicoesEmpresa":[
               {
                 "inscricaoQuanta":25229,
                 "valorContribuicaoMensalEmpresa":220.00,
                 "descricaoSituacao":"Ativo",
                 "dataDesligamento": null,
                 "formaPagamento":"Boleto Bancário"

               },
               {
                 "inscricaoQuanta":41,
                 "valorContribuicaoMensalEmpresa":150,
                 "descricaoSituacao":"Desligado",
                 "dataDesligamento":"2018-04-20T00:00:00",
                 "formaPagamento": null
               }
             ]
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putUpdateFormaPagamentoParticipantesByEmpresaResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/formaPagamentoParticipantesByEmpresa/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/formaPagamentoRisco:
    get:
      produces:
      - "application/json"
      summary: "GetFormaPagamentoRiscoByInscricao"
      description: "Retorna a forma de pagamento das contribuições de risco do participante."
      parameters:
      - name: "inscricao"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /formaPagamentoRisco
                  ?codigoPlano=4
                  &inscricao=45
                  &codigoInstituidor=04587")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /formaPagamentoRisco"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '04908861080',
             'codigoPlano': '4',
             'codigoInstituidor': '04587'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                          /formaPagamentoRisco
             ?codigoPlano=4
             &inscricao=45
             &codigoInstituidor=04587');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getFormaPagamentoRiscoByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/formaPagamentoRisco"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/formaPagamentoRisco/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdateFormaPagamentoRisco"
      description: "Altera a Forma de Pagamento das contribuições de risco de um participante."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateFormaPagamentoRiscoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /formaPagamentoRisco/alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricaoQuanta\": \"73731\",\n" +
                      "  \"codigoPlano\": 1,\n" +
                      "  \"diaVencimento\": 25,\n" +
                      "  \"descricaoFormaPagamento\": \"Boleto Bancário\",\n" +
                      "  \"identificadorPropostaRiscoSeguradora\": \"105250005\",\n" +
                      "  \"responsavelProdutoRisco\": \"Participante\",\n" +
                      "  \"nomeCorrentista\": null,\n" +
                      "  \"cpfCorrentista\": null,\n" +
                      "  \"cnpjCorrentista\": null,\n" +
                      "  \"codigoBanco\": null,\n" +
                      "  \"codigoAgencia\": null,\n" +
                      "  \"digitoAgencia\": null,\n" +
                      "  \"numeroConta\": null,\n" +
                      "  \"digitoConta\": null,\n" +
                      "  \"tipoContaBancaria\": null,\n" +
                      "  \"nomeInstituicaoDescontoFolha\": null,\n" +
                      "  \"userName\": \"Nome do Usuário\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /formaPagamentoRisco/alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "73731",
            "codigoPlano": 1,
            "diaVencimento": 25,
            "descricaoFormaPagamento": "Boleto Bancário",
            "identificadorPropostaRiscoSeguradora": "105250005",
            "responsavelProdutoRisco": "Participante",
            "nomeCorrentista": null,
            "cpfCorrentista": null,
            "cnpjCorrentista": null,
            "codigoBanco": null,
            "codigoAgencia": null,
            "digitoAgencia": null,
            "numeroConta": null,
            "digitoConta": null,
            "tipoContaBancaria": null,
            "nomeInstituicaoDescontoFolha": null,
            "userName": "Nome do Usuário"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /formaPagamentoRisco/alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "73731",
             "codigoPlano": 1,
             "diaVencimento": 25,
             "descricaoFormaPagamento": "Boleto Bancário",
             "identificadorPropostaRiscoSeguradora": "105250005",
             "responsavelProdutoRisco": "Participante",
             "nomeCorrentista": null,
             "cpfCorrentista": null,
             "cnpjCorrentista": null,
             "codigoBanco": null,
             "codigoAgencia": null,
             "digitoAgencia": null,
             "numeroConta": null,
             "digitoConta": null,
             "tipoContaBancaria": null,
             "nomeInstituicaoDescontoFolha": null,
             "userName": "Nome do Usuário"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateFormaPagamentoRiscoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/formaPagamentoRisco/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/gerarBoletoParcelasAVencer:
    post:
      produces:
      - "application/json"
      summary: "GerarBoletoParcelasAVencer"
      description: "Envia um boleto de parcela a vencer por e-mail"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postGerarBoletoParcelasAVencerBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /gerarBoletoParcelasAVencer"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricao\": \"3714\",\n" +
                      "  \"cpf\": \"27347519898\",\n" +
                      "  \"codigoInstituidor\": \"1\",\n" +
                      "  \"codigoPlano\": \"1\",\n" +
                      "  \"idParcela\": 1857709\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /gerarBoletoParcelasAVencer"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricao": "3714",
            "cpf": "27347519898",
            "codigoInstituidor": "1",
            "codigoPlano": "1",
            "idParcela": 1857709
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /gerarBoletoParcelasAVencer');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricao": "3714",
             "cpf": "27347519898",
             "codigoInstituidor": "1",
             "codigoPlano": "1",
             "idParcela": 1857709
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postGerarBoletoParcelasAVencerResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/gerarBoletoParcelasAVencer"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/gerarBoletoParcelasVencidas:
    post:
      produces:
      - "application/json"
      summary: "GerarBoletoParcelasVencidas"
      description: "Envia um boleto de parcela vencida"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postGerarBoletoParcelasVencidasBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /gerarBoletoParcelasVencidas"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricao\": \"3714\",\n" +
                      "  \"cpf\": \"27347519898\",\n" +
                      "  \"codigoInstituidor\": \"1\",\n" +
                      "  \"codigoPlano\": \"1\",\n" +
                      "  \"idParcela\": 1857709\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /gerarBoletoParcelasVencidas"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricao": "3714",
            "cpf": "27347519898",
            "codigoInstituidor": "1",
            "codigoPlano": "1",
            "idParcela": 1857709
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /gerarBoletoParcelasVencidas');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricao": "3714",
             "cpf": "27347519898",
             "codigoInstituidor": "1",
             "codigoPlano": "1",
             "idParcela": 1857709
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postGerarBoletoParcelasVencidasResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/gerarBoletoParcelasVencidas"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/gerarCobrancaAporteEmpregador/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertCobrancaAporteEmpregador"
      description: "Gera cobrança(s) de Aporte empregador"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertCobrancaAporteEmpregadorBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /gerarCobrancaAporteEmpregador/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"identificadorVencimento\":\"2011\",\n" +
                       "  \"inscricoesQuanta\":[\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"8\"\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"20\"\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"15\"\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"userName\":\"WSPEQ\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /gerarCobrancaAporteEmpregador/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "identificadorVencimento":"2011",
            "inscricoesQuanta":[
              {
                "inscricaoQuanta":"8"
              },
              {
                "inscricaoQuanta":"20"
              },
              {
                "inscricaoQuanta":"15"
              }
            ],
            "userName":"WSPEQ"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                         /gerarCobrancaAporteEmpregador/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "identificadorVencimento":"2011",
             "inscricoesQuanta":[
               {
                 "inscricaoQuanta":"8"
               },
               {
                 "inscricaoQuanta":"20"
               },
               {
                 "inscricaoQuanta":"15"
               }
             ],
             "userName":"WSPEQ"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        100:
          description: "100 resonse warning"
          schema:
            $ref: "#/definitions/putInsertCobrancaAporteEmpregadorResponse100"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertCobrancaAporteEmpregadorResponse200"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/gerarCobrancaAporteEmpregador/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/gerarCobrancaDescontoFolha/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertCobrancaDescontoFolha"
      description: "Gera cobrança(s) de contribuições básicas"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertCobrancaDescontoFolhaBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /gerarCobrancaDescontoFolha/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"identificadorVencimento\":\"2011\",\n" +
                       "  \"inscricoesQuanta\":[\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"8\"\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"20\"\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"15\"\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"userName\":\"WSPEQ\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /gerarCobrancaAporteEmpregador/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "identificadorVencimento":"2011",
            "inscricoesQuanta":[
              {
                "inscricaoQuanta":"8"
              },
              {
                "inscricaoQuanta":"20"
              },
              {
                "inscricaoQuanta":"15"
              }
            ],
            "userName":"WSPEQ"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                       /gerarCobrancaDescontoFolha/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "identificadorVencimento":"2011",
             "inscricoesQuanta":[
               {
                 "inscricaoQuanta":"8"
               },
               {
                 "inscricaoQuanta":"20"
               },
               {
                 "inscricaoQuanta":"15"
               }
             ],
             "userName":"WSPEQ"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        100:
          description: "100 resonse warning"
          schema:
            $ref: "#/definitions/putInsertCobrancaDescontoFolhaResponse100"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertCobrancaDescontoFolhaResponse200"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/gerarCobrancaDescontoFolha/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/gerarCobrancaRiscoEmpregador/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertCobrancaRiscoEmpregador"
      description: "Gera cobrança(s) de risco."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertCobrancaRiscoEmpregadorBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /gerarCobrancaRiscoEmpregador
                   /inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"identificadorVencimento\":\"2011\",\n" +
                       "  \"inscricoesQuanta\":[\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"8\"\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"20\"\n" +
                       "    },\n" +
                       "    {\n" +
                       "      \"inscricaoQuanta\":\"15\"\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"userName\":\"WSPEQ\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /gerarCobrancaRiscoEmpregador/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "identificadorVencimento":"2011",
            "inscricoesQuanta":[
              {
                "inscricaoQuanta":"8"
              },
              {
                "inscricaoQuanta":"20"
              },
              {
                "inscricaoQuanta":"15"
              }
            ],
            "userName":"WSPEQ"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                     /gerarCobrancaRiscoEmpregador/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "identificadorVencimento":"2011",
             "inscricoesQuanta":[
               {
                 "inscricaoQuanta":"8"
               },
               {
                 "inscricaoQuanta":"20"
               },
               {
                 "inscricaoQuanta":"15"
               }
             ],
             "userName":"WSPEQ"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        100:
          description: "100 resonse warning"
          schema:
            $ref: "#/definitions/putInsertCobrancaRiscoEmpregadorResponse100"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertCobrancaRiscoEmpregadorResponse200"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/gerarCobrancaRiscoEmpregador/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/gerarInformeRendimentos:
    post:
      produces:
      - "application/json"
      summary: "GerarInformeRendimentos"
      description: "Envia um informe de rendimentos para o e-mail do participante"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postGerarInformeRendimentosBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /gerarInformeRendimentos"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricao\": \"3714\",\n" +
                      "  \"cpf\": \"27347519898\",\n" +
                      "  \"codigoInstituidor\": \"1\",\n" +
                      "  \"codigoPlano\": \"1\",\n" +
                      "  \"ano\": 2016\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /gerarInformeRendimentos"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricao": "3714",
            "cpf": "27347519898",
            "codigoInstituidor": "1",
            "codigoPlano": "1",
            "ano": 2016
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /gerarInformeRendimentos');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricao": "3714",
             "cpf": "27347519898",
             "codigoInstituidor": "1",
             "codigoPlano": "1",
             "ano": 2016
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postGerarInformeRendimentosResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/gerarInformeRendimentos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/inadimplentes:
    get:
      produces:
      - "application/json"
      summary: "GetInadimplentesByCpfNomeInscricao"
      description: "Retorna as parcelas inadimplentes do participante passado como parâmetro na URL."
      parameters:
      - name: "nome"
        description: "Nome do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "cnpjEmpregador"
        description: ""
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /inadimplentes
                  ?cpf=04908861080
                  &codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/inadimplentes"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '04908861080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /inadimplentes
             ?cpf=04908861080
             &codigoInstituidor=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getInadimplentesByCpfNomeInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/inadimplentes"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/inadimplentes/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdateInadimplentes"
      description: "Atualizar as parcelas inadimplentes"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateInadimplentesBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/inadimplentes
                   /alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricaoQuanta\": \"234324\",\n" +
                      "  \"codigoPlano\": 2,\n" +
                      "  \"parcelasInadimplentes\": [\n" +
                      "    {\n" +
                      "      \"dataCompetencia\": \"2014-09-01T00:00:00\",\n" +
                      "      \"dataVencimento\": \"2014-12-01T00:00:00\",\n" +
                      "      \"valorCobrado\": 90.67,\n" +
                      "      \"valorJuros\": 1.5,\n" +
                      "      \"valorMulta\": 2.5,\n" +
                      "      \"valorTotalPago\": 94.67,\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 1234,\n" +
                      "      \"identificadorAtena\": \"I6706016\"\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"dataCompetencia\": \"2014-10-01T00:00:00\",\n" +
                      "      \"dataVencimento\": \"2014-12-01T00:00:00\",\n" +
                      "      \"valor\": 90.67,\n" +
                      "      \"valorJuros\": 1,\n" +
                      "      \"valorMulta\": 2.5,\n" +
                      "      \"valorTotalPago\": 94.17,\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 12545,\n" +
                      "      \"identificadorAtena\": \"I6706017\"\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"dataCompetencia\": \"2014-11-01T00:00:00\",\n" +
                      "      \"dataVencimento\": \"2014-12-01T00:00:00\",\n" +
                      "      \"valor\": 90.67,\n" +
                      "      \"valorJuros\": 0.5,\n" +
                      "      \"valorMulta\": 2.5,\n" +
                      "      \"valorTotalPago\": 93.67,\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 32652,\n" +
                      "      \"identificadorAtena\": \"I6706018\"\n" +
                      "    }\n" +
                      "  ]\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/inadimplentes
                 /alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "234324",
            "codigoPlano": 2,
            "parcelasInadimplentes": [
              {
                "dataCompetencia": "2014-09-01T00:00:00",
                "dataVencimento": "2014-12-01T00:00:00",
                "valorCobrado": 90.67,
                "valorJuros": 1.5,
                "valorMulta": 2.5,
                "valorTotalPago": 94.67,
                "numeroDocumentoProducaoDiaria": 1234,
                "identificadorAtena": "I6706016"
              },
              {
                "dataCompetencia": "2014-10-01T00:00:00",
                "dataVencimento": "2014-12-01T00:00:00",
                "valor": 90.67,
                "valorJuros": 1,
                "valorMulta": 2.5,
                "valorTotalPago": 94.17,
                "numeroDocumentoProducaoDiaria": 12545,
                "identificadorAtena": "I6706017"
              },
              {
                "dataCompetencia": "2014-11-01T00:00:00",
                "dataVencimento": "2014-12-01T00:00:00",
                "valor": 90.67,
                "valorJuros": 0.5,
                "valorMulta": 2.5,
                "valorTotalPago": 93.67,
                "numeroDocumentoProducaoDiaria": 32652,
                "identificadorAtena": "I6706018"
              }
            ]
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /inadimplentes/alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "234324",
             "codigoPlano": 2,
             "parcelasInadimplentes": [
               {
                 "dataCompetencia": "2014-09-01T00:00:00",
                 "dataVencimento": "2014-12-01T00:00:00",
                 "valorCobrado": 90.67,
                 "valorJuros": 1.5,
                 "valorMulta": 2.5,
                 "valorTotalPago": 94.67,
                 "numeroDocumentoProducaoDiaria": 1234,
                 "identificadorAtena": "I6706016"
               },
               {
                 "dataCompetencia": "2014-10-01T00:00:00",
                 "dataVencimento": "2014-12-01T00:00:00",
                 "valor": 90.67,
                 "valorJuros": 1,
                 "valorMulta": 2.5,
                 "valorTotalPago": 94.17,
                 "numeroDocumentoProducaoDiaria": 12545,
                 "identificadorAtena": "I6706017"
               },
               {
                 "dataCompetencia": "2014-11-01T00:00:00",
                 "dataVencimento": "2014-12-01T00:00:00",
                 "valor": 90.67,
                 "valorJuros": 0.5,
                 "valorMulta": 2.5,
                 "valorTotalPago": 93.67,
                 "numeroDocumentoProducaoDiaria": 32652,
                 "identificadorAtena": "I6706018"
               }
             ]
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateInadimplentesResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/inadimplentes/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/informeRendimento/anos:
    get:
      produces:
      - "application/json"
      summary: "GetAnosInformeRendimento"
      description: "Retorna os anos que o participante teve contribuições para o Informe de Rendimento"
      parameters:
      - name: "cpf"
        description: "Cpf do Participante"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /informeRendimento/anos
                  ?cpf=04908861080")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /informeRendimento/anos"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '04908861080'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /informeRendimento/anos
             ?cpf=04908861080');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getAnosInformeRendimento"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/informeRendimento/anos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/informeRendimentos:
    get:
      produces:
      - "application/json"
      summary: "GetInformeRendimentosByInscricao"
      description: "Retorna uma array de byte do Informe de Rendimento"
      parameters:
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "anoCompetencia"
        description: "Ano de Competência do Informe"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /informeRendimentos
                  ?inscricao=04908861080&codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /informeRendimentos"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': '04908861080',
             'codigoPlano': 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /informeRendimentos
             ?inscricao=04908861080&codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getInformeRendimentosByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/informeRendimentos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/parcelasAVencer:
    get:
      produces:
      - "application/json"
      summary: "GetParcelasAVencer"
      description: "Retorna as parcelas a vencer."
      parameters:
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
      - name: "codigoplano"
        description: "Indicador do plano"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /parcelasAVencer
                  ?cpf=04908861080
                  &codigoPlano=4
                  &codigoInstituidor=78
                  &inscricao=4587")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /parcelasAVencer"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'Cpf': '04908861080',
             'codigoPlano': 4,
             'inscricao': 4587
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /parcelasAVencer
                      ?Cpf=04908861080
                      &codigoPlano=4
                      &codigoInstituidor=78
                      &inscricao=4587');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getParcelasAVencer"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participan"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/parcelasVencidas:
    get:
      produces:
      - "application/json"
      summary: "GetParcelasVencidas"
      description: "Retorna as parcelas vencidas."
      parameters:
      - name: "inscricao"
        description: "Número de incrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "codigoplano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /parcelasVencidas
                  ?cpf=04908861080
                  &codigoPlano=4
                  &codigoInstituidor=78
                  &inscricao=4587")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /parcelasVencidas"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'Cpf': '04908861080',
             'codigoPlano': 4,
             'inscricao': 4587
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /parcelasVencidas
                      ?Cpf=04908861080
                      &codigoPlano=4
                      &codigoInstituidor=78
                      &inscricao=4587');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getParcelasVencidas"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/parcelasVencidas"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/participantesByEmpresa:
    get:
      produces:
      - "application/json"
      summary: "GetParticipantesByEmpresa"
      description: "Retorna os participantes de uma determinada empresa e as contribuições onde o responsável financeiro é a empresa."
      parameters:
      - name: "status"
        description: "Status do participante na Empresa: "
        enum:
        - "Ativo"
        - "Licença"
        - "Desligado"
        in: "query"
        required: false
        type: "string"
      - name: "cnpj"
        description: "CNPJ da Empresa"
        in: "query"
        required: false
        type: "string"
      - name: "codigoContrato"
        description: "Código do Contrato Empregador"
        in: "query"
        required: false
        type: "string"
      - name: "competencia"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /participantesByEmpresa
                  ?cnpj=049088610801
                  &codigoContrato=45887112")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /participantesByEmpresa"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cnpj': '04908861080',
             'codigoContrato': 45887112
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /participantesByEmpresa
                      ?cnpj=049088610801&codigoContrato=45887112');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getParticipantesByEmpresa"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/participantesByEmpresa"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/perfilInvestimento:
    get:
      produces:
      - "application/json"
      summary: "GetHistoricoPerfilInvestimentoByInscricao"
      description: "Retorna a relação de históricos de alteração de perfil de investimento pela inscrição informada na URL"
      parameters:
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /perfilInvestimento
                  ?inscricao=45
                  &codigoInstituidor=458")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /perfilInvestimento"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'inscricao': 45,
             'codigoInstituidor': 458
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /perfilInvestimento
                      ?inscricao=45
                      &codigoInstituidor=458');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getHistoricoPerfilInvestimentoByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/perfilInvestimento"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/perfilInvestimento/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdatePerfilInvestimento"
      description: "Altera o Perfil de Investimento do Participante."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdatePerfilInvestimentoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /perfilInvestimento/alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricaoQuanta\": \"12334\",\n" +
                      "  \"codigoPlano\": 2,\n" +
                      "  \"dataSolicitacaoAlteracao\": \"2015-02-01T00:00:00\",\n" +
                      "  \"competenciaAlteracao\": \"2015-03-01T00:00:00\",\n" +
                      "  \"nomePerfilInvestimento\": \"Arrojado\",\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /perfilInvestimento
                 /alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "12334",
            "codigoPlano": 2,
            "dataSolicitacaoAlteracao": "2015-02-01T00:00:00",
            "competenciaAlteracao": "2015-03-01T00:00:00",
            "nomePerfilInvestimento": "Arrojado",
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /perfilInvestimento/alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "12334",
             "codigoPlano": 2,
             "dataSolicitacaoAlteracao": "2015-02-01T00:00:00",
             "competenciaAlteracao": "2015-03-01T00:00:00",
             "nomePerfilInvestimento": "Arrojado",
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdatePerfilInvestimentoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/perfilInvestimento/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/planos:
    get:
      produces:
      - "application/json"
      summary: "GetPlanosParticipante"
      description: "Retornar os planos nos quais o participante aderiu."
      parameters:
      - name: "cpf"
        description: "CPF do participante"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /planos
                  ?cpf=04908861080")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/planos"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '04908861080'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /planos
                      ?cpf=04908861080');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getPlanosParticipante"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/planos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/producaoDiaria/alterar:
    post:
      produces:
      - "application/json"
      summary: "UpdateContribuicoesProducaoDiaria"
      description: "Atualiza as contribuições debitadas nas contas dos participantes."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateContribuicoesProducaoDiariaBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /producaoDiaria/alterar"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"producoes\": [\n" +
                      "    {\n" +
                      "      \"idLote\": 123456,\n" +
                      "      \"inscricaoQuanta\": \"56895\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 9959595,\n" +
                      "      \"dataPagamento\": \"2015-01-05T16:01:05\",\n" +
                      "      \"valorPago\": 205.52\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"idLote\": 123456,\n" +
                      "      \"inscricaoQuanta\": \"98592\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 603265,\n" +
                      "      \"dataPagamento\": \"2015-01-05T16:01:08\",\n" +
                      "      \"valorPago\": 29.59\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"idLote\": 123456,\n" +
                      "      \"inscricaoQuanta\": \"50626\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 60532,\n" +
                      "      \"dataPagamento\": \"2015-01-05T16:02:05\",\n" +
                      "      \"valorPago\": 105.62\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"idLote\": 123456,\n" +
                      "      \"inscricaoQuanta\": \"698875\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 4451612,\n" +
                      "      \"dataPagamento\": \"2015-01-05T17:01:05\",\n" +
                      "      \"valorPago\": 625.62\n" +
                      "    }\n" +
                      "  ]\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /producaoDiaria/alterar"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "producoes": [
              {
                "idLote": 123456,
                "inscricaoQuanta": "56895",
                "numeroDocumentoProducaoDiaria": 9959595,
                "dataPagamento": "2015-01-05T16:01:05",
                "valorPago": 205.52
              },
              {
                "idLote": 123456,
                "inscricaoQuanta": "98592",
                "numeroDocumentoProducaoDiaria": 603265,
                "dataPagamento": "2015-01-05T16:01:08",
                "valorPago": 29.59
              },
              {
                "idLote": 123456,
                "inscricaoQuanta": "50626",
                "numeroDocumentoProducaoDiaria": 60532,
                "dataPagamento": "2015-01-05T16:02:05",
                "valorPago": 105.62
              },
              {
                "idLote": 123456,
                "inscricaoQuanta": "698875",
                "numeroDocumentoProducaoDiaria": 4451612,
                "dataPagamento": "2015-01-05T17:01:05",
                "valorPago": 625.62
              }
            ]
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /producaoDiaria/alterar');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "producoes": [
               {
                 "idLote": 123456,
                 "inscricaoQuanta": "56895",
                 "numeroDocumentoProducaoDiaria": 9959595,
                 "dataPagamento": "2015-01-05T16:01:05",
                 "valorPago": 205.52
               },
               {
                 "idLote": 123456,
                 "inscricaoQuanta": "98592",
                 "numeroDocumentoProducaoDiaria": 603265,
                 "dataPagamento": "2015-01-05T16:01:08",
                 "valorPago": 29.59
               },
               {
                 "idLote": 123456,
                 "inscricaoQuanta": "50626",
                 "numeroDocumentoProducaoDiaria": 60532,
                 "dataPagamento": "2015-01-05T16:02:05",
                 "valorPago": 105.62
               },
               {
                 "idLote": 123456,
                 "inscricaoQuanta": "698875",
                 "numeroDocumentoProducaoDiaria": 4451612,
                 "dataPagamento": "2015-01-05T17:01:05",
                 "valorPago": 625.62
               }
             ]
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateContribuicoesProducaoDiariaResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/producaoDiaria/alterar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/producaoDiaria/consultar:
    get:
      produces:
      - "application/json"
      summary: "GetDadosContribuicoesProducaoDiaria"
      description: "Retorna as informações das contribuições para o processo de produção diária filtrada por um array de números de documento."
      parameters:
      - name: "numeros_documento"
        description: "Array de inteiros com os números dos documentos SOP"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /producaoDiaria/consultar
                  ?numeros_documento=4908861080")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /producaoDiaria/consultar"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'numeros_documento': '4908861080'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /producaoDiaria/consultar
                      ?numeros_documento=4908861080');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getDadosContribuicoesProducaoDiaria"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/producaoDiaria/consultar"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/producaoDiariaFinanceira:
    get:
      produces:
      - "application/json"
      summary: "GetProducaoDiariaFinanceira"
      description: "Retorna os registros para geração do relatório de Produção Diária Financeira."
      parameters:
      - name: "dataInicial"
        description: "Data início"
        in: "query"
        required: false
        type: "string"
      - name: "numeroPostoAtendimento"
        description: "Número do posto de atendimento"
        in: "query"
        required: false
        type: "string"
      - name: "dataFinal"
        description: "Data final"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /producaoDiariaFinanceira
                  ?dataInicial=2017-12-17T03%3A24%3A00
                  &dataFinal=2018-04-17T03%3A24%3A00")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /producaoDiariaFinanceira"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'dataInicial': '2017-12-17T03%3A24%3A00',
             'dataFinal': '2018-04-17T03%3A24%3A00'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /producaoDiariaFinanceira
                      ?dataInicial=2017-12-17T03%3A24%3A00
                      &dataFinal=2018-04-17T03%3A24%3A00');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getProducaoDiariaFinanceira"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/producaoDiariaFinanceira"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/propostaAdesao/inserir:
    put:
      summary: "InsertPropostaAdesao"
      description: "Insere uma proposta de adesão de um participante."
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/InsertPropostaAdesaoBody"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/propostaAdesao
                   /inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"nome\": \"Nome do Participante\",\n" +
                       "  \"cpf\": \"99999999999\",\n" +
                       "  \"dataNascimento\": \"1965-12-27T00:00:00\",\n" +
                       "  \"sexo\": \"Masc\",\n" +
                       "  \"nomeEstadoCivil\": \"Solteiro(a)\",\n" +
                       "  \"nomeCidadeNaturalidade\": \"São Paulo\",\n" +
                       "  \"siglaUFNaturalidade\": \"SP\",\n" +
                       "  \"nomePaisNacionalidade\": \"Brasil\",\n" +
                       "  \"codigoProfissao\": 1234,\n" +
                       "  \"nomeOcupacaoProfissional\": \"Médico\",\n" +
                       "  \"numeroPostoAtendimento\": \"Código do Posto Atendimento\",\n" +
                       "  \"politicamenteExposto\": \"S\",\n" +
                       "  \"filiacaoNomeMae\": \"Nome da Mãe do Participante\",\n" +
                       "  \"filiacaoNomePai\": \"Nome da Pai do Participante\",\n" +
                       "  \"nomeConjuge\": \"Nome do Conjuge\",\n" +
                       "  \"numeroDocumentoProducaoDiaria\": 1234,\n" +
                       "  \"vinculoInstituidor\": {\n" +
                       "    \"codigoInstituidor\": 1,\n" +
                       "    \"dataInicioVinculoInstituidor\": \"2000-01-01T00:00:00\",\n" +
                       "    \"dataFimVinculoInstituidor\": \"\",\n" +
                       "    \"matriculaInstituidor\": \"89234\"\n" +
                       "  },\n" +
                       "  \"vinculoEmpregador\": {\n" +
                       "   \"numeroContrato\": \"001\",\n" +
                       "    \"cnpjEmpregador\": \"53113791000122\",\n" +
                       "    \"dataInicioVinculoEmpregador\": \"2017-08-04T12:05:39\",\n" +
                       "    \"dataFimVinculoEmpregador\": null,\n" +
                       "    \"matriculaEmpregador\": null\n" +
                       "  },\n" +
                       "  \"adesao\": {\n" +
                       "    \"dataAdesao\": \"2009-08-01T00:00:00\",\n" +
                       "    \"cpfRepresentanteLegal\": \"11122233345\",\n" +
                       "    \"nomeRepresentanteLegal\": \"Nome do Representante Legal do Participante\",\n" +
                       "    \"cpfFuncionarioResponsavel\": \"58668425944\",\n" +
                       "    \"nomeFuncionarioResponsavel\": \"Nome do Reponsável Financeiro\",\n" +
                       "    \"idadeAposentadoria\": 70,\n" +
                       "    \"regimeIR\": \"Antecipada - Alíquotas Progressivas\",\n" +
                       "    \"nomePerfilInvestimento\": \"Conservador\",\n" +
                       "    \"rendaDeclarada\": 9485.9,\n" +
                       "    \"possuiOutroPlanoPrevidenciario\": \"SIM\",\n" +
                       "    \"possuiSeguroVidaOutraInstituicao\": \"NÃO\",\n" +
                       "    \"codigoAngariador \": 1,\n" +
                       "    \"nomeAngariador\": \"Nome do Angariador\",\n" +
                       "    \"origemAngariador\": \"RH ou Cooperativa\",\n" +
                       "    \"codigoPlano\": 2\n" +
                       "  },\n" +
                       "  \"contribuicaoPlano\": [\n" +
                       "    {\n" +
                       "      \"valor\": 879.9\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"aporte\": {\n" +
                       "    \"descricaoFormaPagamento\": \"Boleto Bancário\",\n" +
                       "    \"origemAporte\": \"Empregador\",\n" +
                       "    \"tipoAporte\": \"Programado\",\n" +
                       "    \"diaVencimento\": 25,\n" +
                       "    \"valor\": 300,\n" +
                       "    \"inicioAporte\": \"2017-11-25T09:16:31\",\n" +
                       "    \"fimAporte\": null\n" +
                       "  },\n" +
                       "  \"produtoRisco\": {\n" +
                       "    \"identificadorPropostaRiscoSeguradora\": 105250000,\n" +
                       "    \"dataInscricao\": \"2017-08-04T09:16:31\",\n" +
                       "    \"dpsPositiva\": false,\n" +
                       "    \"formaPagamentoRisco\": {\n" +
                       "      \"diaVencimento\": 25,\n" +
                       "      \"descricaoFormaPagamento\": \"Boleto Bancário\",\n" +
                       "      \"nomeCorrentista\": null,\n" +
                       "      \"cpfCorrentista\": null,\n" +
                       "      \"cnpjCorrentista\": null,\n" +
                       "      \"codigoBanco\": null,\n" +
                       "      \"codigoAgencia\": null,\n" +
                       "      \"digitoAgencia\": null,\n" +
                       "      \"numeroConta\": null,\n" +
                       "      \"digitoConta\": null,\n" +
                       "      \"tipoContaBancaria\": null\n" +
                       "    },\n" +
                       "    \"riscos\": [\n" +
                       "      {\n" +
                       "        \"codigoProdutoRisco\":  10,\n" +
                       "        \"descricaoProdutoRisco\": \"Morte\",\n" +
                       "        \"valorContribuicao\": 40.58,\n" +
                       "        \"valorCapitalSegurado\": 122594.54,\n" +
                       "        \"responsavelFinanceiro\": \"Empregador\"\n" +
                       "      },\n" +
                       "      {\n" +
                       "        \"codigoProdutoRisco\":  9,\n" +
                       "        \"descricaoProdutoRisco\": \"Invalidez\",\n" +
                       "        \"valorContribuicao\": 30.6,\n" +
                       "        \"valorCapitalSegurado\": 193772.93,\n" +
                       "        \"responsavelFinanceiro\": \"Empregador\"\n" +
                       "      }\n" +
                       "    ]\n" +
                       "  },\n" +
                       "  \"dadosBancarios\": [\n" +
                       "    {\n" +
                       "      \"codigoBanco\": \"001\",\n" +
                       "      \"numeroAgencia\": \"3025\",\n" +
                       "      \"digitoAgencia\": \"8\",\n" +
                       "      \"numeroConta\": \"123456\",\n" +
                       "      \"digitoConta\": \"2\",\n" +
                       "      \"tipoContaBancaria\": \"Corrente\"\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"formaPagamentoContribuicao\": {\n" +
                       "    \"diaVencimento\": 15,\n" +
                       "    \"descricaoFormaPagamento\": \"Débito em Conta\",\n" +
                       "    \"nomeCorrentista\": \"Nome do Correntista para Débito em Conta\",\n" +
                       "    \"cpfCorrentista\": \"12345678900\",\n" +
                       "    \"cnpjCorrentista\": \"12345678901234\",\n" +
                       "    \"codigoBanco\": \"001\",\n" +
                       "    \"codigoAgencia\": \"3025\",\n" +
                       "    \"digitoAgencia\": \"8\",\n" +
                       "    \"numeroConta\": \"123456\",\n" +
                       "    \"digitoConta\": \"2\",\n" +
                       "    \"tipoContaBancaria\": \"Corrente\",\n" +
                       "    \"nomeInstituicaoDescontoFolha\": \"\",\n" +
                       "    \"responsavelFinanceiro\": \"Funcionário\"\n" +
                       "  },\n" +
                       "  \"identidade\": {\n" +
                       "    \"numero\": \"878787\",\n" +
                       "    \"orgaoExpedidor\": \"SSP\",\n" +
                       "    \"siglaUFExpedidor\": \"SP\",\n" +
                       "    \"dataExpedicao\": \"1990-12-27T00:00:00\"\n" +
                       "  },\n" +
                       "  \"enderecos\": [\n" +
                       "    {\n" +
                       "      \"logradouro\": \"ABCDEFG\",\n" +
                       "      \"numero\": \"61\",\n" +
                       "      \"complemento\": \"Apto 22C\",\n" +
                       "      \"cep\": \"40000000\"\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"contatos\": [\n" +
                       "    {\n" +
                       "      \"telefone\": \"(11)3333-9999\",\n" +
                       "      \"fax\": \"(11)3333-9998\",\n" +
                       "      \"celular\": \"(11)9999-9999\",\n" +
                       "      \"falarCom\": \"NomedoContato1\",\n" +
                       "      \"email\": \"contato@dominio.com.br\",\n" +
                       "      \"tipoContato\": \"Residencial\"\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"dependentes\": [\n" +
                       "    {\n" +
                       "      \"cpf\": \"22233344455\",\n" +
                       "      \"dataNascimento\": \"1991-09-29T00:00:00\",\n" +
                       "      \"nomeRelacaoDependencia\": \"Filho(a)\",\n" +
                       "      \"nome\": \"Nome do Dependente 1\",\n" +
                       "      \"percentualDistribuicao\": 50\n" +
                       "    }\n" +
                       "  ],\n" +
                       "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/propostaAdesao
                 /inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "nome": "Nome do Participante",
            "cpf": "99999999999",
            "dataNascimento": "1965-12-27T00:00:00",
            "sexo": "Masc",
            "nomeEstadoCivil": "Solteiro(a)",
            "nomeCidadeNaturalidade": "São Paulo",
            "siglaUFNaturalidade": "SP",
            "nomePaisNacionalidade": "Brasil",
            "codigoProfissao": 1234,
            "nomeOcupacaoProfissional": "Médico",
            "numeroPostoAtendimento": "Código do Posto Atendimento",
            "politicamenteExposto": "S",
            "filiacaoNomeMae": "Nome da Mãe do Participante",
            "filiacaoNomePai": "Nome da Pai do Participante",
            "nomeConjuge": "Nome do Conjuge",
            "numeroDocumentoProducaoDiaria": 1234,
            "vinculoInstituidor": {
              "codigoInstituidor": 1,
              "dataInicioVinculoInstituidor": "2000-01-01T00:00:00",
              "dataFimVinculoInstituidor": "",
              "matriculaInstituidor": "89234"
            },
            "vinculoEmpregador": {
             "numeroContrato": "001",
              "cnpjEmpregador": "53113791000122",
              "dataInicioVinculoEmpregador": "2017-08-04T12:05:39",
              "dataFimVinculoEmpregador": null,
              "matriculaEmpregador": null
            },
            "adesao": {
              "dataAdesao": "2009-08-01T00:00:00",
              "cpfRepresentanteLegal": "11122233345",
              "nomeRepresentanteLegal": "Nome do Representante Legal do Participante",
              "cpfFuncionarioResponsavel": "58668425944",
              "nomeFuncionarioResponsavel": "Nome do Reponsável Financeiro",
              "idadeAposentadoria": 70,
              "regimeIR": "Antecipada - Alíquotas Progressivas",
              "nomePerfilInvestimento": "Conservador",
              "rendaDeclarada": 9485.9,
              "possuiOutroPlanoPrevidenciario": "SIM",
              "possuiSeguroVidaOutraInstituicao": "NÃO",
              "codigoAngariador ": 1,
              "nomeAngariador": "Nome do Angariador",
              "origemAngariador": "RH ou Cooperativa",
              "codigoPlano": 2
            },
            "contribuicaoPlano": [
              {
                "valor": 879.9
              }
            ],
            "aporte": {
              "descricaoFormaPagamento": "Boleto Bancário",
              "origemAporte": "Empregador",
              "tipoAporte": "Programado",
              "diaVencimento": 25,
              "valor": 300,
              "inicioAporte": "2017-11-25T09:16:31",
              "fimAporte": null
            },
            "produtoRisco": {
              "identificadorPropostaRiscoSeguradora": 105250000,
              "dataInscricao": "2017-08-04T09:16:31",
              "dpsPositiva": false,
              "formaPagamentoRisco": {
                "diaVencimento": 25,
                "descricaoFormaPagamento": "Boleto Bancário",
                "nomeCorrentista": null,
                "cpfCorrentista": null,
                "cnpjCorrentista": null,
                "codigoBanco": null,
                "codigoAgencia": null,
                "digitoAgencia": null,
                "numeroConta": null,
                "digitoConta": null,
                "tipoContaBancaria": null
              },
              "riscos": [
                {
                  "codigoProdutoRisco":  10,
                  "descricaoProdutoRisco": "Morte",
                  "valorContribuicao": 40.58,
                  "valorCapitalSegurado": 122594.54,
                  "responsavelFinanceiro": "Empregador"
                },
                {
                  "codigoProdutoRisco":  9,
                  "descricaoProdutoRisco": "Invalidez",
                  "valorContribuicao": 30.6,
                  "valorCapitalSegurado": 193772.93,
                  "responsavelFinanceiro": "Empregador"
                }
              ]
            },
            "dadosBancarios": [
              {
                "codigoBanco": "001",
                "numeroAgencia": "3025",
                "digitoAgencia": "8",
                "numeroConta": "123456",
                "digitoConta": "2",
                "tipoContaBancaria": "Corrente"
              }
            ],
            "formaPagamentoContribuicao": {
              "diaVencimento": 15,
              "descricaoFormaPagamento": "Débito em Conta",
              "nomeCorrentista": "Nome do Correntista para Débito em Conta",
              "cpfCorrentista": "12345678900",
              "cnpjCorrentista": "12345678901234",
              "codigoBanco": "001",
              "codigoAgencia": "3025",
              "digitoAgencia": "8",
              "numeroConta": "123456",
              "digitoConta": "2",
              "tipoContaBancaria": "Corrente",
              "nomeInstituicaoDescontoFolha": "",
              "responsavelFinanceiro": "Funcionário"
            },
            "identidade": {
              "numero": "878787",
              "orgaoExpedidor": "SSP",
              "siglaUFExpedidor": "SP",
              "dataExpedicao": "1990-12-27T00:00:00"
            },
            "enderecos": [
              {
                "logradouro": "ABCDEFG",
                "numero": "61",
                "complemento": "Apto 22C",
                "cep": "40000000"
              }
            ],
            "contatos": [
              {
                "telefone": "(11)3333-9999",
                "fax": "(11)3333-9998",
                "celular": "(11)9999-9999",
                "falarCom": "NomedoContato1",
                "email": "contato@dominio.com.br",
                "tipoContato": "Residencial"
              }
            ],
            "dependentes": [
              {
                "cpf": "22233344455",
                "dataNascimento": "1991-09-29T00:00:00",
                "nomeRelacaoDependencia": "Filho(a)",
                "nome": "Nome do Dependente 1",
                "percentualDistribuicao": 50
              }
            ],
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /propostaAdesao/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "nome": "Nome do Participante",
             "cpf": "99999999999",
             "dataNascimento": "1965-12-27T00:00:00",
             "sexo": "Masc",
             "nomeEstadoCivil": "Solteiro(a)",
             "nomeCidadeNaturalidade": "São Paulo",
             "siglaUFNaturalidade": "SP",
             "nomePaisNacionalidade": "Brasil",
             "codigoProfissao": 1234,
             "nomeOcupacaoProfissional": "Médico",
             "numeroPostoAtendimento": "Código do Posto Atendimento",
             "politicamenteExposto": "S",
             "filiacaoNomeMae": "Nome da Mãe do Participante",
             "filiacaoNomePai": "Nome da Pai do Participante",
             "nomeConjuge": "Nome do Conjuge",
             "numeroDocumentoProducaoDiaria": 1234,
             "vinculoInstituidor": {
               "codigoInstituidor": 1,
               "dataInicioVinculoInstituidor": "2000-01-01T00:00:00",
               "dataFimVinculoInstituidor": "",
               "matriculaInstituidor": "89234"
             },
             "vinculoEmpregador": {
              "numeroContrato": "001",
               "cnpjEmpregador": "53113791000122",
               "dataInicioVinculoEmpregador": "2017-08-04T12:05:39",
               "dataFimVinculoEmpregador": null,
               "matriculaEmpregador": null
             },
             "adesao": {
               "dataAdesao": "2009-08-01T00:00:00",
               "cpfRepresentanteLegal": "11122233345",
               "nomeRepresentanteLegal": "Nome do Representante Legal do Participante",
               "cpfFuncionarioResponsavel": "58668425944",
               "nomeFuncionarioResponsavel": "Nome do Reponsável Financeiro",
               "idadeAposentadoria": 70,
               "regimeIR": "Antecipada - Alíquotas Progressivas",
               "nomePerfilInvestimento": "Conservador",
               "rendaDeclarada": 9485.9,
               "possuiOutroPlanoPrevidenciario": "SIM",
               "possuiSeguroVidaOutraInstituicao": "NÃO",
               "codigoAngariador ": 1,
               "nomeAngariador": "Nome do Angariador",
               "origemAngariador": "RH ou Cooperativa",
               "codigoPlano": 2
             },
             "contribuicaoPlano": [
               {
                 "valor": 879.9
               }
             ],
             "aporte": {
               "descricaoFormaPagamento": "Boleto Bancário",
               "origemAporte": "Empregador",
               "tipoAporte": "Programado",
               "diaVencimento": 25,
               "valor": 300,
               "inicioAporte": "2017-11-25T09:16:31",
               "fimAporte": null
             },
             "produtoRisco": {
               "identificadorPropostaRiscoSeguradora": 105250000,
               "dataInscricao": "2017-08-04T09:16:31",
               "dpsPositiva": false,
               "formaPagamentoRisco": {
                 "diaVencimento": 25,
                 "descricaoFormaPagamento": "Boleto Bancário",
                 "nomeCorrentista": null,
                 "cpfCorrentista": null,
                 "cnpjCorrentista": null,
                 "codigoBanco": null,
                 "codigoAgencia": null,
                 "digitoAgencia": null,
                 "numeroConta": null,
                 "digitoConta": null,
                 "tipoContaBancaria": null
               },
               "riscos": [
                 {
                   "codigoProdutoRisco":  10,
                   "descricaoProdutoRisco": "Morte",
                   "valorContribuicao": 40.58,
                   "valorCapitalSegurado": 122594.54,
                   "responsavelFinanceiro": "Empregador"
                 },
                 {
                   "codigoProdutoRisco":  9,
                   "descricaoProdutoRisco": "Invalidez",
                   "valorContribuicao": 30.6,
                   "valorCapitalSegurado": 193772.93,
                   "responsavelFinanceiro": "Empregador"
                 }
               ]
             },
             "dadosBancarios": [
               {
                 "codigoBanco": "001",
                 "numeroAgencia": "3025",
                 "digitoAgencia": "8",
                 "numeroConta": "123456",
                 "digitoConta": "2",
                 "tipoContaBancaria": "Corrente"
               }
             ],
             "formaPagamentoContribuicao": {
               "diaVencimento": 15,
               "descricaoFormaPagamento": "Débito em Conta",
               "nomeCorrentista": "Nome do Correntista para Débito em Conta",
               "cpfCorrentista": "12345678900",
               "cnpjCorrentista": "12345678901234",
               "codigoBanco": "001",
               "codigoAgencia": "3025",
               "digitoAgencia": "8",
               "numeroConta": "123456",
               "digitoConta": "2",
               "tipoContaBancaria": "Corrente",
               "nomeInstituicaoDescontoFolha": "",
               "responsavelFinanceiro": "Funcionário"
             },
             "identidade": {
               "numero": "878787",
               "orgaoExpedidor": "SSP",
               "siglaUFExpedidor": "SP",
               "dataExpedicao": "1990-12-27T00:00:00"
             },
             "enderecos": [
               {
                 "logradouro": "ABCDEFG",
                 "numero": "61",
                 "complemento": "Apto 22C",
                 "cep": "40000000"
               }
             ],
             "contatos": [
               {
                 "telefone": "(11)3333-9999",
                 "fax": "(11)3333-9998",
                 "celular": "(11)9999-9999",
                 "falarCom": "NomedoContato1",
                 "email": "contato@dominio.com.br",
                 "tipoContato": "Residencial"
               }
             ],
             "dependentes": [
               {
                 "cpf": "22233344455",
                 "dataNascimento": "1991-09-29T00:00:00",
                 "nomeRelacaoDependencia": "Filho(a)",
                 "nome": "Nome do Dependente 1",
                 "percentualDistribuicao": 50
               }
             ],
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/InsertPropostaAdesaoRetorno"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/propostaAdesao/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/propostaRisco/atualizarStatus:
    post:
      produces:
      - "application/json"
      summary: "UpdateStatusPropostaRisco"
      description: "Atualiza o Status das propostas de risco efetuadas pelo SOP."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postUpdateStatusPropostaRiscoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/propostaRisco
                   /atualizarStatus"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"produtosRisco\": [\n" +
                      "    {\n" +
                      "      \"inscricaoQuanta\": \"1234324\",\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 938382,\n" +
                      "      \"descricaoProdutoRisco\": \"Morte\",\n" +
                      "      \"descricaoStatus\": \"Pendente\",\n" +
                      "      \"dataStatus\": \"2014-08-01T10:32:12\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 315120,\n" +
                      "      \"codigoPlano\": 1\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"inscricaoQuanta\": \"1234324\",\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 938382,\n" +
                      "      \"descricaoProdutoRisco\": \"Invalidez\",\n" +
                      "      \"descricaoStatus\": \"Implantada\",\n" +
                      "      \"dataStatus\": \"2014-08-01T10:32:20\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 315120,\n" +
                      "      \"codigoPlano\": 1\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"inscricaoQuanta\": \"4545\",\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 234234,\n" +
                      "      \"descricaoProdutoRisco\": \"Morte\",\n" +
                      "      \"descricaoStatus\": \"Pendente\",\n" +
                      "      \"dataStatus\": \"2014-08-01T10:43:00\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 315120,\n" +
                      "      \"codigoPlano\": 1\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"inscricaoQuanta\": \"458678\",\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 234234,\n" +
                      "      \"descricaoProdutoRisco\": \"Morte\",\n" +
                      "      \"descricaoStatus\": \"Implantada\",\n" +
                      "      \"dataStatus\": \"2014-08-01T11:21:32\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 315120,\n" +
                      "      \"codigoPlano\": 1\n" +
                      "    },\n" +
                      "    {\n" +
                      "      \"inscricaoQuanta\": \"789567\",\n" +
                      "      \"identificadorPropostaRiscoSeguradora\": 345345,\n" +
                      "      \"descricaoProdutoRisco\": \"Invalidez\",\n" +
                      "      \"descricaoStatus\": \"Implantada\",\n" +
                      "      \"dataStatus\": \"2014-08-01T08:52:23\",\n" +
                      "      \"numeroDocumentoProducaoDiaria\": 315120,\n" +
                      "      \"codigoPlano\": 1\n" +
                      "    }\n" +
                      "  ],\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/propostaRisco
                /atualizarStatus"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "produtosRisco": [
              {
                "inscricaoQuanta": "1234324",
                "identificadorPropostaRiscoSeguradora": 938382,
                "descricaoProdutoRisco": "Morte",
                "descricaoStatus": "Pendente",
                "dataStatus": "2014-08-01T10:32:12",
                "numeroDocumentoProducaoDiaria": 315120,
                "codigoPlano": 1
              },
              {
                "inscricaoQuanta": "1234324",
                "identificadorPropostaRiscoSeguradora": 938382,
                "descricaoProdutoRisco": "Invalidez",
                "descricaoStatus": "Implantada",
                "dataStatus": "2014-08-01T10:32:20",
                "numeroDocumentoProducaoDiaria": 315120,
                "codigoPlano": 1
              },
              {
                "inscricaoQuanta": "4545",
                "identificadorPropostaRiscoSeguradora": 234234,
                "descricaoProdutoRisco": "Morte",
                "descricaoStatus": "Pendente",
                "dataStatus": "2014-08-01T10:43:00",
                "numeroDocumentoProducaoDiaria": 315120,
                "codigoPlano": 1
              },
              {
                "inscricaoQuanta": "458678",
                "identificadorPropostaRiscoSeguradora": 234234,
                "descricaoProdutoRisco": "Morte",
                "descricaoStatus": "Implantada",
                "dataStatus": "2014-08-01T11:21:32",
                "numeroDocumentoProducaoDiaria": 315120,
                "codigoPlano": 1
              },
              {
                "inscricaoQuanta": "789567",
                "identificadorPropostaRiscoSeguradora": 345345,
                "descricaoProdutoRisco": "Invalidez",
                "descricaoStatus": "Implantada",
                "dataStatus": "2014-08-01T08:52:23",
                "numeroDocumentoProducaoDiaria": 315120,
                "codigoPlano": 1
              }
            ],
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /propostaRisco/atualizarStatus');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "produtosRisco": [
               {
                 "inscricaoQuanta": "1234324",
                 "identificadorPropostaRiscoSeguradora": 938382,
                 "descricaoProdutoRisco": "Morte",
                 "descricaoStatus": "Pendente",
                 "dataStatus": "2014-08-01T10:32:12",
                 "numeroDocumentoProducaoDiaria": 315120,
                 "codigoPlano": 1
               },
               {
                 "inscricaoQuanta": "1234324",
                 "identificadorPropostaRiscoSeguradora": 938382,
                 "descricaoProdutoRisco": "Invalidez",
                 "descricaoStatus": "Implantada",
                 "dataStatus": "2014-08-01T10:32:20",
                 "numeroDocumentoProducaoDiaria": 315120,
                 "codigoPlano": 1
               },
               {
                 "inscricaoQuanta": "4545",
                 "identificadorPropostaRiscoSeguradora": 234234,
                 "descricaoProdutoRisco": "Morte",
                 "descricaoStatus": "Pendente",
                 "dataStatus": "2014-08-01T10:43:00",
                 "numeroDocumentoProducaoDiaria": 315120,
                 "codigoPlano": 1
               },
               {
                 "inscricaoQuanta": "458678",
                 "identificadorPropostaRiscoSeguradora": 234234,
                 "descricaoProdutoRisco": "Morte",
                 "descricaoStatus": "Implantada",
                 "dataStatus": "2014-08-01T11:21:32",
                 "numeroDocumentoProducaoDiaria": 315120,
                 "codigoPlano": 1
               },
               {
                 "inscricaoQuanta": "789567",
                 "identificadorPropostaRiscoSeguradora": 345345,
                 "descricaoProdutoRisco": "Invalidez",
                 "descricaoStatus": "Implantada",
                 "dataStatus": "2014-08-01T08:52:23",
                 "numeroDocumentoProducaoDiaria": 315120,
                 "codigoPlano": 1
               }
             ],
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postUpdateStatusPropostaRiscoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/propostaRisco/atualizarStatus"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/propostaRisco/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertPropostaSuplementarRisco"
      description: "Insere proposta(s) suplementar(es) de risco na adesão do participante."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertPropostaSuplementarRiscoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante/propostaRisco
                   /inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"inscricaoQuanta\": \"7\",\n" +
                       "  \"codigoPlano\": 4,\n" +
                       "  \"codigoModeloProposta\": null,\n" +
                       "  \"vencimento\": \"2017-08-10T00:00:00\",\n" +
                       "  \"produtoRisco\":\n" +
                       "  {\n" +
                       "    \"identificadorPropostaRiscoSeguradora\": 105250011,\n" +
                       "    \"dataInscricao\": \"2017-08-10T00:00:00\",\n" +
                       "    \"responsavel\": \"Participante\",\n" +
                       "    \"dpsPositiva\": false,\n" +
                       "    \"numeroPostoAtendimento\": 1,\n" +
                       "    \"codigoAngariador\": 8584,\n" +
                       "    \"nomeAngariador\": \"Nome Angariador\",\n" +
                       "    \"origemAngariador\": \"RH ou Cooperativa\",\n" +
                       "    \"numeroDocumentoProducaoDiaria\": 325699,\n" +
                       "    \"responsavelFinanceiro\": \"Participante\",\n" +
                       "    \"formaPagamentoRisco\": {\n" +
                       "      \"diaVencimento\": 25,\n" +
                       "      \"descricaoFormaPagamento\": \"Boleto Bancário\",\n" +
                       "      \"nomeCorrentista\": null,\n" +
                       "      \"cpfCorrentista\": null,\n" +
                       "      \"cnpjCorrentista\": null,\n" +
                       "      \"codigoBanco\": null,\n" +
                       "      \"codigoAgencia\": null,\n" +
                       "      \"digitoAgencia\": null,\n" +
                       "      \"numeroConta\": null,\n" +
                       "      \"digitoConta\": null,\n" +
                       "      \"tipoContaBancaria\": null\n" +
                       "    },\n" +
                       "    \"riscos\":[\n" +
                       "      {\n" +
                       "        \"codigoProdutoRisco\":  10,\n" +
                       "        \"descricaoProdutoRisco\": \"Morte\",\n" +
                       "        \"valorContribuicao\": 40.58,\n" +
                       "        \"valorCapitalSegurado\": 122594.54,\n" +
                       "        \"responsavelFinanceiro\": \"Empregador\"\n" +
                       "      },\n" +
                       "      {\n" +
                       "        \"codigoProdutoRisco\":  9,\n" +
                       "        \"descricaoProdutoRisco\": \"Invalidez\",\n" +
                       "        \"valorContribuicao\": 30.6,\n" +
                       "        \"valorCapitalSegurado\": 193772.93,\n" +
                       "        \"responsavelFinanceiro\": \"Empregador\"\n" +
                       "      }\n" +
                       "    ]\n" +
                       "  },\n" +
                       "  \"userName\": \"quanta\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /propostaRisco/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "7",
            "codigoPlano": 4,
            "codigoModeloProposta": null,
            "vencimento": "2017-08-10T00:00:00",
            "produtoRisco":
            {
              "identificadorPropostaRiscoSeguradora": 105250011,
              "dataInscricao": "2017-08-10T00:00:00",
              "responsavel": "Participante",
              "dpsPositiva": false,
              "numeroPostoAtendimento": 1,
              "codigoAngariador": 8584,
              "nomeAngariador": "Nome Angariador",
              "origemAngariador": "RH ou Cooperativa",
              "numeroDocumentoProducaoDiaria": 325699,
              "responsavelFinanceiro": "Participante",
              "formaPagamentoRisco": {
                "diaVencimento": 25,
                "descricaoFormaPagamento": "Boleto Bancário",
                "nomeCorrentista": null,
                "cpfCorrentista": null,
                "cnpjCorrentista": null,
                "codigoBanco": null,
                "codigoAgencia": null,
                "digitoAgencia": null,
                "numeroConta": null,
                "digitoConta": null,
                "tipoContaBancaria": null
              },
              "riscos":[
                {
                  "codigoProdutoRisco":  10,
                  "descricaoProdutoRisco": "Morte",
                  "valorContribuicao": 40.58,
                  "valorCapitalSegurado": 122594.54,
                  "responsavelFinanceiro": "Empregador"
                },
                {
                  "codigoProdutoRisco":  9,
                  "descricaoProdutoRisco": "Invalidez",
                  "valorContribuicao": 30.6,
                  "valorCapitalSegurado": 193772.93,
                  "responsavelFinanceiro": "Empregador"
                }
              ]
            },
            "userName": "quanta"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /propostaRisco/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "7",
             "codigoPlano": 4,
             "codigoModeloProposta": null,
             "vencimento": "2017-08-10T00:00:00",
             "produtoRisco":
             {
               "identificadorPropostaRiscoSeguradora": 105250011,
               "dataInscricao": "2017-08-10T00:00:00",
               "responsavel": "Participante",
               "dpsPositiva": false,
               "numeroPostoAtendimento": 1,
               "codigoAngariador": 8584,
               "nomeAngariador": "Nome Angariador",
               "origemAngariador": "RH ou Cooperativa",
               "numeroDocumentoProducaoDiaria": 325699,
               "responsavelFinanceiro": "Participante",
               "formaPagamentoRisco": {
                 "diaVencimento": 25,
                 "descricaoFormaPagamento": "Boleto Bancário",
                 "nomeCorrentista": null,
                 "cpfCorrentista": null,
                 "cnpjCorrentista": null,
                 "codigoBanco": null,
                 "codigoAgencia": null,
                 "digitoAgencia": null,
                 "numeroConta": null,
                 "digitoConta": null,
                 "tipoContaBancaria": null
               },
               "riscos":[
                 {
                   "codigoProdutoRisco":  10,
                   "descricaoProdutoRisco": "Morte",
                   "valorContribuicao": 40.58,
                   "valorCapitalSegurado": 122594.54,
                   "responsavelFinanceiro": "Empregador"
                 },
                 {
                   "codigoProdutoRisco":  9,
                   "descricaoProdutoRisco": "Invalidez",
                   "valorContribuicao": 30.6,
                   "valorCapitalSegurado": 193772.93,
                   "responsavelFinanceiro": "Empregador"
                 }
               ]
             },
             "userName": "quanta"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertPropostaSuplementarRiscoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/propostaRisco/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/propostaRiscoVinculado/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertPropostaSuplementarRiscoVinculado"
      description: "Insere proposta(s) suplementar(es) de risco na adesão do participante vinculado."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertPropostaSuplementarRiscoVinculadoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /propostaRiscoVinculado/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"inscricaoQuanta\": \"7\",\n" +
                       "  \"codigoPlano\": 4,\n" +
                       "  \"vencimento\": \"2017-08-10T00:00:00\",\n" +
                       "  \"codigoModeloProposta\": null,\n" +
                       "  \"produtoRisco\":\n" +
                       "  {\n" +
                       "    \"identificadorPropostaRiscoSeguradora\": 105250011,\n" +
                       "    \"dataInscricao\": \"2017-08-10T00:00:00\",\n" +
                       "    \"responsavel\": \"Participante\",\n" +
                       "    \"dpsPositiva\": false,\n" +
                       "    \"numeroPostoAtendimento\": 1,\n" +
                       "    \"codigoAngariador\": 8584,\n" +
                       "    \"nomeAngariador\": \"Nome Angariador\",\n" +
                       "    \"numeroDocumentoProducaoDiaria\": 325699,\n" +
                       "    \"responsavelFinanceiro\": \"Participante\",\n" +
                       "    \"formaPagamentoRisco\": {\n" +
                       "      \"diaVencimento\": 25,\n" +
                       "      \"descricaoFormaPagamento\": \"Boleto Bancário\",\n" +
                       "      \"nomeCorrentista\": null,\n" +
                       "      \"cpfCorrentista\": null,\n" +
                       "      \"cnpjCorrentista\": null,\n" +
                       "      \"codigoBanco\": null,\n" +
                       "      \"codigoAgencia\": null,\n" +
                       "      \"digitoAgencia\": null,\n" +
                       "      \"numeroConta\": null,\n" +
                       "      \"digitoConta\": null,\n" +
                       "      \"tipoContaBancaria\": null\n" +
                       "    },\n" +
                       "    \"riscos\":[\n" +
                       "      {\n" +
                       "        \"descricaoProdutoRisco\": \"Morte\",\n" +
                       "        \"valorContribuicao\": 55,\n" +
                       "        \"valorCapitalSegurado\": 122594.54\n" +
                       "      },\n" +
                       "      {\n" +
                       "        \"descricaoProdutoRisco\": \"Invalidez\",\n" +
                       "        \"valorContribuicao\": 37,\n" +
                       "        \"valorCapitalSegurado\": 193772.93\n" +
                       "      }\n" +
                       "    ]\n" +
                       "  },\n" +
                       "  \"userName\": \"quanta\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /propostaRiscoVinculado/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "7",
            "codigoPlano": 4,
            "vencimento": "2017-08-10T00:00:00",
            "codigoModeloProposta": null,
            "produtoRisco":
            {
              "identificadorPropostaRiscoSeguradora": 105250011,
              "dataInscricao": "2017-08-10T00:00:00",
              "responsavel": "Participante",
              "dpsPositiva": false,
              "numeroPostoAtendimento": 1,
              "codigoAngariador": 8584,
              "nomeAngariador": "Nome Angariador",
              "numeroDocumentoProducaoDiaria": 325699,
              "responsavelFinanceiro": "Participante",
              "formaPagamentoRisco": {
                "diaVencimento": 25,
                "descricaoFormaPagamento": "Boleto Bancário",
                "nomeCorrentista": null,
                "cpfCorrentista": null,
                "cnpjCorrentista": null,
                "codigoBanco": null,
                "codigoAgencia": null,
                "digitoAgencia": null,
                "numeroConta": null,
                "digitoConta": null,
                "tipoContaBancaria": null
              },
              "riscos":[
                {
                  "descricaoProdutoRisco": "Morte",
                  "valorContribuicao": 55,
                  "valorCapitalSegurado": 122594.54
                },
                {
                  "descricaoProdutoRisco": "Invalidez",
                  "valorContribuicao": 37,
                  "valorCapitalSegurado": 193772.93
                }
              ]
            },
            "userName": "quanta"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /propostaRiscoVinculado/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "7",
             "codigoPlano": 4,
             "vencimento": "2017-08-10T00:00:00",
             "codigoModeloProposta": null,
             "produtoRisco":
             {
               "identificadorPropostaRiscoSeguradora": 105250011,
               "dataInscricao": "2017-08-10T00:00:00",
               "responsavel": "Participante",
               "dpsPositiva": false,
               "numeroPostoAtendimento": 1,
               "codigoAngariador": 8584,
               "nomeAngariador": "Nome Angariador",
               "numeroDocumentoProducaoDiaria": 325699,
               "responsavelFinanceiro": "Participante",
               "formaPagamentoRisco": {
                 "diaVencimento": 25,
                 "descricaoFormaPagamento": "Boleto Bancário",
                 "nomeCorrentista": null,
                 "cpfCorrentista": null,
                 "cnpjCorrentista": null,
                 "codigoBanco": null,
                 "codigoAgencia": null,
                 "digitoAgencia": null,
                 "numeroConta": null,
                 "digitoConta": null,
                 "tipoContaBancaria": null
               },
               "riscos":[
                 {
                   "descricaoProdutoRisco": "Morte",
                   "valorContribuicao": 55,
                   "valorCapitalSegurado": 122594.54
                 },
                 {
                   "descricaoProdutoRisco": "Invalidez",
                   "valorContribuicao": 37,
                   "valorCapitalSegurado": 193772.93
                 }
               ]
             },
             "userName": "quanta"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertPropostaSuplementarRiscoVinculadoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/propostaRiscoVinculado/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/saldoReserva:
    get:
      produces:
      - "application/json"
      summary: "GetSaldoParticipanteByInscricaoCpf"
      description: |
        Retornar o saldo da reserva da adesão do participante filtrado pelo identificador da adesão, CPF do participante e a data informados na URL.
        * O parâmetro de data não é obrigatório. Caso não seja informado, será retornado o último saldo do participante.
        * O parâmetro codigoPlano só é obrigatório para o plano PREVCOOP
        * Um dos campos a seguir deve ser informado: inscricao ou cpf.
      parameters:
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do Participante"
        in: "query"
        required: false
        type: "string"
      - name: "data"
        description: "Data limite para consulta do saldo"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        description: "Código do Instituidor"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /saldoReserva
                  ?cpf=04908861080
                  &codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /saldoReserva"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '04908861080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /saldoReserva
                      ?cpf=04908861080
                      &codigoInstituidor=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getSaldoParticipanteByInscricaoCpf"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/saldoReserva"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/saldoReservaDetalhado:
    get:
      produces:
      - "application/json"
      summary: "GetSaldoDetalhadoParticipanteByInscricaoCpf"
      description: "Retornar o saldo detalhado da reserva da adesão do participante filtrado pelo identificador da adesão, CPF do participante e a data informados na URL."
      parameters:
      - name: "inscricao"
        description: "Número de inscrição do participante"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do Participante"
        in: "query"
        required: false
        type: "string"
      - name: "data"
        description: "Data limite para consulta do saldo"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        description: "Código do Instituidor"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /saldoReservaDetalhado
                  ?cpf=04908861080
                  &codigoInstituidor=45")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                /saldoReservaDetalhado"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': '04908861080',
             'codigoInstituidor': '45'
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /saldoReservaDetalhado
                      ?cpf=04908861080
                      &codigoInstituidor=45');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getSaldoDetalhadoParticipanteByInscricaoCpf"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/saldoReservaDetalhado"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/simulacaoBeneficio:
    get:
      produces:
      - "application/json"
      summary: "GetSimulacaoBeneficio"
      description: "Retorna os dados da Simulação de Benefício"
      parameters:
      - name: "capitalSegurado"
        description: "Valor do Capital Segurado"
        in: "query"
        required: false
        type: "string"
      - name: "beneficioRisco"
        description: "Boleano referente a simulação dos valores de risco, podendo ser “true” ou “false”"
        in: "query"
        required: false
        type: "string"
      - name: "opcaoSaque"
        description: "Campo que representa um inteiro, podendo ser:"
        enum:
        - "'1'(% sobre o total da Conta Beneficio)"
        - "'2'(Saque de 100% da Conta Individual"
        - "'3'(Sem Saque)"
        in: "query"
        required: false
        type: "string"
      - name: "percentualAVista"
        description: "Percentual do valor à vista"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Código do Plano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: "CPF do Participante"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "percentualSimulacao"
        in: "query"
        description: "Percentual da Simulação"
        required: false
        type: "string"
      - name: "inscricao"
        in: "query"
        description: "Inscrição do Participante"
        required: false
        type: "string"
      - name: "prazoParcelas"
        in: "query"
        description: "Prazo (em anos)"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        description: "Código do Instituidor"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /simulacaoBeneficio
                  ?cpf=04908861080
                  &codigoInstituidor=45
                  &inscricao=487
                  &prazoParcelas=5
                  &percentualSimulacao=10
                  &percentualAVista=35
                  &beneficioRisco=false
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /simulacaoBeneficio"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': 04908861080
             'codigoInstituidor': 45
             'inscricao': 487
             'prazoParcelas': 5
             'percentualSimulacao': 10
             'percentualAVista': 35
             'beneficioRisco': 'false'
             'codigoPlano': 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /simulacaoBeneficio
                      ?cpf=04908861080
                      &codigoInstituidor=45
                      &inscricao=487
                      &prazoParcelas=5
                      &percentualSimulacao=10
                      &percentualAVista=35
                      &beneficioRisco=false
                      &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getSimulacaoBeneficio"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/simulacaoBeneficio"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/simulacaoResgate:
    get:
      produces:
      - "application/json"
      summary: "GetSimulacaoResgate"
      description: "Retorna a Simulação do Resgate."
      parameters:
      - name: "identificadorTipoResgate"
        in: "query"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        required: false
        type: "string"
      - name: "cpf"
        description: ""
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "inscricao"
        description: ""
        in: "query"
        required: false
        type: "string"
      - name: "prazoParcelas"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        required: false
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /simulacaoResgate
                  ?cpf=04908861080
                  &codigoInstituidor=45
                  &inscricao=487
                  &prazoParcelas=5
                  &identificadorTipoResgate=71
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /simulacaoResgate"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cpf': 04908861080
             'codigoInstituidor': 45
             'inscricao': 487
             'prazoParcelas': 5
             'identificadorTipoResgate': 71
             'codigoPlano': 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /simulacaoResgate
                      ?cpf=04908861080
                      &codigoInstituidor=45
                      &inscricao=487
                      &prazoParcelas=5
                      &identificadorTipoResgate=71
                      &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getSimulacaoResgate"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/simulacaoResgate"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/suspensaoContribuicao:
    get:
      produces:
      - "application/json"
      summary: "GetSuspensoesContribuicaoByInscricao"
      description: "Retorna a relação das Suspensões de Contribuição filtradas pela inscrição informada na URL."
      parameters:
      - name: "inscricao"
        in: "query"
        description: "Número de inscrição do participante"
        required: false
        type: "string"
      - name: "codigoPlano"
        description: "Identificador do plano"
        in: "query"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        description: "Código do Instituidor"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                       /suspensaoContribuicao
                  ?codigoInstituidor=45
                  &inscricao=487
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /suspensaoContribuicao"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'codigoInstituidor': 45
             'inscricao': 487
             'codigoPlano': 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio
                            /participante
                            /suspensaoContribuicao
                      ?codigoInstituidor=45
                      &inscricao=487
                      &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getSuspensoesContribuicaoByInscricao"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/suspensaoContribuicao"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/suspensaoContribuicao/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertSuspensaoContribuicao"
      description: "Insere uma Suspensão de Contribuição no sistema."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertSuspensaoContribuicaoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /suspensaoContribuicao/inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"inscricaoQuanta\": \"22690\",\n" +
                       "  \"codigoPlano\": 2,\n" +
                       "  \"dataSolicitacaoSuspensao\": \"2014-08-10T15:39:23\",\n" +
                       "  \"qtdeMesesSuspensao\": 12,\n" +
                       "  \"contribuicao\": \"Aposentadoria\",\n" +
                       "  \"observacoes\": \"observações diversas sobre a suspensão da contribuição....\",\n" +
                       "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /suspensaoContribuicao/inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "22690",
            "codigoPlano": 2,
            "dataSolicitacaoSuspensao": "2014-08-10T15:39:23",
            "qtdeMesesSuspensao": 12,
            "contribuicao": "Aposentadoria",
            "observacoes": "observações diversas sobre a suspensão da contribuição....",
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /suspensaoContribuicao/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "22690",
             "codigoPlano": 2,
             "dataSolicitacaoSuspensao": "2014-08-10T15:39:23",
             "qtdeMesesSuspensao": 12,
             "contribuicao": "Aposentadoria",
             "observacoes": "observações diversas sobre a suspensão da contribuição....",
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertSuspensaoContribuicaoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/suspensaoContribuicao/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/suspensaoContribuicao/reverter:
    post:
      produces:
      - "application/json"
      summary: "ReverterSuspensaoContribuicao"
      description: "Reverte uma Suspensão de Contribuição da adesão no sistema."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postReverterSuspensaoContribuicaoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /suspensaoContribuicao/reverter"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"inscricaoQuanta\": \"238472\",\n" +
                      "  \"codigoPlano\": 2,\n" +
                      "  \"dataReversao\": \"2014-12-01T00:00:00\",\n" +
                      "  \"contribuicao\": \"Morte\",\n" +
                      "  \"userName\": \"nomeUsuarioSOP\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /suspensaoContribuicao/reverter"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "inscricaoQuanta": "238472",
            "codigoPlano": 2,
            "dataReversao": "2014-12-01T00:00:00",
            "contribuicao": "Morte",
            "userName": "nomeUsuarioSOP"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                           /suspensaoContribuicao/reverter');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "inscricaoQuanta": "238472",
             "codigoPlano": 2,
             "dataReversao": "2014-12-01T00:00:00",
             "contribuicao": "Morte",
             "userName": "nomeUsuarioSOP"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postReverterSuspensaoContribuicaoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/suspensaoContribuicao/reverter"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
  /api/v1/beneficio/participante/suspensaoContribuicaoContrato:
    get:
      produces:
      - "application/json"
      summary: "GetSuspensoesContribuicaoContrato"
      description: "Retorna as suspensões do Contrato."
      parameters:
      - name: "identificadorContrato"
        in: "query"
        description: "Código identificador do Contrato"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        description: "Identificador do Plano"
        required: false
        type: "string"
      - name: "cnpjEmpregador"
        in: "query"
        description: "CNPJ do Empregador"
        required: false
        type: "string"
      - name: "codigoInstituidor"
        in: "query"
        description: "Código do Instituidor"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /suspensaoContribuicaoContrato
                  ?codigoInstituidor=45
                  &identificadorContrato=487
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /suspensaoContribuicaoContrato"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'codigoInstituidor': 45
             'identificadorContrato': 487
             'codigoPlano': 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /suspensaoContribuicaoContrato
                      ?codigoInstituidor=45
                      &identificadorContrato=487
                      &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getSuspensoesContribuicaoContrato"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/suspensaoContribuicaoContrato"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/suspensaoContribuicaoContrato/inserir:
    put:
      produces:
      - "application/json"
      summary: "InsertSuspensaoContribuicaoContrato"
      description: "Insere a suspensão da geração de cobrança por contrato"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putInsertSuspensaoContribuicaoContratoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /suspensaoContribuicaoContrato
                   /inserir"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"identificadorContrato\": \"900\",\n" +
                       "  \"cnpjEmpregador\":\"01605706000140\",\n" +
                       "  \"codigoInstituidor\":null,\n" +
                       "  \"dataSolicitacaoSuspensao\":\"2017-08-28T00:00:00\",\n" +
                       "  \"dataFimSuspensao\":\"2017-12-28T00:00:00\",\n" +
                       "  \"contribuicaoAposentadoria\":true,\n" +
                       "  \"contribuicaoRisco\":true,\n" +
                       "  \"aporteEmpregadorInstituidor\":false,\n" +
                       "  \"userName\":\"phafTcheTche\",\n" +
                       "  \"codigoPlano\":4\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                 /suspensaoContribuicaoContrato
                 /inserir"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "identificadorContrato": "900",
            "cnpjEmpregador":"01605706000140",
            "codigoInstituidor":null,
            "dataSolicitacaoSuspensao":"2017-08-28T00:00:00",
            "dataFimSuspensao":"2017-12-28T00:00:00",
            "contribuicaoAposentadoria":true,
            "contribuicaoRisco":true,
            "aporteEmpregadorInstituidor":false,
            "userName":"phafTcheTche",
            "codigoPlano":4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                    /suspensaoContribuicaoContrato/inserir');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "identificadorContrato": "900",
             "cnpjEmpregador":"01605706000140",
             "codigoInstituidor":null,
             "dataSolicitacaoSuspensao":"2017-08-28T00:00:00",
             "dataFimSuspensao":"2017-12-28T00:00:00",
             "contribuicaoAposentadoria":true,
             "contribuicaoRisco":true,
             "aporteEmpregadorInstituidor":false,
             "userName":"phafTcheTche",
             "codigoPlano":4
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putInsertSuspensaoContribuicaoContratoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/suspensaoContribuicaoContrato/inserir"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/suspensaoContribuicaoContrato/reverter:
    put:
      produces:
      - "application/json"
      summary: "ReverterSuspensaoContribuicaoContrato"
      description: "Cancela a suspensão da geração de cobrança de um determinado contrato"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/putReverterSuspensaoContribuicaoContratoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /suspensaoContribuicaoContrato/reverter"
                   )
                  .put(RequestBody.create(
                    MediaType.parse("application/json"), "{\n" +
                       "  \"identificadorContrato\": \"900\",\n" +
                       "  \"cnpjEmpregador\": \"01605706000140\",\n" +
                       "  \"codigoInstituidor\": null,\n" +
                       "  \"dataReferencia\": \"2017-08-28T00:00:00\",\n" +
                       "  \"contribuicaoAposentadoria\":true,\n" +
                       "  \"contribuicaoRisco\":true,\n" +
                       "  \"aporteEmpregadorInstituidor\":false,\n" +
                       "  \"userName\": \"phafTcheTche\",\n" +
                       "  \"codigoPlano\": 4\n" +
                  "} \n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
            /suspensaoContribuicaoContrato/reverter"

          response = requests.put(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "identificadorContrato": "900",
            "cnpjEmpregador": "01605706000140",
            "codigoInstituidor": null,
            "dataReferencia": "2017-08-28T00:00:00",
            "contribuicaoAposentadoria":true,
            "contribuicaoRisco":true,
            "aporteEmpregadorInstituidor":false,
            "userName": "phafTcheTche",
            "codigoPlano": 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                   /suspensaoContribuicaoContrato/reverter');
          $request->setMethod('put');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "identificadorContrato": "900",
             "cnpjEmpregador": "01605706000140",
             "codigoInstituidor": null,
             "dataReferencia": "2017-08-28T00:00:00",
             "contribuicaoAposentadoria":true,
             "contribuicaoRisco":true,
             "aporteEmpregadorInstituidor":false,
             "userName": "phafTcheTche",
             "codigoPlano": 4
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/putReverterSuspensaoContribuicaoContratoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/suspensaoContribuicaoContrato/reverter"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http_proxy"
  /api/v1/beneficio/participante/tipoResgate:
    get:
      produces:
      - "application/json"
      summary: "GetTipoResgate"
      description: |
        Retorna os Tipose de Resgate
        * Informar CNPJ do Empregador caso o plano for CORPORATIVO
      parameters:
      - name: "identificadorContrato"
        in: "query"
        description: "Identificador do Contrato"
        required: false
        type: "string"
      - name: "codigoPlano"
        in: "query"
        description: "Identificador do plano"
        required: false
        type: "string"
      - name: "cnpjEmpregador"
        in: "query"
        description: "CNPJ do Empregador"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url("/api/v1/beneficio/participante
                        /tipoResgate
                  ?cnpjEmpregador=049088610801
                  &identificadorContrato=487
                  &codigoPlano=4")
                  .get()
                  .addHeader("Authorization",
                            "123accb67jkacxmnfgjh81"
                     )
                  build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante/tipoResgate"

          response = requests.get(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, params={
             'cnpjEmpregador': '049088610801'
             'identificadorContrato': 487
             'codigoPlano': 4
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                            /tipoResgate
                      ?cnpjEmpregador=049088610801
                      &identificadorContrato=487
                      &codigoPlano=4');
          $request->setMethod('get');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getTipoResgate"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/tipoResgate"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http_proxy"
  /api/v1/beneficio/participante/tornarParticipanteVinculado:
    post:
      produces:
      - "application/json"
      summary: "TornarParticipanteVinculado"
      description: "Insere uma Solicitação de Autopatrocínio no sistema Atena."
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/postTornarParticipanteVinculadoBody"
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      x-code-samples:
      - lang: 'JAVA'
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
                  .url(
                  "/api/v1/beneficio/participante
                   /tornarParticipanteVinculado"
                   )
                  .post(RequestBody.create(
                    MediaType.parse("application/json"),"{\n" +
                      "  \"cnpjEmpregador\": \"CNPJ do Empregador\",\n" +
                      "  \"inscricaoOficial\": \"Inscrição do Participante\",\n" +
                      "  \"codigoPlano\": 1,\n" +
                      "  \"userName\": \"Nome do Usuário\"\n" +
                  "}\n"))
                  .addHeader("Authorization",
                    "123accb67jkacxmnfgjh81"
                  )
                  .build();

           Response response = client.newCall(request).execute();
      - lang: 'PYTHON'
        source: |
          import requests

          url = "/api/v1/beneficio/participante
                   /tornarParticipanteVinculado"

          response = requests.post(url, headers={
             'Authorization': '123accb67jkacxmnfgjh81'
          }, json={
            "cnpjEmpregador": "CNPJ do Empregador",
            "inscricaoOficial": "Inscrição do Participante",
            "codigoPlano": 1,
            "userName": "Nome do Usuário"
          })
      - lang: 'PHP'
        source: |
          <?php

          $request = new HttpRequest();

          $request->setUrl('/api/v1/beneficio/participante
                              /tornarParticipanteVinculado');
          $request->setMethod('post');

          $request->setHeaders(array(
              'Authorization' => '123accb67jkacxmnfgjh81'
          ));

          $request->setBody('{
             "cnpjEmpregador": "CNPJ do Empregador",
             "inscricaoOficial": "Inscrição do Participante",
             "codigoPlano": 1,
             "userName": "Nome do Usuário"
           }');

          $response = $request->send();

          echo $response->getBody();
      responses:
        410:
          description: "410 response"
        411:
          description: "411 response"
        412:
          description: "412 response"
        413:
          description: "413 response"
        414:
          description: "414 response"
        415:
          description: "415 response"
        416:
          description: "416 response"
        417:
          description: "417 response"
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/postTornarParticipanteVinculadoResponse"
        201:
          description: "201 response"
        202:
          description: "202 response"
        400:
          description: "400 response"
        203:
          description: "203 response"
        401:
          description: "401 response"
        500:
          description: "500 response"
        204:
          description: "204 response"
        501:
          description: "501 response"
        205:
          description: "205 response"
        403:
          description: "403 response"
        502:
          description: "502 response"
        206:
          description: "206 response"
        404:
          description: "404 response"
        503:
          description: "503 response"
        405:
          description: "405 response"
        504:
          description: "504 response"
        406:
          description: "406 response"
        505:
          description: "505 response"
        407:
          description: "407 response"
        506:
          description: "506 response"
        408:
          description: "408 response"
        409:
          description: "409 response"
      x-amazon-apigateway-integration:
        uri: "https://${stageVariables.API_QUANTA_ENDPOINT_URL}/api/v1/beneficio/participante/tornarParticipanteVinculado"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http_proxy"
definitions:
  LoginRetorno:
    type: object
    properties:
      userName:
        type: string
        example: "Teste"
      accessToken:
        type: string
        example: "ztiJRRYD-q6Yd4rX5z8ji02aLtqnr..."
      tokenType:
        type: string
        example: "bearer"
      expiresIn:
        type: string
        example: "3600"
      issued:
        type: string
        example: "2018-01-16T12:06:38"
      expires:
        type: string
        example: "2018-01-16T13:06:38"
  InsertPropostaAdesaoBody:
    type: object
    properties:
      nome:
        description: "Nome do Participante"
        example: "Nome do Participante"
        type: string
      cpf:
        description: "CPF do Participante"
        example: "99999999999"
        type: string
      dataNascimento:
        description: "Data de Nascimento do Participante"
        example: "1965-12-27T00:00:00"
        type: string
      sexo:
        description: "Sexo do Participante, podendo ser: "
        example: "Masc"
        type: string
        enum:
        - "Masc"
        - "Fem"
      nomeEstadoCivil:
        description: "Estado Civil do Participante, podendo ser: "
        example: "Solteiro(a)"
        type: string
        enum:
        - "Solteiro(a)"
        - "Casado(a)"
        - "Viuvo(a)"
        - "Separado(a)"
        - "Divorciado(a)"
        - "União Estável"
      nomeCidadeNaturalidade:
        description: "Cidade onde o Participante nasceu."
        example: "São Paulo"
        type: string
      siglaUFNaturalidade:
        description: "Estado onde o Participante nasceu."
        example: "SP"
        type: string
      nomePaisNacionalidade:
        description: "País onde o Participante nasceu."
        example: "Brasil"
        type: string
      codigoProfissao:
        description: "Código da profissão do participante, baseado na tabela de cargos da Mongeral que realizamos a carga no SOP e na Atena."
        example: 1234
        type: integer
      nomeOcupacaoProfissional:
        description: "Descrição da profissão do participante, baseado na tabela de cargos da Mongeral que realizamos a carga no SOP e na Atena."
        example: "Médico"
        type: string
      numeroPostoAtendimento:
        description: "Número do Posto de Atendimento"
        example: "Código do Posto Atendimento"
        type: string
      politicamenteExposto:
        description: "Campo preenchido na tela do SOP, por padrão vem preenchido como 'N'. Caso seja Politicamente exposto retorna 'S'."
        example: "S"
        type: string
      filiacaoNomeMae:
        description: "Nome da Mãe do Participante"
        example: "Nome da Mãe do Participante"
        type: string
      filiacaoNomePai:
        description: "Nome do Pai do Participante"
        example: "Nome do Pai do Participante"
        type: string
      nomeConjuge:
        description: "Nome do/a conjugê do Participante"
        example: "Nome do Conjuge"
        type: string
      numeroDocumentoProducaoDiaria:
        description: "Número sequencial do SOP"
        example: 1234
        type: integer
      vinculoInstituidor:
        description: "tag que identifica o início das informações do instituidor"
        type: object
        properties:
          codigoInstituidor:
            description: "Código do Instituidor para a Quanta"
            example: 1
            type: integer
          dataInicioVinculoInstituidor:
            description: "Data inicial do vínculo com o Instituidor"
            example: "2000-01-01T00:00:00"
            type: string
          dataFimVinculoInstituidor:
            description: "Data final do vínculo com o Instituidor"
            example: ""
            type: string
          matriculaInstituidor:
            description: "Matrícula do Participante no instituidor."
            example: "89234"
            type: string
      vinculoEmpregador:
        description: "tag que identifica o início das informações do Empregador"
        type: object
        properties:
          numeroContrato:
            description: "Número do Contrato Empregador"
            example: "001"
            type: string
          cnpjEmpregador:
            description: "CNPJ do Empregador"
            example: "53113791000122"
            type: string
          dataInicioVinculoEmpregador:
            description: "Data inicial do vínculo com o Empregador"
            example: "2017-08-04T12:05:39"
            type: string
          dataFimVinculoEmpregador:
            description: "Data final do vínculo com o Empregador"
            example: null
            type: 'null'
          matriculaEmpregador:
            description: "Matrícula do Participante no Empregador."
            example: null
            type: 'null'
      adesao:
        description: "tag que identifica o início das informações da adesão da previdência e risco se for o caso"
        type: object
        properties:
          dataAdesao:
            description: "Data em que está sendo efetuada a adesão ao plano de previdência."
            example: "2009-08-01T00:00:00"
            type: string
          cpfRepresentanteLegal:
            description: "Caso seja de menor, a informação do CPF do representante deverá vir preenchida."
            example: "11122233345"
            type: string
          nomeRepresentanteLegal:
            description: "Caso seja de menor, a informação do Nome do representante deverá vir preenchida."
            example: "Nome do Representante Legal do Participante"
            type: string
          cpfFuncionarioResponsavel:
            description: "CPF do Funcionário responsável pelo Participante Dependente"
            example: "58668425944"
            type: string
          nomeFuncionarioResponsavel:
            description: "Nome do Funcionário responsável pelo Participante Dependente"
            example: "Nome do Reponsável Financeiro"
            type: string
          idadeAposentadoria:
            description: "Idade em que o Participante deseja efetivar a sua aposentadoria."
            example: 70
            type: integer
          regimeIR:
            description: "Este campo é preenchido pelo tipo de regime selecionado para o Imposto de Renda, com as seguintes opções:"
            example: "Antecipada - Alíquotas Progressivas"
            type: string
            enum:
            - "Antecipada - Alíquotas Progressivas"
            - "Definitiva - Alíquotas Regressivas"
          nomePerfilInvestimento:
            description: "informação referente ao perfil de investimento do participante, podendo ser:"
            example: "Conservador"
            enum:
            - "Conservador"
            - "Moderado"
            - "Arrojado"
            type: string
          rendaDeclarada:
            description: "Renda declarada pelo participante."
            example: 9485.9
            type: number
          possuiOutroPlanoPrevidenciario:
            description: "Definição se o participante tem outro plano de previdência (SIM/NÃO)"
            example: "SIM"
            type: string
            enum:
            - "SIM"
            - "NÃO"
          possuiSeguroVidaOutraInstituicao:
            description: "Definição se o participante tem outro seguro de vida em outra instituição: (SIM/NÃO)"
            example: "NÃO"
            type: string
            enum:
            - "SIM"
            - "NÃO"
          codigoAngariador:
            description: "Código do Angariador, pois caso não existe na base, será cadastrado em tempo de execução."
            example: 1
            type: integer
          nomeAngariador:
            description: "Nome do Angariador, pois caso não existe na base, será cadastrado em tempo de execução."
            example: "Nome do Angariador"
            type: string
          origemAngariador:
            description: "Pode ser:"
            example: "RH ou Cooperativa"
            type: string
            enum:
            - "RH"
            - "Cooperativa"
          codigoPlano:
            description: "Identificador do Plano"
            example: 2
            type: integer
      contribuicaoPlano:
        description: "tag que identifica o início das informações de contribuição do plano, o campo aceita uma lista de valores, pensando em um futuro haver mais contribuições"
        type: array
        items:
          type: object
          properties:
            valor:
              description: "Valor da contribuição"
              example: 879.9
              type: number
      aporte:
        type: object
        properties:
          descricaoFormaPagamento:
            description: "Deve ser informado a forma de pagamento do aporte:"
            example: "Boleto Bancário"
            type: string
            enum:
            - "Boleto Bancário"
            - "Débito em Conta"
            - "Desconto em Folha"
          origemAporte:
            description: "Deve ser:"
            type: string
            example: "Empregador"
            enum:
            - "Empregador"
            - "Instituidor"
            - "Participante"
          tipoAporte:
            description: "Deve ser:"
            type: string
            example: "Programado"
            enum:
            - "Unico"
            - "Programado"
          diaVencimento:
            description: "Dia do vencimento"
            type: integer
            example: 25
          valor:
            description: "Valor do Aporte"
            type: integer
            example: 300
          inicioAporte:
            description: "Data de Início do Aporte"
            type: string
            example: "2017-11-25T09:16:31"
          fimAporte:
            description: "Data final do Aporte"
            type: 'null'
            example: null
      produtoRisco:
        description: "tag que identifica os produtos que foram adquiridos de risco"
        type: object
        properties:
          identificadorPropostaRiscoSeguradora:
            description: "Identificação da proposta na seguradora"
            type: integer
            example: 105250000
          dataInscricao:
            description: "Descrição do produto, exemplo, Morte ou Invalidez."
            example: "2017-08-04T09:16:31"
            type: string
          dpsPositiva:
            description: "true ou false"
            example: false
            type: boolean
          responsavelFinanceiro:
            description: "Responsável Financeiro da Apólice, podendo ser:"
            type: string
            example: "Empregador"
            enum:
            - "Participante"
            - "Empregador"
          formaPagamentoRisco:
            description: "tag que especifica como será a forma de pagamento do risco"
            type: object
            properties:
              diaVencimento:
                description: "Informação referente ao dia de vencimento da contribuição."
                type: integer
                example: 25
              descricaoFormaPagamento:
                description: "Deve ser informado a forma de pagamento da contribuição:"
                type: string
                example: "Boleto Bancário"
                enum:
                - "Boleto Bancário"
                - "Débito em Conta"
                - "Desconto em Folha"
              nomeCorrentista:
                description: "Nome do Correntista"
                example: null
                type: 'null'
              cpfCorrentista:
                description: "CPF do correntista"
                example: null
                type: 'null'
              cnpjCorrentista:
                description: "CNPJ do correntista"
                example: null
                type: 'null'
              codigoBanco:
                description: "Código do Banco"
                example: null
                type: 'null'
              codigoAgencia:
                description: "Código da Agência"
                example: null
                type: 'null'
              digitoAgencia:
                description: "Dígito da Agência"
                example: null
                type: 'null'
              numeroConta:
                description: "Número da Conta"
                example: null
                type: 'null'
              digitoConta:
                description: "Dígito da Conta"
                example: null
                type: 'null'
              tipoContaBancaria:
                description: "Especifica o tipo de conta corrente, podendo ser:"
                example: null
                type: 'null'
                enum:
                - "Corrente"
                - "Poupança"
          riscos:
            type: array
            items:
              type: object
              properties:
                codigoProdutoRisco:
                  example: 10
                  description: "Código do Produto de Risco"
                  type: integer
                descricaoProdutoRisco:
                  description: "Descrição do Risco:"
                  example: "Morte"
                  type: string
                  enum:
                  - "Morte"
                  - "Invalidez"
                valorContribuicao:
                  description: "Valor da contribuição na contratação do Risco."
                  example: 40.58
                  type: number
                valorCapitalSegurado:
                  description: "Valor segurado na contratação do Risco."
                  example: 122594.54
                  type: number
                responsavelFinanceiro:
                  description: "Responsável Financeiro pelo Risco"
                  type: string
                  example: "Empregador"
      dadosBancarios:
        description: "tag que identifica as contas bancárias que o participante possui"
        type: array
        items:
          type: object
          properties:
            codigoBanco:
              description: "Código do banco"
              example: "001"
              type: string
            numeroAgencia:
              description: "Código da agência"
              example: "3025"
              type: string
            digitoAgencia:
              description: "Digito da agência"
              example: "8"
              type: string
            numeroConta:
              description: "Número da conta bancária"
              example: "123456"
              type: string
            digitoConta:
              description: "Dígito da conta bancária"
              example: "2"
              type: string
            tipoContaBancaria:
              description: "Especifica o tipo de conta corrente, podendo ser:"
              example: "Corrente"
              type: string
              enum:
              - "Corrente"
              - "Poupança"
      formaPagamentoContribuicao:
        description: "tag que especifica como será a forma de pagamento da contribuição, lembrando que se houverem mais de uma na lista de contribuicaoPlano deve haver o mesmo nro de formas nesta tag."
        type: object
        properties:
          diaVencimento:
            description: "Informação referente ao dia de vencimento da contribuição."
            example: "15"
            type: integer
          descricaoFormaPagamento:
            description: "Deve ser informado a forma de pagamento da contribuição:"
            example: "Débito em Conta"
            type: string
            enum:
            - "Boleto Bancário"
            - "Débito em Conta"
            - "Desconto em Folha"
          nomeCorrentista:
            example: "Nome do Correntista para Débito em Conta"
            description: "Nome do Correntista"
            type: string
          cpfCorrentista:
            description: "CPF do correntista"
            example: "12345678900"
            type: string
          cnpjCorrentista:
            description: "CNPJ do correntista"
            example: "12345678901234"
            type: string
          codigoBanco:
            description: "Código do Banco"
            example: "001"
            type: string
          codigoAgencia:
            description: "Código da Agência"
            example: "3025"
            type: string
          digitoAgencia:
            description: "Dígito da Agência"
            example: "8"
            type: string
          numeroConta:
            description: "Número da Conta"
            example: "123456"
            type: string
          digitoConta:
            description: "Dígito da Conta"
            example: "2"
            type: string
          tipoContaBancaria:
            description: "Especifica o tipo de conta corrente, podendo ser:"
            example: "Corrente"
            type: string
            enum:
            - "Corrente"
            - "Poupança"
          nomeInstituicaoDescontoFolha:
            description: "Nome da Instituição"
            example: ""
            type: string
          responsavelFinanceiro:
            description: "Funcionário"
            example: "Funcionário"
            type: string
      identidade:
        description: "tag que identifica os dados de identidade do participante"
        type: object
        properties:
          numero:
            description: "Número da identidade"
            type: string
            example: "878787"
          orgaoExpedidor:
            description: "Orgão expedidor"
            example: "SSP"
            type: string
          siglaUFExpedidor:
            description: "UF de expedição do documento, considerando que caso não seja preenchido, utilizará o estado de residência."
            type: string
            example: "SP"
          dataExpedicao:
            description: "Data em que o documento foi expedido."
            type: string
            example: "1990-12-27T00:00:00"
      enderecos:
        description: "tag que armazena os endereços do participante - não temos mais que 1 endereço no SOP"
        type: array
        example: ""
        items:
          type: object
          properties:
            logradouro:
              description: "Nome do logradouro"
              type: string
              example: "ABCDEFG"
            numero:
              description: "Número do endereço"
              type: string
              example: "61"
            complemento:
              description: "Informações complementares"
              type: string
              example: "Apto 22C"
            cep:
              description: "CEP para busca dos dados de endereço para preenchimento da cidade, bairro e logradouro."
              type: string
              example: "40000000"
      contatos:
        description: "tag que armazena os telefones do participante, sendo que temos a possibilidade de 2 telefones no SOP"
        type: array
        items:
          type: object
          properties:
            telefone:
              description: "Número do Telefone com DDD (2 Dígitos) – Nº com 8 dígito"
              type: string
              example: "(11)3333-9999"
            fax:
              description: "Número do Fax com DDD (2 Dígitos) – Nº com 8 dígito"
              type: string
              example: "(11)3333-9998"
            celular:
              description: "Número do Celular com DDD (2 Dígitos) – Nº com 8 ou 9 dígitos, depende do estado"
              type: string
              example: "(11)9999-9999"
            falarCom:
              description: "Contato para recados ou a própria pessoa"
              type: string
              example: "NomedoContato1"
            email:
              description: "Endereço eletrônico do participante"
              type: string
              example: "contato@dominio.com.br"
            tipoContato:
              description: "Tipo do contato cadastrado, podendo ser:"
              type: string
              example: "Residencial"
              enum:
              - "Comercial"
              - "Residencial"
      dependentes:
        description: "tag que armazena as informações dos dependentes, lembrando que devido a restrições do sistema, pode ter até 5 dependentes no máximo."
        type: array
        items:
          type: object
          properties:
            cpf:
              description: "CPF do Dependente"
              example: "22233344455"
              type: string
            dataNascimento:
              description: "Data de nascimento do Dependente."
              example: "1991-09-29T00:00:00"
              type: string
            nomeRelacaoDependencia:
              description: "Relação do dependente com participante, podendo ser:"
              example: "Filho(a)"
              type: string
              enum:
              - "Avô(ó)"
              - "Cônjuge"
              - "Filho(a)"
              - "Companheiro(a)"
              - "Irmão(ã)"
              - "Mãe"
              - "Neto(a)"
              - "Pai"
              - "Sobrinho(a)"
              - "Tio(a)"
              - "Nenhum"
              - "Outro"
            nome:
              description: "Nome do dependente."
              example: "Nome do Dependente 1"
              type: string
            percentualDistribuicao:
              description: "Valor correspondente a participação do dependente."
              example: 50
              type: integer
      userName:
        description: "Usuário logado no SOP"
        example: "nomeUsuarioSOP"
        type: string
  InsertPropostaAdesaoRetorno:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
            Message:
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            type: string
  LoginBody:
    type: object
    properties:
      Login:
        type: string
        example: "Teste"
      Password:
        type: string
        example: "SenhaTeste"
  ParticipanteAtivoRetorno:
    type: object
    properties:
      errors:
        type: array
        items: {}
        example:
      warnings:
        type: array
        items: {}
        example:
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              type: string
              example: "2 registro(s)encontrado(s)"
      result:
        type: object
        properties:
          codigoPlano:
            type: integer
            example: 1
          participantes:
            type: array
            items:
              type: object
              properties:
                inscricao:
                  type: string
                  example: 1902
                cpf:
                  type: string
                  example: 81678154994
                nome:
                  type: string
                  example: "Teste 2"
                instituidor:
                  type: string
                  example: "0027"
                status:
                  type: string
                  example: "Contribuição Normal"
  getInstituidorRetorno:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)."
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            codigo:
              example: "111"
              type: string
              description: "Código do Posto Atendimento"
            nome:
              example: "Teste Precaver Corporativo"
              type: string
              description: "Nome do Posto Atendimento"
            endereco:
              type: object
              properties:
                logradouro:
                  type: string
                  example: ""
                  description: "Nome do Logradouro"
                numero:
                  type: string
                  example: ""
                  description: "Número do Logradouro"
                complemento:
                  type: string
                  example: ""
                  description: "Complemento do Endereço"
                bairro:
                  type: string
                  example: ""
                  description: "Bairro"
                nomeCidade:
                  type: string
                  example: ""
                  description: "Nome da Cidade do Endereço"
                siglaUF:
                  type: string
                  example: ""
                  description: "Sigla da UF do Endereço"
                nomePais:
                  type: string
                  example: ""
                  description: "Nome do País do Endereço"
                cep:
                  type: string
                  example: ""
                  description: "CEP do Endereço"
                correspondencia:
                  type: string
                  example: "False"
                  description: "Se é Para Correspondência"
                origemEndereco:
                  type: string
                  example: "Atena"
                  description: "Origem do contato:"
                  enum:
                  - "SAU"
                  - "Atena"
                tipoEndereco:
                  type: string
                  example: ""
                  description: "Tipo de Endereço Cadastrado, podendo:"
                  enum:
                  - "Residencial"
                  - "Comercial"
                  - "Externo"
                dataInclusao:
                  example: "2017-09-28T09:56:50"
                  type: string
                  description: "Data de Inclusão"
  getTitulosCobranca:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "2 registro(s) encontrado(s)"
              type: string
      result:
        type: array
        items:
        - type: object
          properties:
            identificadorTitulo:
              example: 1788138
              description: "Identificador do Título da Cobrança"
              type: integer
            nomeSacado:
              example: "EMPREGADOR"
              description: "Nome do Sacado"
              type: string
            nossoNumero:
              example: "77250"
              description: "Nosso Número"
              type: integer
            vencimento:
              example: "2018-03-06T00:00:00"
              description: "Data de Vencimento"
              type: string
            status:
              example: "Em Aberto"
              description: "Status, pode ser:"
              type: string
              enum:
              - "Em Aberto"
              - "Pago"
              - "Cancelado"
            tipoCobranca:
              example: "Contribuição Mensal Empresa"
              description: "Tipo de Cobrança, podem"
              type: string
              enum:
              - "Desconto em Folha"
              - "Contribuição Mensal Empresa"
            valorTitulo:
              example: 1267.2
              description: "Valor do Título"
              type: number
            pagamento:
              example: "null"
              description: "Data do Pagamento"
              type: 'null'
            valorPago:
              example: 0
              description: "Valor de Pagamento"
              type: integer
            contrato:
              example: "Nome do Contrato"
              description: "Nome do Contrato de Contribuição"
              type: string
        - type: object
          properties:
            identificadorTitulo:
              example: 1788139
              description: ""
              type: integer
            nomeSacado:
              example: "EMPREGADOR"
              description: ""
              type: string
            nossoNumero:
              example: 77251
              description: ""
              type: integer
            vencimento:
              example: "2018-03-06T00:00:00"
              description: ""
              type: string
            status:
              example: "Em Aberto"
              description: ""
              type: string
            tipoCobranca:
              example: "Desconto em Folha"
              description: ""
              type: string
            valorTitulo:
              example: 1584
              description: ""
              type: integer
            pagamento:
              example: null
              description: ""
              type: 'null'
            valorPago:
              example: 0
              description: ""
              type: integer
            contrato:
              example: "Nome do Contrato"
              description: ""
              type: string
  getAdesaoPorPeriodo:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "2 registro(s) encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            cnpjEmpregador:
              example: "1234123424"
              description: ""
              type: string
            adesoes:
              type: array
              items:
                type: object
                properties:
                  inscricaoQuanta:
                    example: "1234123424"
                    description: "Número de Inscrição do Participante"
                    type: string
                  cpf:
                    example: "12345678900"
                    description: "CPF do Participante"
                    type: string
                  dataInclusao:
                    example: "2010-01-31T09:03:32"
                    description: "Data de inclusão da adesão"
                    type: string
  getContribuicoesAporteMovimentacaoDiaria:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            description: ""
            example: "12341234"
            type: string
          contribuicoesAporte:
            type: array
            items:
              type: object
              properties:
                dataVencimento:
                  description: ""
                  example: "2014-12-01T00:00:00"
                  type: string
                valor:
                  description: ""
                  example: 94.67
                  type: number
                numeroDocumentoProducaoDiaria:
                  description: ""
                  example: 1234
                  type: integer
  getAporteParticipanteByInscricaoCpf:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            inscricaoQuanta:
              example: "123123"
              description: ""
              type: string
            cpf:
              example: "12345678911"
              description: ""
              type: string
            nomeParticipante:
              example: "Nome do Participante XPTO"
              description: ""
              type: string
            diaVencimentoContribuicao:
              type: integer
              example: 15
              description: ""
            numeroConta:
              example: "123456"
              description: ""
              type: string
            digitoConta:
              example: "2"
              description: ""
              type: string
            codigoInstituidor:
              example: 1
              description: ""
              type: integer
            numeroPostoAtendimento:
              example: 8878
              description: ""
              type: integer
            codigoAngariador:
              example: "999"
              description: ""
              type: string
            nomeAngariador:
              example: "Nome do Agariador"
              description: ""
              type: string
            inicioAporte:
              type: string
              example: "2011-01-01T00:00:00"
              description: ""
            fimAporte:
              type: string
              example: "2011-11-01T00:00:00"
              description: ""
            tipoAporte:
              type: string
              example: "Programado"
              description: ""
            diaVencimento:
              type: integer
              example: 15
              description: ""
            origemAporte:
              type: string
              example: "Participante"
              description: ""
            valorAporte:
              type: number
              example: 95.54
              description: ""
            codigoBanco:
              type: string
              example: "99999"
              description: ""
            codigoAgencia:
              type: string
              example: "999"
              description: ""
            digitoAgencia:
              type: string
              example: "9"
              description: ""
            numeroContaAporte:
              type: string
              example: "123456"
              description: ""
            digitoContaAporte:
              type: string
              example: "2"
              description: ""
            nomeCorrentistaAporte:
              type: string
              example: "Nome do Correntista para Aporte"
              description: ""
            cpfCorrentistaAporte:
              type: string
              example: "12345678900"
              description: ""
            cnpjCorrentistaAporte:
              type: string
              example: "12345678901234"
              description: ""
            descricaoFormaPagamentoAporte:
              type: string
              example: "Débito em Conta"
              description: ""
            nomeInstituicaoDescontoFolhaAporte:
              type: string
              example: ""
              description: ""
            situacaoAporte:
              type: string
              example: "Ativo"
              description: ""
            dataPagamento:
              type: 'null'
              example: null
              description: ""
            dataVencimentoAporte:
              type: string
              example: "2011-11-01T00:00:00"
              description: ""
  postUpdateAporteProgramadoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "22690"
        description: "Número de inscrição do Participante"
        type: string
      origemAporte:
        example: "Participante"
        description: "Origem do Aporte, podemos ser:"
        enum:
        - "Participante"
        - "instituidor"
        - "Empregador"
        type: string
      codigoPlano:
        example: 2
        description: "Identificador do plano"
        type: integer
      diaVencimento:
        example: 5
        description: "Dia do vencimento do aporte"
        type: integer
      fimAporte:
        example: "2014-12-01T00:00:00"
        description: "Data de fim do aporte do participante"
        type: string
      codigoAngariador:
        example: 2
        description: "Código do Angariador"
        type: integer
      nomeAngariador:
        example: "Nome do Angariador"
        description: "Nome do Angariador"
        type: string
      userName:
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
        type: string
  postUpdateAporteProgramadoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Aporte atualizado com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  putInserirAporteParticipanteBody:
    type: object
    properties:
      inscricoesQuanta:
        description: "Número de inscrição do participante"
        example: "38"
        type: array
        items:
          type: object
          properties:
            inscricaoQuanta:
              description: "Número de inscrição do participante"
              example: "50"
              type: integer
      codigoPlano:
        type: integer
        description: "Identificador do plano"
        example: 2
      inicioAporte:
        type: string
        description: "Data de início do aporte do participante"
        example: "2014-09-01T00:00:00"
      fimAporte:
        type: string
        description: "Data de fim do aporte do participante"
        example: "2014-12-01T00:00:00"
      origemAporte:
        type: string
        description: ""
        example: "Empregador"
      tipoAporte:
        type: string
        description: "Pode ser: "
        example: "Único"
        enum:
        - "Único"
        - "Programado"
      diaVencimento:
        type: integer
        description: "Dia do Vencimento do aporte"
        example: 15
      valorAporte:
        type: number
        description: "Valor do Aporte"
        example: 90.67
      numeroDocumentoProducaoDiaria:
        type: integer
        description: "Número sequencial do SOP"
        example: 1234
      codigoAngariador:
        type: integer
        description: "Código do Angariador"
        example: 3894
      nomeAngariador:
        type: string
        description: "Nome do Angariador"
        example: "Quanta Angariador"
      origemAngariador:
        type: string
        description: "Pode ser: "
        example: "RH"
        enum:
        - "RH"
        - "Cooperativa"
      formaPagamento:
        type: object
        description: ""
        properties:
          descricaoFormaPagamento:
            type: string
            description: "Descrição da forma de pagemento. Opções: "
            example: "Débito em Conta"
            enum:
            - "Boleto Bancário"
            - "Débito em Conta"
            - "Desconto em folha"
          nomeCorrentista:
            type: string
            description: "Nome do Correntista"
            example: "Nome do correntista para Débito em Conta"
          cpfCorrentista:
            type: string
            description: "CPF do Correntista"
            example: "12345678900"
          cnpjCorrentista:
            type: string
            description: "CNPJ do Correntista"
            example: "12345678901234"
          codigoBanco:
            type: string
            description: "Código do banco da conta de débito"
            example: "001"
          codigoAgencia:
            type: string
            description: "Código da agência da conta de débito"
            example: "3025"
          digitoAgencia:
            type: string
            description: "Dígito da agência da conta de débito"
            example: "8"
          numeroConta:
            type: string
            description: "Número da conta de débito"
            example: "123456"
          digitoConta:
            type: string
            description: "Dígito da conta de débito"
            example: "2"
          tipoContaBancaria:
            type: string
            description: "Tipo de conta. Opções:"
            example: "Corrente"
            enum:
            - "Corrente"
            - "Salário"
      userName:
        type: string
        description: "Nome do usuário do SOP"
        example: "nomeUsuáioSOP"
  putInserirAporteParticipanteResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Aporte Programado inserido com sucesso!"
              type: string
      result:
        type: boolean
  postCancelarAporteUnicoBody:
    type: object
    properties:
      numeroDocumentoProducaoDiaria:
        type: string
        description: "Número sequencial do SOP"
        example: "1234"
      codigoPlano:
        type: integer
        description: "Indicador do plano"
        example: 2
      userName:
        type: string
        description: "Nome do usuário do SOP"
        example: "nomeUsuarioSOP"
  postCancelarAporteUnicoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              example: "Cancelamento de Aporte realizado com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  postGetBoletoByAporteBody:
    type: object
    properties:
      inscricaoQuanta:
        description: "Matricula do Participante"
        example: "89494"
        type: string
      origemAporte:
        description: "Origem do aporte, podendo ser: "
        enum:
        - "Participante"
        - "Empregador"
        example: "Empregador"
        type: string
      tipoAporte:
        description: "Tipo do aporte, podendo ser somente 'Único'"
        example: "Único"
        type: string
      vencimento:
        description: "Data de vencimento"
        example: "2018-03-25T00:00:00"
        type: string
      valorAporte:
        description: "Valor do Aporte"
        example: 132
        type: integer
      formaPagamento:
        description: "Forma de pagamento, podendo ser somente 'Boleto'"
        example: "Boleto"
        type: string
      userName:
        description: "Usuário responsável pelo serviço"
        example: "sop"
        type: string
      codigoPlano:
        description: "Identificador do Plano"
        example: 1
        type: integer
  postGetBoletoByAporteResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            message:
              example: "Aporte gerado com sucesso!"
              type: string
      codigoBoleto:
        type: string
        description: ""
        example: "23790.00108 90000.006008 51000.002603 7 75250000500000"
      boleto:
        type: string
        description: ""
        example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC 9GbGF0ZURlY29kZ..."
  getBoletoRiscoByIdentificador:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              example: "1 registro(s) encontrado(s)"
              type: string
      result:
        description: "Boleto como um array de byte"
        example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
        type: string
  getBoletoTituloBody:
    type: object
    properties:
      identificadoresTitulos:
        type: array
        items:
          type: object
          properties:
            identificadorTitulo:
              example: 452
              description: "Identificadores dos Títulos que são gerados os boletos. Identificadores dos Títulos são informados no retorno do serviço GetTituloCobrança."
              type: integer
  getBoletoTituloResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "Boleto gerado com sucesso!"
              type: string
      result:
        example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xl..."
        description: "Array de byte (Boleto)"
        type: string
  getCalendarioCobranca:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example : 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            identificadorVencimento:
              type: integer
              description: "Identificador do Calendário de cobrança"
              example: 2011
            competencia:
              description: "Competência do calendário de cobrança"
              example: "2017-08-01T00:00:00"
              type: string
            vencimento:
              description: "Vencimento do calendário de cobrança"
              example: "2017-09-25T00:00:00"
              type: string
            tipoVencimento:
              description: "Tipo de vencimento do calendário de cobrança"
              example: "Normal"
              type: string
            contratoEmpregador:
              description: "Contrato Empregador"
              example: "Empresa S.A."
              type: string
  getCobrancasNaoGerada:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "27 registro(s) encontrado(s)"
              type: string
      result:
        type: object
        properties:
          identificadorContrato:
            description: "Identificador do Contrato"
            example: "900"
            type: string
          nomeEmpregador:
            description: "Nome do Empregador"
            example: "Atena Tecnologia"
            type: string
          cnpjEmpregador:
            description: "CNPJ do Empregador"
            example: "01605706000140"
            type: string
          cobrancas:
            type: array
            items:
              type: object
              properties:
                nomeParticipante:
                  description: ""
                  example: "Nome do Participante"
                  type: string
                cpfParticipante:
                  description: ""
                  example: "CPF do Participante"
                  type: string
                contribuicaoBasica:
                  description: ""
                  example: 879.9
                  type: number
                contribuicaoRiscoInvalidez:
                  description: ""
                  example: 30.6
                  type: number
                contribuicaoRiscoMorte:
                  description: ""
                  example: 40.58
                  type: number
                responsavelFinanceiro:
                  description: ""
                  example: "Participante"
                  type: string
                vinculoEmpregador:
                  description: ""
                  example: "Funcionário"
                  type: string
                numeroContratoParticipante:
                  description: ""
                  example: "29"
                  type: string
  getContratoEmpregador:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)"
              type: string
      result:
        type: object
        properties:
          codigoPlano:
            example: 4
            description: "Identificador do plano"
            type: integer
          codigoInstituidor:
            type: integer
            example: 111
            description: "Código do Instituidor"
          nomeInstituidor:
            type: string
            example: "Nome do Instituidor"
            description: "Nome do Instituidor"
          contratoEmpregador:
            type: array
            items:
              type: object
              properties:
                identificadorContrato:
                  type: string
                  example: "001"
                  description: ""
                codigoAM:
                  type: string
                  example: "001"
                  description: ""
                empregador:
                  type: string
                  example: "Nome do Empregador"
                  description: ""
                cnpjEmpregador:
                  type: string
                  example: "CNPJ Empregador"
                  description: ""
                codigoPostoAtendimento:
                  type: string
                  example: "2"
                  description: ""
                identificadorEmpresaSeguradora:
                  type: string
                  example: "Mongeral"
                  description: ""
                diaVencimento:
                  type: integer
                  example: 25
                  description: ""
                dataInicio:
                  type: string
                  example: "2017-06-26-T00:00:00"
                  description: ""
                dataFim:
                  type: 'null'
                  example: null
                  description: ""
                periodicidadeAporte:
                  type: string
                  example: "Bimestral"
                  description: ""
                naoContemRiscoEmpregador:
                  type: boolean
                  example: false
                  description: "Pode ser true ou false"
                limiteAporte:
                  type: object
                  properties:
                    dataInicio:
                      type: string
                      example: "2018-01-01T00:00:00"
                      description: ""
                    dataFim:
                      type: 'null'
                      example: null
                      description: ""
                    limiteInicial:
                      type: integer
                      example: 100
                      description: ""
                    limiteFinal:
                      type: integer
                      example: 500
                      description: ""
                produtosRisco:
                  type: array
                  items:
                    type: object
                    properties:
                      dataInicio:
                        type: string
                        example: "2018-02-07T00:00:00"
                        description: ""
                      dataFim:
                        type: 'null'
                        example: null
                        description: ""
                      codigoProdutoRisco:
                        type: integer
                        example: 9
                        description: ""
                      produtoRisco:
                        type: string
                        example: "Invalidez - Empregador"
                        description: ""
                      tipoProdutoRisco:
                        type: string
                        example: "Invalidez"
                        description: ""
                      vinculo:
                        type: string
                        example: "Empregador"
                        description: ""
                      responsavelFinanceiro:
                        type: string
                        example: "Empregador"
                        description: ""
                      formaPagamento:
                        type: string
                        example: "Boleto Bancário"
                        description: ""
                tiposResgate:
                  type: array
                  items:
                    type: object
                    properties:
                      codigoTipoResgate:
                        type: integer
                        example: 71
                        description: ""
                      descricao:
                        type: string
                        example: "Resgate Parcelado"
                        description: ""
                      modalidade:
                        type: string
                        example: "Definitivo"
                        description: ""
                      tipoPagamento:
                        type: string
                        example: "Prazo Determinado"
                        description: ""
                      carencias:
                        type: array
                        items:
                          type: object
                          properties:
                            sexo:
                              type: string
                              example: "Masculino"
                              description: ""
                            tipo:
                              type: string
                              example: "Tempo de Adesão"
                              description: ""
                            tempo:
                              type: integer
                              example: 36
                              description: ""
                      composicaoSaldo:
                        type: array
                        items:
                        - type: object
                          properties:
                            descricao:
                              type: string
                              example: "Subconta Participante"
                              description: ""
                            tipoVinculo:
                              type: string
                              example: "Tempo de Resgate"
                              description: ""
                            tipoPercentual:
                              type: string
                              example: "Faixas de Percentual"
                              description: ""
                            percentualMinimo:
                              type: integer
                              example: 0
                              description: ""
                            percentualMaximo:
                              type: integer
                              example: 0
                              description: ""
                            faixasPercentual:
                              type: array
                              items:
                                type: object
                                properties:
                                  mesesMinimo:
                                    type: integer
                                    example: 0
                                    description: ""
                                  mesesMaximo:
                                    type: integer
                                    example: 24
                                    description: ""
                                  percentual:
                                    type: integer
                                    example: 0
                                    description: ""
                        - type: object
                          properties:
                            descricao:
                              type: string
                              example: "Subconta Aporte Empregador/Instituidor"
                              description: ""
                            tipoVinculo:
                              type: string
                              example: "Contribuições Mensais"
                              description: ""
                            tipoPercentual:
                              type: string
                              example: "Faixas de Percentual"
                              description: ""
                            percentualMinimo:
                              type: integer
                              example: 0
                              description: ""
                            percentualMaximo:
                              type: integer
                              example: 0
                              description: ""
                            faixasPercentual:
                              type: 'null'
                              example: null
                              description: ""
  postInsertContribuicaoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "1234234"
        description: "Número de inscrição do participante"
        type: string
      dataVencimento:
        type: string
        example: "2015-05-20T00:00:00"
        description: "Data de vencimento da contribuição"
      numeroDocumentoProducaoDiaria:
        type: integer
        example: 1234
        description: "Número sequencial do SOP"
      codigoBanco:
        type: string
        example: "001"
        description: "Código do banco de débito da contribuição"
      codigoAgencia:
        type: string
        example: "3025"
        description: "Código da agência de débito da contribuição"
      digitoAgencia:
        type: string
        example: "8"
        description: "Dígito da agência de débito da contribuição"
      numeroConta:
        type: string
        example: "123456"
        description: "Número da conta de débito da contribuição"
      digitoConta:
        type: string
        example: "2"
        description: "Dígito da conta de débito da contribuição"
      tipoContaBancaria:
        type: string
        example: "Corrente"
        description: "Tipo da conta de débito. Opções: "
        enum:
        - "Corrente"
        - "Salário"
      codigoPlano:
        type: integer
        example: 2
        description: "Identificador do Plano"
      contribuicaoPlano:
        type: array
        items:
          type: object
          properties:
            dataCompetencia:
              type: string
              example: "2015-05-01T00:00:00"
              description: "Data de Competência da contribuição"
            valor:
              type: number
              example: 879.97
              description: "Valor da contribuição"
      produtosRisco:
        type: array
        items:
          type: object
          properties:
            identificadorPropostaRiscoSeguradora:
              type: integer
              example: 938382
              description: "Identificador da proposta de risco na Mongeral"
            descricaoProdutoRisco:
              type: string
              example: "Invalidez"
              description: "Descição do produto de risco. Opções:"
              enum:
              - "Morte"
              - "Invalidez"
            dataCompetencia:
              type: string
              example: "2015-05-01T00:00:00"
              description: "Data de competência da contribuição de risco"
            codigoAngariador:
              type: integer
              example: 1
              description: "Código Angariador"
            nomeAngariador:
              type: string
              example: "Nome do Angariador"
              description: "Nome do Angariador"
            valorContribuicao:
              type: number
              example: 200.99
              description: "Valor da contribuição de risco"
      userName:
        type: string
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  postInsertContribuicaoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Contribuição(ões) inserida(s) com sucesso!"
              type: string
      result:
        type: boolean
  putInsertContribuicaoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "1234234"
        description: "Número de inscrição do participante"
        type: string
      dataVencimento:
        type: string
        example: "2015-05-20T00:00:00"
        description: "Data de vencimento da contribuição"
      numeroDocumentoProducaoDiaria:
        type: integer
        example: 1234
        description: "Número sequencial do SOP"
      codigoBanco:
        type: string
        example: "001"
        description: "Código do banco de débito da contribuição"
      codigoAgencia:
        type: string
        example: "3025"
        description: "Código da agência de débito da contribuição"
      digitoAgencia:
        type: string
        example: "8"
        description: "Dígito da agência de débito da contribuição"
      numeroConta:
        type: string
        example: "123456"
        description: "Número da conta de débito da contribuição"
      digitoConta:
        type: string
        example: "2"
        description: "Dígito da conta de débito da contribuição"
      tipoContaBancaria:
        type: string
        example: "Corrente"
        description: "Tipo da conta de débito. Opções:"
        enum:
        - "Corrente"
        - "Salário"
      codigoPlano:
        type: integer
        example: 2
        description: "Identificador do plano"
      contribuicaoPlano:
        type: array
        items:
          type: object
          properties:
            dataCompetencia:
              type: string
              example: "2015-05-01T00:00:00"
              description: "Data de competência da contribuição"
            valor:
              example: 150.87
              description: "Valor da contribuição"
              type: number
      produtosRisco:
        type: array
        items:
          type: object
          properties:
            identificadorPropostaRiscoSeguradora:
              example: "938382"
              description: "Identificador da proposta de resco na Mongeral"
              type: integer
            descricaoProdutoRisco:
              type: string
              example: "Invalidez"
              description: "Descrição do produto de risco. Opções:"
              enum:
              - "Morte"
              - "Invalidez"
            dataCompetencia:
              type: string
              example: "2015-05-01T00:00:00"
              description: "Data de competência da contribuição de risco"
            codigoAngariador:
              type: integer
              example: 1
              description: "Código do Angariador"
            nomeAngariador:
              type: string
              example: "Nome do Angariador"
              description: "Nome do Angariador"
            valorContribuicao:
              type: number
              example: 200.99
              description: "Valor da contribuição de risco"
      userName:
        type: string
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  putInsertContribuicaoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Contribuição(ões) inserida(s) com sucesso!"
              type: string
      result:
        type: boolean
  getContribuicoesPassiveisEstorno:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "2 registro(s) encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricao:
            example: "14070"
            description: "Inscrição do Participante Quanta"
            type: string
          codigoPlano:
            type: integer
            example: 1
            description: "Identificador do plano"
          codigoInstituidor:
            type: string
            example: "1"
            description: "Código do instituidor"
          contribuicoes:
            type: array
            items:
              type: object
              properties:
                evento:
                  type: string
                  example: "Contribuição Mensal para Aposentadoria"
                  description: ""
                dataPagamento:
                  type: string
                  example: "2017-06-27T00:00:00"
                  description: ""
                dataCompetencia:
                  type: string
                  example: "2017-06-01T00:00:00"
                  description: ""
                dataVencimento:
                  type: string
                  example: "2017-06-26T00:00:00"
                  description: ""
                valor:
                  type: number
                  example: 599.26
                  description: ""
  postUpdateDadosCadastraisBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "12341234"
        description: "Número de Inscrição do Participante"
        type: string
      numeroPostoAtendimento:
        example: 8878
        description: "Número do Posto de Atendimento"
        type: integer
      politicamenteExposto:
        example: "S"
        description: "Determina se o participante é Politicamente Exposto. Opções:"
        type: string
        enum:
        - "S"
        - "N"
      codigoProfissao:
        example: 1234
        description: "Código da Profissão do Participante"
        type: integer
      nomeOcupacaoProfissional:
        example: "Médico"
        description: "Nome da Ocupação profissional"
        type: string
      filiacaoNomeMae:
        example: "Nome da Mãe do Participante"
        description: "Nome da Mãe do Participante"
        type: string
      filiacaoNomePai:
        example: "Nome do Pai do Participante"
        description: "Nome do Pai do Participante"
        type: string
      nomeConjuge:
        example: "Nome do Cônjuge"
        description: "Nome do Cônjuge do Participante"
        type: string
      nomeEstadoCivil:
        example: "Solteiro(a)"
        description: "Nome do estado civil do participante"
        type: string
      nomeCidadeNaturalidade:
        example: "São Paulo"
        description: "Nome da cidade de naturalidade do participante"
        type: string
      siglaUFNaturalidade:
        example: "SP"
        description: "Sigla da UF de naturalidade do participante"
        type: string
      nomePaisNacionalidade:
        example: "Brasil"
        description: "Nome do País de nacionalidade do participante"
        type: string
      adesao:
        type: object
        properties:
          rendaDeclarada:
            example: 9485.9
            description: "Valor da renda do participante"
            type: number
          codigoPlano:
            example: 2
            description: "Identificador do plano"
            type: integer
      identidade:
        type: object
        properties:
          numero:
            type: string
            example: "878787"
            description: "Número da identidade"
          orgaoExpedidor:
            example: "SSP"
            description: "Órgão expedidor da identidade"
            type: string
          siglaUFExpedidor:
            example: "SP"
            description: "Sigla da UF expedidora da identidade"
            type: string
          dataExpedicao:
            type: string
            example: "1990-12-27T00:00:00"
            description: "Data de expedição da identidade"
      enderecos:
        type: array
        items:
          type: object
          properties:
            logradouro:
              type: string
              example: "ABCDEFG"
              description: "Logradouro do endereço do participante"
            numero:
              type: string
              example: "61"
              description: "Número do endereço do participante"
            complemento:
              type: string
              example: "Apto 22C"
              description: "Complemento do endereço do participante"
            cep:
              type: string
              example: "40000000"
              description: "CEP do endereço do participante"
            origemEndereco:
              type: string
              example: "SAU"
              description: "Origem do endereço: "
              enum:
              - "SAU"
              - "Atena"
            tipoEndereco:
              type: string
              example: "Externo"
              description: "Tipo de endereço. Opções:"
              enum:
              - "Comercial"
              - "Residemcial"
              - "Externo"
      contatos:
        type: array
        items:
        - type: object
          properties:
            telefone:
              type: string
              example: "(11)3333-9999"
              description: "Telefone do participante"
            fax:
              type: string
              example: "(11)3333-9998"
              description: "Fax do participante"
            celular:
              type: string
              example: "(11)9999-9999"
              description: "Celular do participante"
            falarCom:
              type: string
              example: "NomedoContato1"
              description: "Pessoa de contato"
            email:
              type: string
              example: ""
              description: "E-mail de contato"
            padrao:
              type: boolean
              example: true
              description: "Contato padrão"
            tipoContato:
              type: string
              example: "Residencial"
              description: "Tipo de contato. Opções:"
              enum:
              - "Comercial"
              - "Residencial"
              - "Externo"
            origemContato:
              type: string
              example: "SAU"
              description: "Origem do contato:"
              enum:
              - "SAU"
              - "Atena"
        - type: object
          properties:
            telefone:
              type: string
              example: "(11)2222-2222"
              description: ""
            fax:
              type: string
              example: ""
              description: ""
            celular:
              type: string
              example: "(11)9999-8580"
              description: ""
            email:
              type: string
              example: ""
              description: ""
            padrao:
              type: boolean
              example: false
              description: ""
            tipoContato:
              type: string
              example: "Comercial"
              description: ""
            origemContato:
              type: string
              example: "SAU"
              description: ""
      userName:
        type: string
        example: "NomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  postUpdateDadosCadastraisResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Alteração dos Dados realizada com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  getDadosContribuicaoByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              example: "2 registro(s) encontrado(s)."
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            description: "Número da inscrição do participante"
            example: "12341234"
            type: string
          dataUltimaAlteracaoContribuicao:
            type: string
            description: "Data da última alteração de contribuição"
            example: "2014-12-27T00:00:00"
          contribuicaoPlano:
            description: "Contribuições para o plano"
            type: array
            items:
              type: object
              properties:
                dataInicioContribuicao:
                  type: string
                  description: "Início da contribuição"
                  example: "2014-12-27T00:00:00"
                valor:
                  type: number
                  description: "Valor da Contribuição"
                  example: 879.99
          produtosRisco:
            description: "Produtos de risco"
            type: array
            items:
              type: object
              properties:
                identificadorPropostaRiscoSeguradora:
                  type: integer
                  description: "Identificador da proposta de risco na Mongeral"
                  example: 938382
                descricaoProdutoRisco:
                  type: string
                  description: "Descrição do produto de risco"
                  example: "Morte"
                dataUltimaAlteracao:
                  type: string
                  description: "Data da última alteração da contribuição de risco"
                  example: "1965-12-27T00:00:00"
                valorContribuicao:
                  type: number
                  description: "Valor da contribuição de risco"
                  example: 200.99
                valorCapitalSegurado:
                  type: integer
                  description: "Valor do capital segurado"
                  example: 100000
                codigoAngariador:
                  type: integer
                  description: "Código do Angariador"
                  example: 1
                nomeAngariador:
                  type: string
                  description: "Nome do Angariador"
                  example: "Nome do Angariador"
          aportesParticipante:
            description: "Aportes do participante"
            type: array
            items:
            - type: object
              properties:
                inicioAporte:
                  type: string
                  description: "Início do aporte"
                  example: "2014-09-01T00:00:00"
                fimAporte:
                  type: string
                  description: "Fim do aporte"
                  example: "2014-12-01T00:00:00"
                diaVencimento:
                  type: integer
                  description: "Dia do vencimento do aporte"
                  example: 15
                valorAporte:
                  type: number
                  description: "Valor do aporte"
                  example: 90.67
            - type: object
              properties:
                inicioAporte:
                  type: string
                  description: "Início do aporte"
                  example: "2015-02-11T00:00:00"
                fimAporte:
                  type: string
                  description: "Fim do aporte"
                  example: "2015-02-11T00:00:00"
                diaVencimento:
                  type: integer
                  description: "Dia do vencimento do aporte"
                  example: 25
                valorAporte:
                  type: integer
                  description: "Valor do aporte"
                  example: 1500
          aportesEmpregador:
            description: "Aportes do Empregador"
            type: array
            items:
              type: object
              properties:
                inicioAporte:
                  type: string
                  description: "Início do aporte"
                  example: "2010-01-01T00:00:00"
                fimAporte:
                  type: string
                  description: "Fim do aporte"
                  example: "2010-12-01T00:00:00"
                diaVencimento:
                  type: integer
                  description: "Dia do vencimento do aporte"
                  example: 15
                valorAporte:
                  type: number
                  description: "Valor do aporte"
                  example: 60.6
  postGerarAporteDebitoAutorizadoBody:
    type: object
    properties:
      inscricaoQuanta:
        description: "Inscrição do Participante"
        example: "848"
        type: string
      origemAporte:
        description: "Origem do aporte, podendo ser:"
        example: "Participante"
        type: string
        enum:
        - "Participante"
        - "Instituidor"
        - "Empregador"
      tipoAporte:
        description: "Tipo do Aporte (esse serviço reconhece somente o tipo aporte 'Único') "
        example: "Único"
        type: string
      vencimento:
        description: "Data de vencimento"
        example: "2018-07-16T00:00:00"
        type: string
      valorAporte:
        description: "Valor do aporte"
        example: 1000
        type: integer
      formaPagamento:
        description: "Forma de pagamento do aporte(esse serviço reconhece somente a forma de pagamento ('Débito em conta')"
        example: "Débito em conta"
        type: string
      codigoBanco:
        description: "Código do banco"
        example: "141"
        type: string
      numeroAgencia:
        description: "6946"
        example: "Número da agência"
        type: string
      numeroConta:
        description: "Número da conta"
        example: "4813"
        type: string
      digitoConta:
        description: "Digito da conta"
        example: ""
        type: string
      userName:
        description: "Nome do usuário"
        example: "username"
        type: string
      codigoPlano:
        description: "Código do plano"
        example: 3
        type: integer
  postGerarAporteDebitoAutorizadoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example:
              type: string
      result:
        type: boolean
  postInsertDocumentoParticipanteBody:
    type: object
    properties:
      inscricaoQuanta:
        description: "Número de Inscrição do Participante"
        example: "23424234"
        type: string
      codigoPlano:
        description: "Identificador do plano"
        example: 1
        type: integer
      documentos:
        type: array
        items:
          type: object
          properties:
            tipoDocumento:
              description: "Tipo de Documento"
              example: "Documento Avulso"
              type: string
            nomeDocumento:
              description: "Nome do Documento"
              example: "Ficha Matrícula"
              type: string
            numeroDocumento:
              description: "Contador do Documento"
              example: 1
              type: integer
            conteudoDocumento:
              description: "Conteúdo do documento (ex: 'JVBERi0xLjQNCjEgMCBvYmo...')"
              example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
              type: string
      userName:
        description: "Nome do usuário no SOP"
        example: "nomeUsuarioSOP"
        type: string
  postInsertDocumentoParticipanteResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      Informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              example: "Documento incluído com sucesso!"
              type: string
      Result:
        type: boolean
  getDocumentoParticipanteById:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 100
              type: integer
            Message:
              example: "O arquivo Ficha Matrícula.pdf foi serializado em um array de 183,00 Kbytes"
              type: string
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Ficha Matrícula.pdf"
              type: string
      result:
        example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
        type: string
        description: "Array de bytes representando o documento"
  getDocumentosParticipanteByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            description: "Númenro de inscrição do participante"
            example: "23424234"
            type: string
          documentos:
            description: "Lista de documentos"
            type: array
            items:
              type: object
              properties:
                idDocumento:
                  description: "Identificador único do documento"
                  example: 234234
                  type: integer
                tipoDocumento:
                  description: "Tipo de documento"
                  example: "Documento Associado"
                  type: string
                nomeDocumento:
                  description: "Nome do documento"
                  example: "Ficha Matrícula"
                  type: string
                tamanhoDocumento:
                  description: "Tamanho do documento"
                  example: 15054
                  type: integer
  getEmpregador:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)"
              type: string
      result:
        type: object
        properties:
          classificacao:
            type: string
            example: "Nacional"
            description: ""
          cnpj:
            type: string
            example: "01609706000180"
            description: ""
          nome:
            example: "Nome Empregador"
            description: ""
            type: string
          razaoSocial:
            example: "Razão Social Empregador"
            description: ""
            type: string
          nomeFantasia:
            example: "Nome Fantasia Empreador"
            description: ""
            type: string
          sigla:
            example: "Sigla Empregador"
            description: ""
            type: string
          instituidor:
            example: ""
            description: ""
            type: object
            properties:
              codigo:
                example: "999"
                description: "Código do Instituidor (Hierarquia)"
                type: string
              nome:
                example: "Unicred Brasil"
                description: "Nome do Instituidor (Hierarquia)"
                type: string
              endereco:
                example: ""
                description: ""
                type: object
                properties:
                  logradouro:
                    example: "Rua Bela Cintra"
                    description: "Nome do logradouro"
                    type: string
                  numero:
                    example: "967"
                    description: "Número do logradouro"
                    type: string
                  complemento:
                    example: "8º andar - Conj. 82"
                    description: "Complemento do endereço"
                    type: string
                  bairro:
                    example: "Consolação"
                    description: "Bairro"
                    type: string
                  nomeCidade:
                    example: "São Paulo"
                    description: "Nome da cidade do endereço"
                    type: string
                  siglaUF:
                    example: "SP"
                    description: "Sigla da UF do endereço"
                    type: string
                  nomePais:
                    example: "Brasil"
                    description: "Nome do País do endereço"
                    type: string
                  cep:
                    example: "01419909"
                    description: "CEP do endereço"
                    type: string
                  correspondencia:
                    example: "True"
                    description: "Se é para correspondência"
                    type: string
                  origemEndereco:
                    example: "Atena"
                    description: "Origem do contato: "
                    enum:
                    - "SAU"
                    - "Atena"
                    type: string
                  tipoEndereco:
                    example: "Comercial"
                    description: "Tipo do endereço cadastrado, podendo ser:"
                    type: string
                    enum:
                    - "Residencial"
                    - "Comercial"
                    - "Externo"
                  dataInclusao:
                    example: null
                    description: "Data de inclusão"
                    type: 'null'
          postoAtendimento:
            example: ""
            description: ""
            type: object
            properties:
              codigoAM:
                example: "AM0"
                description: ""
                type: string
              codigo:
                example: "0"
                description: "Código do Posto Atendimento (Hierarquia)"
                type: string
              nome:
                example: "TNT SILVEIRA"
                description: "Nome do Posto Atendimento  (Hierarquia)"
                type: string
          endereco:
            example: ""
            description: ""
            type: object
            properties:
              logradouro:
                example: "Descrição do Logradouro"
                description: "Nome do logradouro"
                type: string
              numero:
                example: "149"
                description: "Número do logradouro"
                type: string
              complemento:
                example: ""
                description: "Complemento do endereço"
                type: string
              bairro:
                example: "Nome do Bairro"
                description: "Bairro"
                type: string
              nomeCidade:
                example: "Nome da Cidade"
                description: "Nome da cidade do endereço"
                type: string
              siglaUF:
                example: "Nome do Estado"
                description: "Sigla da UF do endereço"
                type: string
              nomePais:
                example: "Nome do País"
                description: "Nome do País do endereço"
                type: string
              cep:
                example: "CEP"
                description: "CEP do endereço"
                type: string
              correspondencia:
                example: "True"
                description: "Se é para correspondência"
                type: string
              origemEndereco:
                example: "Atena"
                description: "Origem do contato: "
                enum:
                - "SAU"
                - "Atena"
                type: string
              tipoEndereco:
                example: "Comercial"
                description: "Tipo do endereço cadastrado, pode ser:"
                enum:
                - "Residencial"
                - "Comercial"
                - "Externo"
                type: string
              dataInclusao:
                example: "2017-11-13T11:36:21"
                description: "Data de inclusão"
                type: string
          contato:
            example: ""
            description: ""
            type: object
            properties:
              telefone:
                example: ""
                description: "Número do Telefone com DDD(2 Dígitos) - Nro com 8 dígito"
                type: string
              fax:
                example: ""
                description: "Número do Fax com DDD(2 Dígitos) - Nro com 8 dígito"
                type: string
              celular:
                example: ""
                description: "Número do Celular com DDD(2 Dígitos) - Nro com 8 ou 9 dígitos, depende do estado"
                type: string
              falarCom:
                example: ""
                description: "Contato para recados ou a própria pessoa"
                type: string
              email:
                example: ""
                description: "Endereço eletrônico do participante"
                type: string
              padrao:
                example: false
                description: ""
                type: boolean
              tipoContato:
                example: "Comercial"
                description: "Tipo do contato cadastrado, podendo ser:"
                enum:
                - "Residencial"
                - "Comercial"
                - "Externo"
                type: string
              origemContato:
                example: "Atena"
                description: "Origem do contato: "
                type: string
                enum:
                - "SAU"
                - "Atena"
              dataInclusao:
                example: "2017-11-13T11:36:21"
                description: "Data de inclusão"
                type: string
          observacao:
            example: null
            description: "Campo para informações complementares"
            type: 'null'
  getEntradasPortabilidade:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "3 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
        - type: object
          properties:
            codigoInstituidor:
              example: 13
              description: ""
              type: integer
            nomeInstiduidor:
              example: "Nome do Instituidor"
              description: ""
              type: string
            numeroPostoAtendimento:
              example: 1234
              description: ""
              type: integer
            nomePostoAtendimento:
              example: "SEDE"
              description: ""
              type: string
            dataSolicitacao:
              example: "2015-01-31T00:00:00"
              description: ""
              type: string
            dataEnvioQuanta:
              example: "2015-01-31T00:00:00"
              description: ""
              type: string
            dataRecebimento:
              example: "2015-01-31T00:00:00"
              description: ""
              type: string
            dataEnvioTermoQuanta:
              example: "2015-01-31T00:00:00"
              description: ""
              type: string
            dataRecebimentoTermoQuanta:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataEnvioTermoCedente:
              type: string
              example: ""
              description: ""
            dataRecebimentoTermoCedente:
              type: string
              example: ""
              description: ""
            dataCredito:
              type: string
              example: ""
              description: ""
            inscricaoQuanta:
              type: string
              example: "231234"
              description: ""
            nomeParticipante:
              type: string
              example: "Nome do Participante"
              description: ""
            nomeEntidadeCedente:
              type: string
              example: "Nome da Entidade Cedente"
              description: ""
            valorCredito:
              type: number
              example: 234728.98
              description: ""
            descricaoSituacaoPortabilidade:
              type: string
              example: "Cancelada"
              description: ""
            nomePlano:
              type: string
              example: "Nome do Plano"
              description: ""
        - type: object
          properties:
            codigoInstituidor:
              type: integer
              example: 13
              description: ""
            numeroPostoAtendimento:
              type: integer
              example: 1234
              description: ""
            nomePostoAtendimento:
              type: string
              example: "SEDE"
              description: ""
            dataSolicitacao:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataEnvioQuanta:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataRecebimento:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataEnvioTermoQuanta:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataRecebimentoTermoQuanta:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataEnvioTermoCedente:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataRecebimentoTermoCedente:
              type: string
              example: "2015-01-31T00:00:00"
              description: ""
            dataCredito:
              type: string
              example: ""
              description: ""
            inscricaoQuanta:
              type: string
              example: "231234"
              description: ""
            nomeParticipante:
              type: string
              example: "Nome do Participante"
              description: ""
            nomeEntidadeCedente:
              type: string
              example: "Nome da Entidade Cedente"
              description: ""
            valorCredito:
              type: number
              example: 234728.98
              description: ""
            descricaoSituacaoPortabilidade:
              type: string
              example: "Efetivada"
              description: ""
            nomePlano:
              type: string
              example: "Nome do Plano"
              description: ""
  getAcompanhamentoMetasPortabilidade:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            referencia:
              example: "Portabilidade"
              description: ""
              type: string
            mes:
              example: 10
              description: ""
              type: integer
            ano:
              example: 2014
              description: ""
              type: integer
            codigoInstituidor:
              example: 1234
              description: ""
              type: integer
            numeroPostoAtendimento:
              example: 83873
              description: ""
              type: integer
            quantidade:
              example: 20
              description: ""
              type: integer
            valorTotal:
              example: 108938.98
              description: ""
              type: number
  putInsertEntradaPortabilidadeBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "22577"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        example: 2
        description: "Identificador do plano"
        type: integer
      codigoInstituidor:
        example: 1
        description: "Código do Instituidor"
        type: integer
      numeroPostoAtendimento:
        type: integer
        example: 234
        description: "Número do posto de atendimento"
      nomeAngariador:
        type: string
        example: "Nome da Angariador"
        description: "Nome do angariador"
      codigoAngariador:
        type: integer
        example: 234
        description: "Código do angariador"
      nomeEntidadeCedente:
        type: string
        example: "Nome da Entidade Cedente"
        description: "Nome da entidade cedente da portabilidade"
      cnpjEntidadeCedente:
        type: string
        example: "23423423423423"
        description: "CNPJ da entidade cedente"
      nomePlano:
        type: string
        example: "Nome do Plano Cedente"
        description: "Nome do plano cedente"
      tipoPlano:
        type: string
        example: "PGBL"
        description: "Tipo de plano cedente"
      codigoSusep:
        type: string
        example: "87234234"
        description: "Código SUSEP do plano cedente"
      cnpjFundo:
        type: string
        example: "2342342424"
        description: "CNPJ do fundo"
      regimeImpostoRenda:
        type: string
        example: "Progressivo"
        description: "Regime tributário. Opções:"
        enum:
        - "Antecipada - Alíquotas Progressivas"
        - "Definitiva - Alíquotas Regressivas"
      matriculaEntidadeCedente:
        type: string
        example: "23489"
        description: "Matrícula do participante na entidade cedente"
      dataAdesaoEntidadCedente:
        type: string
        example: "2000-01-31T00:00:00"
        description: "Data de adesão do participante na entidade cedente"
      dataOpcaoEntidadeCedente:
        type: string
        example: "2000-01-31T00:00:00"
        description: "Data de opção do participante na entidade cedente"
      observacoes:
        type: string
        example: "observações da portabilidade..."
        description: "Observações sobre a portabilidade"
      pendente:
        type: boolean
        example: true
        description: "Status da portabilidade (true/false)"
      userName:
        type: string
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  putInsertEntradaPortabilidadeResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Entrada de Portabilidade incluída com sucesso!"
              type: string
      result:
        type: object
        example: ""
        description: ""
        properties:
          idPortabilidade:
            type: string
            example: "63738"
            description: ""
  getEntradasPortabilidadeSintetico:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "3 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            situacaoPortabilidade:
              example: "Cancelada"
              description: ""
              type: string
            qtdePortabilidades:
              example: 11
              description: ""
              type: integer
  getExtratoContribuicoes:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            example: "234324"
            description: ""
            type: string
          qtdeCotasContribuicao:
            type: number
            example: 1064.592
            description: ""
          qtdeCotasPortabilidade:
            type: number
            example: 448.62015
            description: ""
          qtdeCotasCapitalSegurado:
            type: integer
            example: 0
            description: ""
          valorSaldoParticipante:
            type: number
            example: 163.02
            description: ""
          dataSaldo:
            type: string
            example: "2015-01-31T00:00:00"
            description: ""
          valorCotaPerfil:
            type: number
            example: 18.2737482727
            description: ""
          descricaoPerfil:
            type: string
            example: "Arrojado"
            description: ""
          dataCotaPerfil:
            type: string
            example: "2017-02-10T00:00:00"
            description: ""
          contribuicoes:
            type: array
            example: ""
            description: ""
            items:
              type: object
              properties:
                dataCompetencia:
                  type: string
                  example: "2012-08-01T00:00:00"
                  description: ""
                dataPagamento:
                  type: string
                  example: "2012-08-15T00:00:00"
                  description: ""
                nomeContribuicao:
                  type: string
                  example: "Contrib. Mensal"
                  description: ""
                valorContribuicao:
                  type: integer
                  example: 50
                  description: ""
                valorInvalidez:
                  type: integer
                  example: 40
                  description: ""
                valorPensao:
                  type: integer
                  example: 20
                  description: ""
                taxaAdministrativa:
                  type: integer
                  example: 0
                  description: ""
                valorPago:
                  type: integer
                  example: 110
                  description: ""
                cancelada:
                  type: string
                  example: "N"
                  description: ""
  getExtratoDetalhado:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "25 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            mes:
              type: string
              example: "2018-03-16T00:00:00"
              description: "Mês de Competência do Saldo"
            saldoParticipante:
              type: number
              example: 4508.02
              description: "Valor do Saldo do Participante"
            saldoRentabilidade:
              type: number
              example: 10.56
              description: "Valor da Rentabilidade do Saldo do Participante"
            movimentacoes:
              type: array
              items:
                type: object
                properties:
                  tipo:
                    type: string
                    example: "Contribuição mensal Aposentadoria"
                    description: "Descrição do movimento "
                  natureza:
                    type: string
                    example: "Crédito"
                    description: "Pode ser:"
                    enum:
                    - "Crédito"
                    - "Débito"
                  data:
                    type: string
                    example: "2018-03-16T00:00:00"
                    description: "Data de Pagamento do movimento"
                  valor:
                    type: number
                    example: 10.56
                    description: "Valor do movimento"
  getExtratoResgate:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricao:
            example: "58585"
            type: string
          cpf:
            type: string
            example: "99999999999"
          nome:
            type: string
            example: "Nome do Participante"
          dataReferencia:
            type: string
            example: "2017-02-23T00:00:00"
          regressivos:
            type: array
            items:
              type: object
              properties:
                data:
                  type: string
                  example: "2006-03-01T00:00:00"
                aliquota:
                  type: integer
                  example: 10
                cotas:
                  type: number
                  example: 87.6307591429
                dinheiro:
                  type: number
                  example: 338.79
                isento:
                  type: integer
                  example: 0
                imposto:
                  type: number
                  example: 33.879
                liquido:
                  type: number
                  example: 304.911
          progressivo:
            type: array
            items:
              type: object
              properties:
                data:
                  type: string
                  example: "2006-03-01T00:00:00"
                aliquota:
                  type: integer
                  example: 10
                cotas:
                  type: number
                  example: 86.8651313290
                dinheiro:
                  type: number
                  example: 335.83
                isento:
                  type: integer
                  example: 0
                imposto:
                  type: number
                  example: 33.583
                liquido:
                  type: number
                  example: 302.247
  getFormaPagamentoByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            example: "234324"
            description: "Número de inscrição do participante"
            type: string
          diaVencimento:
            type: integer
            example: 15
            description: "Informação referente a data de vencimento da contribuição."
          descricaoFormaPagamento:
            type: string
            example: "Débito em Conta"
            description: "Deve ser informado a forma de pagamento da contribuição:"
            enum:
            - "Boleto Bancário"
            - "Débito em Conta"
            - "Desconto em Folha"
          nomeCorrentista:
            type: string
            example: "Nome do Correntista para Débito em Conta"
            description: "Nome do correntista "
          cpfCorrentista:
            type: string
            example: "12345678900"
            description: "CPF do correntista"
          cnpjCorrentista:
            type: string
            example: "12345678901234"
            description: "CNPJ do correntista"
          codigoBanco:
            type: string
            example: "001"
            description: "Código do banco da conta de débito"
          codigoAgencia:
            type: string
            example: "3025"
            description: "Código do banco da conta de débito"
          digitoAgencia:
            type: string
            example: "8"
            description: "Dígito da agência da conta de débito"
          numeroConta:
            type: string
            example: "123456"
            description: "Número da conta de débito"
          digitoConta:
            type: string
            example: "2"
            description: "Dígito da conta de débito"
          tipoContaBancaria:
            type: string
            example: "Corrente"
            description: "Tipo de conta.Opções:"
            enum:
            - "Corrente"
            - "Salário"
          nomeInstituicaoDescontoFolha:
            type: string
            example: ""
            description: "Nome da instituição para desconto em folha"
          responsavelFinanceiro:
            type: string
            example: "Funcionário"
            description: ""
  postUpdateFormaPagamentoBody:
    type: object
    properties:
      inscricaoQuanta:
        type: string
        example: "234324"
        description: "Número de inscrição do participante"
      codigoPlano:
        type: integer
        example: 2
        description: "Identificador do plano"
      diaVencimento:
        type: integer
        example: 15
        description: "Dia do vencimento da forma de pagamento"
      descricaoFormaPagamento:
        type: string
        description: "Descrição da forma de pagamento. Opções: "
        example: "Débito em Conta"
        enum:
        - "Boleto Bancário"
        - "Débito em Conta"
        - "Desconto em Folha"
      nomeCorrentista:
        type: string
        description: "Nome do correntista "
        example: "Nome do Correntista para Débito em Conta"
      cpfCorrentista:
        type: string
        description: "CPF do correntista"
        example: "12345678900"
      cnpjCorrentista:
        type: string
        description: "CNPJ do correntista"
        example: "12345678901234"
      codigoBanco:
        type: string
        description: "Código do banco da conta de débito"
        example: "001"
      codigoAgencia:
        type: string
        description: "Código da agência da conta de débito"
        example: "3025"
      digitoAgencia:
        type: string
        description: "Dígito da agência da conta de débito"
        example: "8"
      numeroConta:
        type: string
        description: "Número da conta de débito"
        example: "123456"
      digitoConta:
        type: string
        description: "Dígito da conta de débito"
        example: "2"
      tipoContaBancaria:
        type: string
        description: "Tipo de conta. Opções: "
        example: "Corrente"
        enum:
        - "Salário"
        - "Corrente"
      nomeInstituicaoDescontoFolha:
        type: string
        example: ""
        description: "Nome da instituição para desconto em folha"
      userName:
        type: string
        description: "Nome do usuário do SOP"
        example:  "nomeUsuarioSOP"
  postUpdateFormaPagamentoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Forma de Pagamento alterada com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  putUpdateFormaPagamentoParticipantesByEmpresaBody:
    type: object
    properties:
      cnpjEmpregador:
        description: "CNPJ da Empresa"
        example: "01605875000140"
        type: string
      contratoEmpregador:
        description: "Código do Contrato Empregador"
        example: 900
        type: integer
      username:
        description: "Nome do usuário logado"
        example: "usuario"
        type: string
      contribuicoesEmpresa:
        type: array
        items:
        - type: object
          properties:
            inscricaoQuanta:
              description: "Matrícula do Participante no Plano"
              example: 25229
              type: integer
            valorContribuicaoMensalEmpresa:
              type: integer
              description: "Valor da Contribuição Mensal da Empresa"
              example: 220.00
            descricaoSituacao:
              type: string
              description: "Situação do funcinário, podendo ser:"
              enum:
              - "Ativo"
              - "Desligado"
              - "Afastado sem Folha"
              example: "Ativo"
            dataDesligamento:
              type: 'null'
              description: ""
              example: null
            formaPagamento:
              type: string
              description: "Podendo ser:"
              example: "Boleto Bancário"
              enum:
              - "Boleto Bancário"
              - "Desconto em Folha"
        - type: object
          properties:
            inscricaoQuanta:
              type: integer
              description: "Matrícula do Participante no Plano"
              example: 41
            valorContribuicaoMensalEmpresa:
              type: integer
              description: "Valor da Contribuição Mensal da Empresa"
              example: 150
            descricaoSituacao:
              type: string
              description: "Situação do funcinário, podendo ser:"
              enum:
              - "Ativo"
              - "Desligado"
              - "Afastado sem Folha"
              example: "Desligado"
            dataDesligamento:
              type: string
              description: ""
              example: "2018-04-20T00:00:00"
            formaPagamento:
              type: 'null'
              description: "Podendo ser:"
              enum:
              - "Boleto Bancário"
              - "Desconto em Folha"
              example: null
  putUpdateFormaPagamentoParticipantesByEmpresaResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            message:
              example: "Alteração dos valores realizada com sucesso!"
              type: string
      result:
        type: object
  getFormaPagamentoRiscoByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "2 registro(s) encontrado(s)."
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            example: "10"
            description: ""
            type: string
          codigoPlano:
            example: 4
            description: ""
            type: integer
          formaPagmentoRiscos:
            type: array
            items:
              type: object
              properties:
                identificadorPropostaRiscoSeguradora:
                  example: 105250032
                  description: ""
                  type: integer
                descricaoProdutoRisco:
                  type: string
                  example: "Morte - Participante"
                  description: ""
                responsavelProdutoRisco:
                  type: string
                  example: "Participante"
                  description: ""
                empregador:
                  type: 'null'
                  example: null
                  description: ""
                dataInicio:
                  type: string
                  example: "2017-08-13T09:16:31"
                  description: ""
                diaVencimento:
                  type: integer
                  example: 25
                  description: ""
                descricaoFormaPagamento:
                  type: string
                  example: "Boleto"
                  description: ""
                nomeCorrentista:
                  type: 'null'
                  example: null
                  description: ""
                cpfCorrentista:
                  type: 'null'
                  example: null
                  description: ""
                cnpjCorrentista:
                  type: 'null'
                  example: null
                  description: ""
                codigoBanco:
                  type: 'null'
                  example: null
                  description: ""
                codigoAgencia:
                  type: 'null'
                  example: null
                  description: ""
                digitoAgencia:
                  type: 'null'
                  example: null
                  description: ""
                numeroConta:
                  type: 'null'
                  example: null
                  description: ""
                digitoConta:
                  type: 'null'
                  example: null
                  description: ""
                tipoContaBancaria:
                  type: 'null'
                  example: null
                  description: ""
  postUpdateFormaPagamentoRiscoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "73731"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        example: 1
        description: "Identificador do plano"
        type: integer
      diaVencimento:
        example: 25
        description: "Dia do vencimento da forma de pagamento"
        type: integer
      descricaoFormaPagamento:
        example: "Boleto Bancário"
        description: "Descrição da forma de pagamento. Opções: "
        enum:
        - "Boleto Bancário"
        - "Débito em Conta"
        - "Desconto em Folha"
        type: string
      identificadorPropostaRiscoSeguradora:
        type: string
        example: "105250005"
        description: "Identificador da Apólice na Seguradora"
      responsavelProdutoRisco:
        type: string
        example: "Participante"
        description: "Responsável pelo risco, podendo ser: "
        enum:
        - "Participante"
        - "Empregador"
      nomeCorrentista:
        type: 'null'
        example: null
        description: "Nome Correntista"
      cpfCorrentista:
        type: 'null'
        example: null
        description: "CPF Correntista"
      cnpjCorrentista:
        type: 'null'
        example: null
        description: "CNPJ Correntista"
      codigoBanco:
        type: 'null'
        example: null
        description: "Código do banco da conta de débito"
      codigoAgencia:
        type: 'null'
        example: null
        description: "Código da agência da conta de débito"
      digitoAgencia:
        type: 'null'
        example: null
        description: "Dígito da agência da conta de débito"
      numeroConta:
        type: 'null'
        example: null
        description: "Número da conta de débito"
      digitoConta:
        type: 'null'
        example: null
        description: "Dígito da conta de débito"
      tipoContaBancaria:
        type: 'null'
        example: null
        description: "Tipo de conta. Opções:"
        enum:
        - "Corrente"
        - "Salário"
      nomeInstituicaoDescontoFolha:
        type: 'null'
        example: null
        description: "Nome da instituição para desconto em folha"
      userName:
        type: string
        example: "Nome do Usuário"
        description: "Nome do usuário do SOP"
  postUpdateFormaPagamentoRiscoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Forma de Pagamento alterada com sucesso!"
              type: string
      result:
        type: boolean
  postGerarBoletoParcelasAVencerBody:
    type: object
    properties:
      inscricao:
        type: string
        example: "3714"
        description: "Número de inscrição do participante"
      cpf:
        type: string
        example: "27347519898"
        description: "CPF do participante"
      codigoInstituidor:
        type: string
        example: "1"
        description: "Código do instituidor"
      codigoPlano:
        type: string
        example: "1"
        description: "Identificador do plano"
      idParcela:
        type: integer
        example: 865946
        description: "Identificador da parcela"
  postGerarBoletoParcelasAVencerResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "E-mail enviado com sucesso"
              type: string
  postGerarBoletoParcelasVencidasBody:
    type: object
    properties:
      inscricao:
        description: "Número de inscrição do participante"
        example: "3714"
        type: string
      cpf:
        type: string
        description: "CPF do participante"
        example: "27347519898"
      codigoInstituidor:
        type: string
        description: "Código do Instituidor"
        example: "1"
      codigoPlano:
        type: string
        description: "Identificador do plano"
        example: "1"
      idParcela:
        type: integer
        description: "Identificador da Parcela"
        example: 865946
  postGerarBoletoParcelasVencidasResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "E-mail enviado com sucesso"
              type: string
  putInsertCobrancaRiscoEmpregadorBody:
    type: object
    properties:
      identificadorVencimento:
        example: "2011"
        description: "Identificador do calendário de cobrança fornecido pelo serviço 'calendarioCobranca'"
        type: string
      inscricoesQuanta:
        type: array
        items:
          type: object
          properties:
            inscricaoQuanta:
              type: string
              example: "8"
              description: "Inscrição do participante no plano"
      userName:
        example: "WSPEQ"
        description: "Nome do usuário do SOP"
        type: string
  putInsertCobrancaRiscoEmpregadorResponse200:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "As Cobranças foram geradas com sucesso."
              type: string
  putInsertCobrancaRiscoEmpregadorResponse100:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items:
          type: object
          properties:
            code:
              example: 100
              type: integer
            msg:
              example: "A geração foi concluída, porém ocorreu erro na geração das cobranças das seguintes inscrições:"
              type: string
      informations:
        type: array
        items: {}
      result:
        type: object
        properties:
          boleto:
            example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA0NjI0DQovRmlsdGVyIC...."
            type: string
          criticas:
            type: array
            items:
              type: object
              properties:
                inscricaoQuanta:
                  example: "38"
                  description: ""
                  type: string
                participante:
                  example: "Teste"
                  description: ""
                  type: string
                mensagem:
                  example: "Participante contém cobrança para a competência 01/03/2018."
                  description: ""
                  type: string
  putInsertCobrancaDescontoFolhaBody:
    type: object
    properties:
      identificadorVencimento:
        example: "2011"
        description: "Identificador do calendário de cobrança fornecido pelo serviço 'calendarioCobranca'"
        type: string
      inscricoesQuanta:
        type: array
        items:
          type: object
          properties:
            inscricaoQuanta:
              type: string
              example: "8"
              description: "Inscrição do participante no plano"
      userName:
        type: string
        example: "WSPEQ"
        description: "Nome do usuário do SOP"
  putInsertCobrancaDescontoFolhaResponse200:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "As Cobranças foram geradas com sucesso."
              type: string
      result:
        type: object
        properties:
          boleto:
            example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA0NjI0DQovRmlsdGVyIC...."
            description: ""
            type: string
          criticas:
            example: null
            description: ""
            type: 'null'
  putInsertCobrancaDescontoFolhaResponse100:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items:
          type: object
          properties:
            code:
              example: 100
              type: integer
            msg:
              example: "A geração foi concluída, porém ocorreu erro na geração das cobranças das seguintes inscrições:"
              type: string
      informations:
        type: array
        items: {}
      result:
        type: object
        properties:
          boleto:
            example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA0NjI0DQovRmlsdGVyIC...."
            description: ""
            type: string
          criticas:
            type: array
            items:
              type: object
              properties:
                inscricaoQuanta:
                  example: "38"
                  description: "Inscrição do participante no plano"
                  type: string
                participante:
                  example: "Teste"
                  description: ""
                  type: string
                mensagem:
                  example: "Participante contém cobrança para a competência 01/03/2018."
                  description: ""
                  type: string
  putInsertCobrancaAporteEmpregadorBody:
    type: object
    properties:
      identificadorVencimento:
        example: "2011"
        description: "Identificador do calendário de cobrança fornecido pelo serviço 'calendarioCobranca'"
        type: string
      inscricoesQuanta:
        type: array
        items:
          type: object
          properties:
            inscricaoQuanta:
              type: string
              example: "8"
              description: "Inscrição do participante no plano"
      userName:
        example: "WSPEQ"
        description: "Nome do usuário do SOP"
        type: string
  putInsertCobrancaAporteEmpregadorResponse200:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "As Cobranças foram geradas com sucesso."
              type: string
      result:
        type: object
        properties:
          boleto:
            example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA0NjI0DQovRmlsdGVyIC...."
            type: string
          criticas:
            example: null
            type: 'null'
  putInsertCobrancaAporteEmpregadorResponse100:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items:
          type: object
          properties:
            code:
              example: 100
              type: integer
            msg:
              example: "A geração foi concluída, porém ocorreu erro na geração das cobranças das seguintes inscrições:"
              type: string
      informations:
        type: array
        items: {}
      result:
        type: object
        properties:
          boleto:
            example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA0NjI0DQovRmlsdGVyIC...."
            description: ""
            type: string
          criticas:
            type: array
            items:
              type: object
              properties:
                inscricaoQuanta:
                  example: "38"
                  description: ""
                  type: string
                participante:
                  example: "Teste"
                  description: ""
                  type: string
                mensagem:
                  example: "articipante contém cobrança para a competência 01/03/2018."
                  description: ""
                  type: string
  postGerarInformeRendimentosBody:
    type: object
    properties:
      inscricao:
        example: "3714"
        description: "Número de inscrição do participante"
        type: string
      cpf:
        example: "27347519898"
        description: "CPF do participante"
        type: string
      codigoInstituidor:
        example: "1"
        description: "Código do Instituidor"
        type: string
      codigoPlano:
        example: "1"
        description: "Identificador do plano"
        type: string
      ano:
        example: 2016
        description: "Ano Calendário do Informe de Rendimentos"
        type: integer
  postGerarInformeRendimentosResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "E-mail enviado com sucesso"
              type: string
  getInadimplentesByCpfNomeInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            example: "234324"
            description: ""
            type: string
          cpfParticipante:
            type: string
            example: "12345678911"
            description: ""
          nomeParticipante:
            type: string
            example: "Nome do Participante"
            description: ""
          codigoInstituidor:
            type: integer
            example: 1
            description: ""
          nomeInstituidor:
            type: string
            example: "Nome do Instituidor"
            description: ""
          codigoPostoAtendimento:
            type: integer
            example: 8989
            description: ""
          nomePostoAtendimento:
            type: string
            example: "Nome do Posto de Atendimento"
            description: ""
          cnpjEmpregador:
            type: string
            example: "88216548143"
            description: ""
          formaPagamento:
            type: object
            properties:
              descricaoFormaPagamento:
                type: string
                example: "Débito em Conta"
                description: ""
              nomeCorrentista:
                type: string
                example: "Nome do Correntista para Débito em Conta"
                description: ""
              cpfCorrentista:
                type: string
                example: "12345678900"
                description: ""
              cnpjCorrentista:
                type: string
                example: "12345678901234"
                description: ""
              codigoBanco:
                type: string
                example: "001"
                description: ""
              codigoAgencia:
                type: string
                example: "3025"
                description: ""
              digitoAgencia:
                type: string
                example: "8"
                description: ""
              numeroConta:
                type: string
                example: "123456"
                description: ""
              digitoConta:
                type: string
                example: "2"
                description: ""
              tipoContaBancaria:
                type: string
                example: "Corrente"
                description: ""
          parcelasInadimplentes:
            type: array
            items:
              type: object
              properties:
                dataCompetencia:
                  type: string
                  example: "2014-09-01T00:00:00"
                  description: ""
                dataVencimento:
                  type: string
                  example: "2014-09-15T00:00:00"
                  description: ""
                valor:
                  type: number
                  example: 90.67
                  description: ""
                numeroDocumentoProducaoDiaria:
                  type: integer
                  example: 1234
                  description: ""
                descricaoEvento:
                  type: string
                  example: "Contribuição Mensal"
                  description: ""
                identificadorAtena:
                  type: string
                  example: "I6706016"
                  description: ""
  postUpdateInadimplentesBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "234324"
        description: ""
        type: string
      codigoPlano:
        type: integer
        example: 2
        description: ""
      parcelasInadimplentes:
        type: array
        items:
        - type: object
          properties:
            dataCompetencia:
              example: "2014-09-01T00:00:00"
              description: "Data de competência da parcela inadimplente"
              type: string
            dataVencimento:
              type: string
              example: "2014-12-01T00:00:00"
              description: "Data de vencimento da parcela inadimplente"
            valorCobrado:
              type: number
              example: 90.67
              description: "Valor cobrado"
            valorJuros:
              type: number
              example: 1.5
              description: "Valor dos juros"
            valorMulta:
              type: number
              example: 2.5
              description: "Valor da multa"
            valorTotalPago:
              type: number
              example: 94.67
              description: "Valor total pago"
            numeroDocumentoProducaoDiaria:
              type: integer
              example: 1234
              description: "Número sequencial do SOP"
            identificadorAtena:
              type: string
              example: "I6706016"
              description: "Identificador no AtenaPrevNet"
        - type: object
          properties:
            dataCompetencia:
              type: string
              example: "2014-10-01T00:00:00"
              description: "Data de competência da parcela inadimplente"
            dataVencimento:
              type: string
              example: "2014-12-01T00:00:00"
              description: "Data de vencimento da parcela inadimplente"
            valor:
              type: number
              example: 90.67
              description: "Valor cobrado"
            valorJuros:
              type: integer
              example: 1
              description: "Valor dos juros"
            valorMulta:
              type: number
              example: 2.5
              description: "Valor da multa"
            valorTotalPago:
              type: number
              example: 94.17
              description: "Valor total pago"
            numeroDocumentoProducaoDiaria:
              type: integer
              example: 12545
              description: "Número sequencial do SOP"
            identificadorAtena:
              example: "I6706017"
              description: "Identificador no AtenaPrevNet"
              type: string
        - type: object
          properties:
            dataCompetencia:
              type: string
              example: "2014-11-01T00:00:00"
              description: "Data de competência da parcela inadimplente"
            dataVencimento:
              type: string
              example: "2014-12-01T00:00:00"
              description: "Data de vencimento da parcela inadimplente"
            valor:
              type: number
              example: 90.67
              description: "Valor cobrado"
            valorJuros:
              type: number
              example: 0.5
              description: "Valor dos juros"
            valorMulta:
              type: number
              example: 2.5
              description: "Valor da multa"
            valorTotalPago:
              type: number
              example: 93.67
              description: "Valor total pago"
            numeroDocumentoProducaoDiaria:
              type: integer
              example: 32652
              description: "Número sequencial do SOP"
            identificadorAtena:
              type: string
              example: "I6706018"
              description: "Identificador no AtenaPrevNet"
  postUpdateInadimplentesResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Parcelas Inadimplentes alteradas com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  getAnosInformeRendimento:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "2 registro(s) encontrado(s)!"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            ano:
              example: 2017
              description: "Ano que contém movimentação que irá compor o informe de rendimento"
              type: integer
  getInformeRendimentosByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            message:
              example: "Informe de Rendimentos recuperado com sucesso!"
              type: string
      result:
        example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC 9GbGF0ZURlY29kZ..."
        type: string
  getParcelasAVencer:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "2 registro(s) encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            idParcela:
              example: "1857709"
              description: ""
              type: integer
            dataCobranca:
              example: "2018-01-20T00:00:00"
              description: ""
              type: string
            dataVencimento:
              example: "2018-01-20T00:00:00"
              description: ""
              type: string
            valorCobrado:
              example: 30
              description: ""
              type: integer
  getParcelasVencidas:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            idParcela:
              example: 865946
              description: ""
              type: integer
            dataCobranca:
              type: string
              example: "2017-01-23T00:00:00"
              description: ""
            dataVencimento:
              type: string
              example: "2017-01-23T00:00:00"
              description: ""
            valorCobrado:
              type: integer
              example: 10
              description: ""
  getParticipantesByEmpresa:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "25 registro(s) encontrado(s)!"
              type: string
      result:
        type: object
        properties:
          cnpjEmpregador:
            example: "01605874000140"
            description: "CNPJ da Empresa"
            type: string
          contratoEmpregador:
            type: string
            example: "900"
            description: "Código do Contrato Empregador"
          contribuicoesEmpresa:
            type: array
            items:
              type: object
              properties:
                matriculaEmpregador:
                  type: string
                  example: "48977"
                  description: "Matrícula do participante na empresa"
                nome:
                  type: string
                  example: "Nome do Participante1"
                  description: "Nome do participante"
                cpf:
                  type: string
                  example: "12012463009"
                  description: "Cpf do participante"
                inscricaoQuanta:
                  type: string
                  example: "25227"
                  description: "Matrícula do Participante no Plano"
                descricaoSituacao:
                  type: string
                  example: "Ativo"
                  description: "Status do participante na empresa:"
                  enum:
                  - "Ativo"
                  - "Licença"
                  - "Desligado"
                dataDesligamento:
                  type: 'null'
                  example: null
                  description: "Data de desligamento na empresa"
                contribuicaoEmpresa:
                  description: "Contribuições destinado a Empresa"
                  type: object
                  properties:
                    valorContribuicaoMensal:
                      type: integer
                      example: 0
                      description: "Valor da Contribuição Mensal"
                    valorContribuicaoInvalidez:
                      type: integer
                      example: 0
                      description: "Valor da Contribuição Invalidez"
                    valorContribuicaoMorte:
                      type: integer
                      example: 0
                      description: "Valor da Contribuição Morte"
                contribuicaoFuncionario:
                  type: object
                  properties:
                    valorContribuicaoMensal:
                      type: integer
                      example: 0
                      description: "Contribuições Desconto em Folha"
                    valorContribuicaoInvalidez:
                      type: integer
                      example: 0
                      description: "Valor da Contribuição Invalidez"
                    valorContribuicaoMorte:
                      type: integer
                      example: 0
                      description: "Valor da Contribuição Morte "
  getHistoricoPerfilInvestimentoByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              type: string
              example: "1 registro(s)encontrado(s)"
      result:
        type: object
        properties:
          inscricaoQuanta:
            example: "1234234"
            description: ""
            type: string
          historicoPerfis:
            type: array
            items:
              type: object
              properties:
                dataSolicitacaoAlteracao:
                  type: string
                  example: "2014-02-11T00:00:00"
                  description: ""
                dataInicioPerfil:
                  type: string
                  example: "2014-03-01T00:00:00"
                  description: ""
                dataFimPerfil:
                  type: string
                  example: "2014-09-30T00:00:00"
                  description: ""
                nomePerfilInvestimentoAnterior:
                  type: string
                  example: "Conservado"
                  description: ""
                nomePerfilInvestimentoAtual:
                  type: string
                  example: "Arrojado"
                  description: ""
                usuarioAlterou:
                  type: string
                  example: "userName"
                  description: ""
  postUpdatePerfilInvestimentoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "12334"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        type: integer
        example: 2
        description: "Identificador do plano"
      dataSolicitacaoAlteracao:
        example: "2015-02-01T00:00:00"
        description: "Data de solicitação de alteração do perfil de investimento"
        type: string
      competenciaAlteracao:
        type: string
        example: "2015-03-01T00:00:00"
        description: "Data de competência da alteração do perfil de investimento"
      nomePerfilInvestimento:
        type: string
        example: "Arrojado"
        description: "Nome do perfil de investimento. Opções:"
        enum:
        - "Arrojado"
        - "Conservador"
        - "Moderador"
      userName:
        type: string
        example: "NomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  postUpdatePerfilInvestimentoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Perfil alterado com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  getPlanosParticipante:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)!"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            codigoPlano:
              example: 1
              description: "Código do Plano"
              type: integer
            nome:
              example: "PRECAVER"
              description: "Nome do Plano"
              type: string
            codigoInstituidor:
              type: integer
              example: 585
              description: "Código do Instituidor"
            dataAdesao:
              type: string
              example: "2018-03-16T00:00:00"
              description: "Data do início da adesão do participante ao plano"
            situacao:
              type: string
              example: "Contribuição Normal"
              description: "Situação do Participante"
  postUpdateContribuicoesProducaoDiariaBody:
    type: object
    properties:
      producoes:
        type: array
        items:
          type: object
          properties:
            idLote:
              example: "123456"
              description: "Identificador do lote"
              type: integer
            inscricaoQuanta:
              example: "50626"
              description: "Número de inscrição do participante"
              type: string
            numeroDocumentoProducaoDiaria:
              type: integer
              example: 60532
              description: "Número sequencial do SOP"
            dataPagamento:
              type: string
              example: "2015-01-05T16:02:05"
              description: "Data de pagamento da contribuição"
            valorPago:
              type: number
              example: 105.62
              description: "Valor pago"
  postUpdateContribuicoesProducaoDiariaResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              example: "Atualizações realizadas com sucesso!"
              type: string
      result:
        type: boolean
        example: true
  getDadosContribuicoesProducaoDiaria:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "2 registro(s) encontrado(s)!"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            cpf:
              type: string
              description: ""
              example: "11111111111"
            inscricaoQuanta:
              type: string
              description: ""
              example: "12344"
            numeroDocumentoProducaoDiaria:
              type: integer
              description: ""
              example: 46545
            dataPagamento:
              type: string
              description: ""
              example: ""
            dataVencimento:
              type: string
              description: ""
              example: "2015-07-01T00:00:00"
            codigoInstituidor:
              type: integer
              description: ""
              example: 1
  getProducaoDiariaFinanceira:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "3 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            codigoInstituidor:
              example: 15
              description: ""
              type: integer
            numeroPostoAtendimento:
              type: integer
              example: 12344
              description: ""
            tipo:
              type: string
              example: "Aporte"
              description: ""
            nomeParticipante:
              type: string
              example: "Nome do Participante"
              description: ""
            inscricaoQuanta:
              type: string
              example: "62926"
              description: ""
            data:
              type: string
              example: "2014-09-01T00:00:00"
              description: ""
            nomeAngariador:
              type: string
              example: "Nome do Angariador"
              description: ""
            valor:
              type: number
              example: 90.67
              description: ""
  postUpdateStatusPropostaRiscoBody:
    type: object
    properties:
      produtosRisco:
        description: "Lista das propostas de risco"
        type: array
        items:
          type: object
          properties:
            inscricaoQuanta:
              example: "1234324"
              description: "Número de inscrição do participante"
              type: string
            identificadorPropostaRiscoSeguradora:
              type: integer
              example: 938382
              description: "Identificador da proposta de risco"
            descricaoProdutoRisco:
              type: string
              example: "Morte"
              description: "Descrição da proposta de risco. Opções:"
              enum:
              - "Morte"
              - "Invalidez"
            descricaoStatus:
              type: string
              example: "Pendente"
              description: "Descrição do status. Opções:"
              enum:
              - "Pendente"
              - "Implantada"
            dataStatus:
              type: string
              example: "2014-08-01T10:32:12"
              description: "Data de alteração do status"
            numeroDocumentoProducaoDiaria:
              type: integer
              example: 315120
              description: "Número sequencial do SOP"
            codigoPlano:
              type: integer
              example: 1
              description: "Identificador do plano"
      userName:
        type: string
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  postUpdateStatusPropostaRiscoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Status atualizados com sucesso!"
              type: string
      result:
        type: boolean
  putInsertPropostaSuplementarRiscoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "7"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        example: 4
        description: "Identificador do plano"
        type: integer
      codigoModeloProposta:
        type: 'null'
        example: null
        description: "Código do modelo da proposta"
      vencimento:
        type: string
        example: "2017-08-10T00:00:00"
        description: "Data do vencimento"
      produtoRisco:
        type: object
        properties:
          identificadorPropostaRiscoSeguradora:
            type: integer
            example: 105250011
            description: "Identificador da proposta de risco na Mongeral"
          dataInscricao:
            type: string
            example: "2017-08-10T00:00:00"
            description: "Data de inscrição na Mongeral"
          responsavel:
            type: string
            example: "Participante"
            description: "Responsável pelo Risco, podendo ser:"
            enum:
            - "Participante"
            - "Empregador"
          dpsPositiva:
            type: boolean
            example: false
            description: "Se a contribuição de risco contém DPS Positiva (true/false)"
          numeroPostoAtendimento:
            type: integer
            example: 1
            description: "Número do Posto de Atendimento"
          codigoAngariador:
            type: integer
            example: 8584
            description: "Código do Angariador, pois caso não existe na base, será cadastrado em tempo de execução."
          nomeAngariador:
            type: string
            example: "Nome Angariador"
            description: "Nome do Angariador, pois caso não existe na base, será cadastrado em tempo de execução."
          origemAngariador:
            type: string
            example: "RH ou Cooperativa"
            description: "Pode ser:"
            enum:
            - "RH"
            - "Cooperativa"
          numeroDocumentoProducaoDiaria:
            type: integer
            example: 325699
            description: ""
          responsavelFinanceiro:
            type: string
            example: "Participante"
            description: "Responsável Financeiro da Apólice, podendo ser:"
            enum:
            - "Participante"
            - "Empregador"
          formaPagamentoRisco:
            type: object
            properties:
              diaVencimento:
                type: integer
                example: 25
                description: "Dia do vencimento do Risco"
              descricaoFormaPagamento:
                type: string
                example: "Boleto Bancário"
                description: "Descrição da forma de pagamento. Opções:"
                enum:
                - "Boleto Bancário"
                - "Débito em Conta"
                - "Desconto em Folha"
              nomeCorrentista:
                type: 'null'
                example: null
                description: "Nome do correntista"
              cpfCorrentista:
                type: 'null'
                example: null
                description: "CPF do correntista"
              cnpjCorrentista:
                type: 'null'
                example: null
                description: "CNPJ do correntista"
              codigoBanco:
                type: 'null'
                example: null
                description: "Código do banco da conta de débito"
              codigoAgencia:
                type: 'null'
                example: null
                description: "Código da agência da conta de débito"
              digitoAgencia:
                type: 'null'
                example: null
                description: "Dígito da agência da conta de débito"
              numeroConta:
                type: 'null'
                example: null
                description: "Número da conta de débito"
              digitoConta:
                type: 'null'
                example: null
                description: "Dígito da conta de débito"
              tipoContaBancaria:
                type: 'null'
                example: null
                description: "Tipo de conta. Opções:"
                enum:
                - "Corrente"
                - "Salário"
          riscos:
            type: array
            items:
              type: object
              properties:
                codigoProdutoRisco:
                  type: integer
                  example: 10
                  description: "Código do Produto de Risco"
                descricaoProdutoRisco:
                  type: string
                  example: "Morte"
                  description: "Descrição do Risco:"
                  enum:
                  - "Morte"
                  - "Invalidez"
                valorContribuicao:
                  type: number
                  example: 40.58
                  description: "Valor da contribuição na contratação do Risco."
                valorCapitalSegurado:
                  type: number
                  example: 122594.54
                  description: "Valor segurado na contratação do Risco."
                responsavelFinanceiro:
                  type: string
                  example: "Empregador"
                  description: "Responsável Financeiro pelo Risco"
      userName:
        type: string
        example: "quanta"
        description: "Nome do usuário do SOP"
  putInsertPropostaSuplementarRiscoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Proposta(s) inserida(s) com sucesso!"
              type: string
      result:
        type: boolean
        example: true
  putInsertPropostaSuplementarRiscoVinculadoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "7"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        type: integer
        example: 4
        description: "Identificador do plano"
      vencimento:
        type: string
        example: "2017-08-10T00:00:00"
        description: "Data de Vencimento da Cobrança a ser gerada se for o plano PREVCOOP"
      codigoModeloProposta:
        type: 'null'
        example: null
        description: "Código do modelo da proposta"
      produtoRisco:
        type: object
        properties:
          identificadorPropostaRiscoSeguradora:
            type: integer
            example: 105250011
            description: "Identificador da proposta de risco na Mongeral"
          dataInscricao:
            type: string
            example: "2017-08-10T00:00:00"
            description: "Data de inscrição na Mongeral"
          responsavel:
            type: string
            example: "Participante"
            description: "Responsável pelo Risco, podendo ser: "
            enum:
            - "Participante"
            - "Empregador"
          dpsPositiva:
            type: boolean
            example: false
            description: "Se a contribuição de risco contém DPS Positiva (true/false)"
          numeroPostoAtendimento:
            type: integer
            example: 1
            description: "Número do Posto de Atendimento"
          codigoAngariador:
            type: integer
            example: 8584
            description: "Código do Angariador, pois caso não existe na base, será cadastrado em tempo de execução."
          nomeAngariador:
            type: string
            example: "Nome Angariador"
            description: "Nome do Angariador, pois caso não existe na base, será cadastrado em tempo de execução."
          numeroDocumentoProducaoDiaria:
            type: integer
            example: 325699
            description: ""
          responsavelFinanceiro:
            type: string
            example: "Participante"
            description: "Responsável Financeiro da Apólice, podendo ser:"
            enum:
            - "Participante"
            - "Empregador"
          formaPagamentoRisco:
            type: object
            properties:
              diaVencimento:
                type: integer
                example: 25
                description: "Dia do vencimento do Risco"
              descricaoFormaPagamento:
                type: string
                example: "Boleto Bacário"
                description: "Descrição da forma de pagamento.Opções: "
                enum:
                - "Boleto Bancário"
                - "Débito em Conta"
                - "Desconto em Folha"
              nomeCorrentista:
                type: 'null'
                example: null
                description: "Nome do correntista"
              cpfCorrentista:
                type: 'null'
                example: null
                description: "CPF do correntista"
              cnpjCorrentista:
                type: 'null'
                example: null
                description: "CNPJ do correntista"
              codigoBanco:
                type: 'null'
                example: null
                description: "Código do banco da conta de débito"
              codigoAgencia:
                type: 'null'
                example: null
                description: "Código da agência da conta de débito"
              digitoAgencia:
                type: 'null'
                example: null
                description: "Dígito da agência da conta de débito"
              numeroConta:
                type: 'null'
                example: null
                description: "Número da conta de débito"
              digitoConta:
                type: 'null'
                example: null
                description: "Dígito da conta de débito"
              tipoContaBancaria:
                type: 'null'
                example: null
                description: "Tipo de conta. Opções: "
                enum:
                - "Corrente"
                - "Salário"
          riscos:
            type: array
            items:
              type: object
              properties:
                descricaoProdutoRisco:
                  type: string
                  example: "Morte"
                  description: "Descrição do produto de risco. Opções:"
                  enum:
                  - "Morte"
                  - "Invalidez"
                valorContribuicao:
                  type: integer
                  example: 55
                  description: "Valor de contribuição para o risco"
                valorCapitalSegurado:
                  type: number
                  example: 122594.54
                  description: "Valor do capital segurado de risco"
      userName:
        type: string
        example: "quanta"
        description: "Nome do usuário do SOP"
  putInsertPropostaSuplementarRiscoVinculadoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Proposta(s) inserida(s) com sucesso!"
              type: string
      result:
        example: "JVBERi0xLjQNCjEgMCBvYmoNCjw8IA0KL0xlbmd0aCA1ODAwDQovRmlsdGVyIC9GbGF0ZURlY29kZ..."
        type: string
  getSaldoParticipanteByInscricaoCpf:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            example: "234324"
            description: "Número de inscrição do participante"
            type: string
          qtdeCotasContribuicao:
            example: 1064.592
            description: "Quantidade de cotas - conta contribuição"
            type: number
          qtdeCotasPortabilidade:
            type: number
            example: 448.62015
            description: "Quantidade de cotas - conta portabilidade"
          valorSaldoParticipante:
            type: number
            example: 163.02
            description: "Valor do saldo do participante"
          dataSaldo:
            type: string
            example: "2015-01-31T00:00:00"
            description: "Data do saldo"
          valorCotaPerfil:
            type: number
            example: 18.2737482727
            description: "Valor da cota"
  getSaldoDetalhadoParticipanteByInscricaoCpf:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricaoQuanta:
            description: "Número de inscrição do participante"
            example: "234324"
            type: string
          dataSaldo:
            description: "Data do saldo"
            example: "2015-01-31T00:00:00"
            type: string
          valorCotaPerfil:
            description: "Valor da cota"
            example: 18.2737482727
            type: number
          itensSaldo:
            type: array
            items:
              type: object
              properties:
                descricao:
                  description: "Descrição do evento do item saldo"
                  example: "Saldo Participante"
                  type: string
                cotas:
                  description: "Valor do item saldo em cotas"
                  example: 7051.9280838808
                  type: number
                valor:
                  description: "Valor do item saldo"
                  example: 25160.94
                  type: number
  getSimulacaoBeneficio:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s) encontrado(s)"
              type: string
      result:
        type: object
        properties:
          inscricao:
            example: "14300"
            description: "Inscrição do Participante"
            type: string
          codigoPlano:
            example: 1
            description: "Código do Plano"
            type: integer
          simulacoes:
            type: array
            items:
              type: object
              properties:
                tipo:
                  type: string
                  example: "Aposentadoria Programada - Pagamento Unico"
                  description: "Tipo do Benefício"
                percentualSimulacao:
                  type: integer
                  example: 0
                  description: "Percentual do Benefício"
                percentualAVista:
                  type: integer
                  example: 0
                  description: "Percentual à Vista"
                valorAVista:
                  type: integer
                  example: 0
                  description: "Valor à Vista"
                valorParcelaMensal:
                  type: number
                  example: 12002.596598968111491084
                  description: "Valor da Parcela Mensal"
                impostoRendaComParcelaAVista:
                  type: integer
                  example: 0
                  description: "Imposto de Renda com Parcela à Vista"
                valorLiquidoParcelaAVista:
                  type: integer
                  example: 0
                  description: "Valor Líquido com Parcela à Vista"
                impostoRendaParcelaMensal:
                  type: number
                  example: 3473.01
                  description: "Imposto de Renda Parcela Mensal "
                valorLiquidoParcelaMensal:
                  type: number
                  example: 8529.586598968111491084
                  description: "Valor Líquido Parcela Mensal"
          observacoes:
            example: "Existem contribuições sem cotas para o participante!"
            description: "Observações"
            type: string
  getSimulacaoResgate:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              type: integer
              example: 200
            msg:
              type: string
              example: "1 registro(s) encontrado(s)"
      result:
        type: object
        properties:
          inscricao:
            type: string
            example: "1234"
            description: ""
          codigoPlano:
            type: integer
            example: 1
            description: ""
          tipoResgate:
            type: string
            example: "Resgate Parcelado"
            description: ""
          modalidade:
            type: string
            example: "Definitivo"
            description: ""
          tipoPagamento:
            type: string
            example: "Prazo Determinado"
            description: ""
          parcelas:
            type: integer
            example: 10
            description: ""
          dataResgate:
            type: string
            example: "2017-08-17T00:00:00"
            description: ""
          valorQuota:
            type: number
            example: 4.01685719
            description: ""
          dataQuota:
            type: string
            example: "2017-07-11T00:00:00"
            description: ""
          valorBruto:
            type: number
            example: 3616.15
            description: ""
          imposto:
            type: number
            example: 731.14
            description: ""
          outrosDescontos:
            type: integer
            example: 0
            description: ""
          totalDescontos:
            type: number
            example: 731.14
            description: ""
          valorLiquido:
            type: number
            example: 2885.01
            description: ""
          composicoesSaldos:
            type: array
            items:
            - type: object
              properties:
                evento:
                  type: string
                  example: "Subconta  Participante"
                  description: ""
                quotas:
                  type: number
                  example: 8806.3809590787
                  description: ""
                valor:
                  type: number
                  example: 35373.974673354371870853
                  description: ""
                percentual:
                  type: integer
                  example: 100
                  description: ""
                quotasResgatavel:
                  type: number
                  example: 8806.3809590787
                  description: ""
                valorResgatavel:
                  type: number
                  example: 35373.97
                  description: ""
                quotasNaoResgatavel:
                  type: integer
                  example: 0
                  description: ""
                valorNaoResgatavel:
                  type: number
                  example: 0.004673354371870853
                  description: ""
            - type: object
              properties:
                evento:
                  type: string
                  example: "Subconta Aporte Empregador/Instituidor"
                  description: ""
                quotas:
                  type: number
                  example: 5295.0190025261
                  description: ""
                valor:
                  type: number
                  example: 21269.335151483592947659
                  description: ""
                percentual:
                  type: integer
                  example: 0
                  description: ""
                quotasResgatavel:
                  type: integer
                  example: 0
                  description: ""
                valorResgatavel:
                  type: integer
                  example: 0
                  description: ""
                quotasNaoResgatavel:
                  type: number
                  example: 5295.0190025261
                  description: ""
                valorNaoResgatavel:
                  type: number
                  example: 21269.335151483592947659
                  description: ""
  getSuspensoesContribuicaoByInscricao:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              type: string
              example: "1 registro(s)encontrado(s)"
      result:
        type: array
        items:
          type: object
          properties:
            dataSolicitacaoSuspensao:
              type: string
              example: "2014-08-10T15:39:23"
              description: "Data da solicitação para suspensão"
            inicioSuspensao:
              type: string
              example: "2014-09-01T00:00:00"
              description: "Data de inicio da suspensão"
            fimSuspensao:
              type: string
              example: "2014-12-01T00:00:00"
              description: "Data de fim da suspensão"
            dataReversao:
              type: 'null'
              example: null
              description: "Data da reversão/cancelamento"
            contribuicao:
              type: string
              example: "Aporte Empregador"
              description: "Evento de Contribuição, podendo ser:"
              enum:
              - "Aposentadoria"
              - "Morte"
              - "Invalidez"
              - "Aporte Empregador"
              - "Aporte Instituidor"
              - "Aporte Participante"
            observacoes:
              type: string
              example: "observações diversas sobre a suspensão da contribuição...."
              description: "Observação"
  putInsertSuspensaoContribuicaoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "22690"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        example: 2
        description: "Identificador do plano"
        type: integer
      dataSolicitacaoSuspensao:
        type: string
        example: "2014-08-10T15:39:23"
        description: "Data de solicitação da suspensão da contribuição"
      qtdeMesesSuspensao:
        type: integer
        example: 12
        description: "Quantidade de meses de suspensão da contribuição"
      contribuicao:
        type: string
        example: "Aposerntadoria"
        description: "Evento de Contribuição, podendo ser:"
        enum:
        - "Aposentadoria"
        - "Morte"
        - "Invalidez"
        - "Aporte Empregador"
        - "Aporte Instituidor"
        - "Aporte Participante"
      observacoes:
        type: string
        example: "observações diversas sobre a suspensão da contribuição...."
        description: "Observações sobre a suspensão da contribuição"
      userName:
        type: string
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
  putInsertSuspensaoContribuicaoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Suspensão de Contribuição inserida com sucesso!"
              type: string
      result:
        example: true
        description: ""
        type: boolean
  postReverterSuspensaoContribuicaoBody:
    type: object
    properties:
      inscricaoQuanta:
        example: "238472"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        type: integer
        example: 2
        description: "Identificador do plano"
      dataReversao:
        type: string
        example: "2014-12-01T00:00:00"
        description: "Data da reversão da suspensão de contribuição"
      contribuicao:
        type: string
        example: "Morte"
        description: "Evento de Contribuição, podendo ser:"
        enum:
        - "Aposentadoria"
        - "Morte"
        - "Invalidez"
        - "Aporte Empregador"
        - "Aporte Instituidor"
        - "Aporte Participante"
      userName:
        example: "nomeUsuarioSOP"
        description: "Nome do usuário do SOP"
        type: string
  postReverterSuspensaoContribuicaoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Reversão de Suspensão de Contribuição realizada com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  getSuspensoesContribuicaoContrato:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "1 registro(s)encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            dataSolicitacaoSuspensao:
              type: string
              example: "2017-08-22T18:19:52"
              description: "Data da solicitação da suspensão"
            inicioSuspensao:
              type: string
              example: "2017-08-01T00:00:00"
              description: "Data do início da suspensão"
            fimSuspensao:
              type: 'null'
              example: null
              description: "Data do fim da suspensão"
            contribuicaoAposentadoria:
              type: boolean
              example: true
              description: "Informar se a geração de cobrança para a Contribuição de Aposentadoria está suspensa. Campo recebe true ou false"
            contribuicaoRisco:
              type: boolean
              example: true
              description: "Informar se a geração de cobrança para a Contribuição de Risco está suspensa. Campo recebe true ou false"
            aporteEmpregadorInstituidor:
              type: boolean
              example: true
              description: "Informar se a geração de cobrança para o Aporte Empregador/Instituidor está suspensa. Campo recebe true ou false"
  putInsertSuspensaoContribuicaoContratoBody:
    type: object
    properties:
      identificadorContrato:
        type: string
        description: "Código identificador do Contrato"
        example: "900"
      cnpjEmpregador:
        type: string
        description: "CNPJ do Empregador"
        example: "01605706000140"
      codigoInstituidor:
        type: 'null'
        description: "Código do Instituidor"
        example: null
      dataSolicitacaoSuspensao:
        type: string
        description: "Data da solicitação da suspensão"
        example: "2017-08-28T00:00:00"
      dataFimSuspensao:
        type: string
        description: "Data do fim da suspensão"
        example: "2017-12-28T00:00:00"
      contribuicaoAposentadoria:
        type: boolean
        description: "Informar se a geração de cobrança para a Contribuição de Aposentadoria está suspensa. Campo recebe true ou false"
        example: true
      contribuicaoRisco:
        type: boolean
        description: "Informar se a geração de cobrança para a Contribuição de Risco está suspensa. Campo recebe true ou false"
        example: true
      aporteEmpregadorInstituidor:
        type: boolean
        description: "Informar se a geração de cobrança para o Aporte Empregador/Instituidor está suspensa. Campo recebe true ou false"
        example: true
      userName:
        type: string
        description: "Usuário responsável pelo serviço"
        example: "phafTcheTche"
      codigoPlano:
        type: integer
        description: "Identificador do plano"
        example: 4
  putInsertSuspensaoContribuicaoContratoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "Suspensão de Contribuição do Contrato inserida com sucesso!"
              type: string
      result:
        example: null
        type: 'null'
  putReverterSuspensaoContribuicaoContratoBody:
    type: object
    properties:
      identificadorContrato:
        type: string
        description: "Código identificador do Contrato"
        example: "900"
      cnpjEmpregador:
        type: string
        description: "CNPJ do Empregador"
        example: "01605706000140"
      codigoInstituidor:
        type: 'null'
        description: "Código do Instituidor"
        example: null
      dataReferencia:
        type: string
        description: "Data de referência para busca das suspensões"
        example: "2017-08-28T00:00:00"
      contribuicaoAposentadoria:
        type: boolean
        description: "Informar se a geração de cobrança para a Contribuição de Aposentadoria está suspensa. Campo recebe true ou false"
        example: true
      contribuicaoRisco:
        type: boolean
        description: "Informar se a geração de cobrança para a Contribuição de Risco está suspensa. Campo recebe true ou false"
        example: true
      aporteEmpregadorInstituidor:
        type: boolean
        description: "Informar se a geração de cobrança para o Aporte Empregador/Instituidor está suspensa. Campo recebe true ou false"
        example: false
      userName:
        type: string
        description: "Usuário responsável pelo serviço"
        example: "phafTcheTche"
      codigoPlano:
        type: integer
        description: "Identificador do plano"
        example: 4
  putReverterSuspensaoContribuicaoContratoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            msg:
              example: "Suspensão de Contribuição do Contrato cancelada com sucesso!"
              type: string
      result:
        example: null
        type: 'null'
  getTipoResgate:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            code:
              example: 200
              type: integer
            msg:
              example: "4 registro(s) encontrado(s)"
              type: string
      result:
        type: array
        items:
          type: object
          properties:
            identificadorTipoResgate:
              example: 71
              description: ""
              type: integer
            descricao:
              example: "Resgate Parcelado"
              description: ""
              type: string
            modalidade:
              example: "Definitivo"
              description: ""
              type: string
            tipoPagamento:
              example: "Prazo Determinado"
              description: ""
              type: string
            carencias:
              type: array
              items:
                type: object
                properties:
                  sexo:
                    example: "Masculino"
                    description: ""
                    type: string
                  tipo:
                    type: string
                    example: "Tempo de Adesão"
                    description: ""
                  tempo:
                    type: integer
                    example: 36
                    description: ""
            composicaoSaldo:
              type: array
              items:
              - type: object
                properties:
                  descricao:
                    type: string
                    example: "Subconta Participante"
                    description: ""
                  tipoVinculo:
                    type: string
                    example: "Tempo de Resgate"
                    description: ""
                  tipoPercentual:
                    type: string
                    example: "Faixas de Percentual"
                    description: ""
                  percentualMinimo:
                    type: integer
                    example: 0
                    description: ""
                  percentualMaximo:
                    type: integer
                    example: 0
                    description: ""
                  faixasPercentual:
                    type: array
                    items:
                      type: object
                      properties:
                        mesesMinimo:
                          type: integer
                          example: 0
                          description: ""
                        mesesMaximo:
                          type: integer
                          example: 24
                          description: ""
                        percentual:
                          type: integer
                          example: 0
                          description: ""
              - type: object
                properties:
                  descricao:
                    type: string
                    example: "Subconta Aporte Participante"
                    description: ""
                  tipoVinculo:
                    type: string
                    example: "Tempo de Adesão"
                    description: ""
                  tipoPercentual:
                    type: string
                    example: "Percentual Fixo"
                    description: ""
                  percentualMinimo:
                    type: integer
                    example: 100
                    description: ""
                  percentualMaximo:
                    type: integer
                    example: 100
                    description: ""
                  faixasPercentual:
                    type: 'null'
                    example: null
                    description: ""
  postTornarParticipanteVinculadoBody:
    type: object
    properties:
      cnpjEmpregador:
        example: "CNPJ do Empregador"
        description: "CNPJ do Empregador"
        type: string
      inscricaoOficial:
        example: "Inscrição do Participante"
        description: "Número de inscrição do participante"
        type: string
      codigoPlano:
        example: 1
        description: "Identificador do plano"
        type: integer
      userName:
        example: "Nome do Usuário"
        description: "Nome do usuário do SOP"
        type: string
  postTornarParticipanteVinculadoResponse:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              example: 200
              type: integer
            Message:
              example: "Solicitação de Participante Vinculado inserida com sucesso!"
              type: string
      result:
        example: true
        type: boolean
  getParticipanteDadosBasicos:
    type: object
    properties:
      errors:
        type: array
        items: {}
      warnings:
        type: array
        items: {}
      informations:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              example: 200
            Message:
              type: string
              example: "5 registro(s)encontrado(s)"
      result:
        type: array
        items:
          type: object
          properties:
            nome:
              example: "Nome do Participante 1"
              description: "Nome do Participante"
              type: string
            cpf:
              example: 11111111111
              description: "CPF do Participante"
              type: integer


x-amazon-apigateway-documentation:
  version: "1"
  createdDate: "2018-08-01T14:35:41Z"
  documentationParts:
  - location:
      type: "MODEL"
      name: "Empty"
    properties:
      title: "Empty Schema"
  - location:
      type: "RESPONSE"
      path: "/api/v1/acesso/login"
      method: "POST"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/aporteProgramado/inserir"
      method: "PUT"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/aporteProgramado/inserir"
      method: "PUT"
      statusCode: "401"
    properties:
      description: "401 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/extratoDetalhado"
      method: "GET"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/extratoDetalhado"
      method: "GET"
      statusCode: "401"
    properties:
      description: "401 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/extratocontribuicoes"
      method: "GET"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/extratocontribuicoes"
      method: "GET"
      statusCode: "401"
    properties:
      description: "401 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/propostaAdesao/inserir"
      method: "PUT"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/propostaAdesao/inserir"
      method: "PUT"
      statusCode: "401"
    properties:
      description: "401 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/saldoReserva"
      method: "GET"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante/saldoReserva"
      method: "GET"
      statusCode: "401"
    properties:
      description: "401 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante"
      method: "GET"
      statusCode: "200"
    properties:
      description: "200 response"
  - location:
      type: "RESPONSE"
      path: "/api/v1/beneficio/participante"
      method: "GET"
      statusCode: "401"
    properties:
      description: "401 response"

